(undo-tree-save-format-version . 1)
"5df3229efcbcbb58477e560fb9865e1d9a6f99fb"
[nil nil nil nil (26051 38383 854147 686000) 0 nil]
([nil nil ((1 . 2) (t 26051 38342 682077 463000)) nil (26051 38383 854146 680000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 2) nil (26051 38383 854145 721000) 0 nil])
([nil nil ((1 . 4)) nil (26051 38383 854143 460000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("b" 0 1 (fontified t)) . -3) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 4) nil (26051 38383 854142 450000) 0 nil])
([nil nil ((2 . 8)) nil (26051 38383 854137 266000) 0 nil])
([nil nil ((apply yas--snippet-revive 5 12 #s(yas--snippet nil nil #s(yas--exit 12 nil) 34 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12 nil) 34 nil nil nil nil)) (5 . 12) (#("struct $0" 0 9 (fontified nil)) . 5) (5 . 14) (#("str" 0 3 (fontified nil)) . 5) (5 . 8) (#("struct" 0 6 (fontified nil)) . -5) (5 . 11) (#("str" 0 3 (face font-lock-type-face fontified t)) . -5) (undo-tree-id25 . -3) (undo-tree-id26 . -1) (undo-tree-id27 . -3) 8) nil (26051 38383 854135 925000) 0 nil])
([nil nil ((12 . 20)) nil (26051 38383 854131 876000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 20) (20 . 24) (19 . 21)) nil (26051 38383 854131 133000) 0 nil])
([nil nil ((20 . 24)) nil (26051 38383 854130 170000) 0 nil])
([nil nil ((nil rear-nonsticky nil 85 . 86) (nil fontified nil 24 . 86) (24 . 86)) nil (26051 38383 854129 492000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -27) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -28) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 29) nil (26051 38383 854127 849000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 58)) nil (26051 38383 853519 336000) 0 nil])
([nil nil ((1 . 2)) nil (26051 38383 853518 751000) 0 nil])
([nil nil ((1 . 2)) nil (26051 38383 853518 178000) 0 nil])
([nil nil ((1 . 6)) nil (26051 38383 853517 575000) 0 nil])
([nil nil ((5 . 8) (#("a" 0 1 (fontified nil)) . 5) (5 . 6) (#("ash" 0 3 (fontified nil)) . -5) (5 . 8) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 6) nil (26051 38383 853516 249000) 0 nil])
([nil nil ((8 . 12)) nil (26051 38383 853511 251000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 12) nil (26051 38383 853510 173000) 0 nil])
([nil nil ((10 . 12) (#("v" 0 1 (fontified nil)) . 10) (10 . 11) (#("vk" 0 2 (fontified nil)) . -10) (10 . 12) (#("v" 0 1 (fontified t)) . -10) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 11) nil (26051 38383 853504 773000) 0 nil])
([nil nil ((12 . 13)) nil (26051 38383 853483 233000) 0 nil])
([nil nil ((99 . 100) 13) nil (26051 38383 853479 405000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -38) 46 (t 26051 38383 895413 270000)) nil (26051 38412 760837 103000) 0 nil])
([nil nil ((96 . 98)) nil (26051 38412 760836 148000) 0 nil])
([nil nil ((98 . 100)) nil (26051 38412 760835 646000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 103 108 nil nil nil t #s(yas--exit 115 nil))) #s(yas--exit 115 nil) 35 nil #s(yas--field 1 103 108 nil nil nil t #s(yas--exit 115 nil)) nil nil)) (98 . 112) (#("impl $1 {
    $0
}" 0 18 (fontified nil)) . 98) (98 . 116) (#("im" 0 2 (fontified nil)) . 98) (98 . 100) (#("impl" 0 4 (fontified nil)) . -98) (98 . 102) (#("im" 0 2 (fontified t)) . -98) (undo-tree-id63 . -2) 100) nil (26051 38412 760834 568000) 0 nil])
([nil nil ((103 . 104)) nil (26051 38412 760832 122000) 0 nil])
([nil nil ((103 . 108) (#("Q" 0 1 (fontified nil)) . 103) (103 . 104) (#("Queue" 0 5 (fontified nil)) . -103) (103 . 108) (#("Q" 0 1 (face font-lock-type-face fontified t)) . -103) (undo-tree-id62 . -1) 104) nil (26051 38412 760831 25000) 0 nil])
([nil nil ((apply yas--snippet-revive 98 117 #s(yas--snippet nil (#s(yas--field 1 103 108 nil nil nil t #s(yas--exit 115 nil))) #s(yas--exit 115 nil) 35 nil #s(yas--field 1 103 108 nil nil nil t #s(yas--exit 115 nil)) nil nil))) nil (26051 38412 760829 67000) 0 nil])
([nil nil ((115 . 132)) nil (26051 38412 760828 566000) 0 nil])
([nil nil ((131 . 136) (#("Q" 0 1 (fontified nil)) . 131) (131 . 132) (#("Queue" 0 5 (fontified nil)) . -131) (131 . 136) (#("Q" 0 1 (face font-lock-type-face fontified t)) . -131) (undo-tree-id61 . -1) 132) nil (26051 38412 760827 596000) 0 nil])
([nil nil ((136 . 139)) nil (26051 38412 760825 464000) 0 nil])
([nil nil ((140 . 144) (#("        " 0 8 (fontified nil)) . 139) (139 . 147) (#("    " 0 4 (fontified nil)) . 139) (undo-tree-id60 . -4) (138 . 144)) nil (26051 38412 760824 498000) 0 nil])
([nil nil ((139 . 147)) nil (26051 38412 760822 647000) 0 nil])
([nil nil ((126 . 132)) nil (26051 38412 760821 633000) 0 nil])
([nil nil ((132 . 136)) nil (26051 38412 760820 968000) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -135) (undo-tree-id59 . -1) 136) nil (26051 38412 760820 108000) 0 nil])
([nil nil ((135 . 138)) nil (26051 38412 760818 685000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -136) (undo-tree-id57 . -1) (#("k" 0 1 (fontified t)) . -137) (undo-tree-id58 . -1) 138) nil (26051 38412 760817 864000) 0 nil])
([nil nil ((136 . 140)) nil (26051 38412 760815 732000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -139) (undo-tree-id56 . -1) 140) nil (26051 38412 760815 29000) 0 nil])
([nil nil ((#("vk::" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t)) . -135) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) 139) nil (26051 38412 760813 159000) 0 nil])
([nil nil ((135 . 136)) nil (26051 38412 760810 342000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -135) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 136) nil (26051 38412 760809 467000) 0 nil])
([nil nil ((135 . 137)) nil (26051 38412 760806 627000) 0 nil])
([nil nil ((135 . 138) (#("as" 0 2 (fontified nil)) . 135) (135 . 137) (#("ash" 0 3 (fontified nil)) . -135) (135 . 138) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -135) (undo-tree-id40 . -2) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) 137) nil (26051 38412 760804 956000) 0 nil])
([nil nil ((138 . 141)) nil (26051 38412 760795 641000) 0 nil])
([nil nil ((140 . 146) (#("D" 0 1 (fontified nil)) . 140) (140 . 141) (#("Device" 0 6 (fontified nil)) . -140) (140 . 146) (#("D" 0 1 (face font-lock-type-face fontified t)) . -140) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 141) nil (26051 38412 760791 632000) 0 nil])
([nil nil ((167 . 169) (t 26051 38412 772081 686000)) nil (26051 38522 468858 490000) 0 nil])
([nil nil ((167 . 173) (#("de" 0 2 (fontified nil)) . 167) (167 . 169) (#("device" 0 6 (fontified nil)) . -167) (167 . 173) (#("de" 0 2 (fontified t)) . -167) (undo-tree-id111 . -2) 169) nil (26051 38522 468857 382000) 0 nil])
([nil nil ((173 . 174)) nil (26051 38522 468855 272000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -167) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("e" 0 1 (fontified t)) . -168) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("v" 0 1 (fontified t)) . -169) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("i" 0 1 (fontified t)) . -170) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("c" 0 1 (fontified t)) . -171) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("e" 0 1 (fontified t)) . -172) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("." 0 1 (fontified t)) . -173) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 174) nil (26051 38522 468853 680000) 0 nil])
([nil nil ((nil rear-nonsticky nil 405 . 406) (nil fontified nil 167 . 406) (167 . 406)) nil (26051 38522 468841 409000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -167) 97) nil (26051 38522 468840 434000) 0 nil])
([nil nil ((158 . 167)) nil (26051 38522 468839 731000) 0 nil])
([nil nil ((167 . 172)) nil (26051 38522 468839 91000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -168) (undo-tree-id93 . -1) (#("e" 0 1 (fontified t)) . -169) (undo-tree-id94 . -1) (#("t" 0 1 (fontified t)) . -170) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t)) . -171) (undo-tree-id96 . -1) 172) nil (26051 38522 468838 135000) 0 nil])
([nil nil ((168 . 174)) nil (26051 38522 468834 591000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -173) (undo-tree-id92 . -1) 174) nil (26051 38522 468833 940000) 0 nil])
([nil nil ((173 . 179)) nil (26051 38522 468832 591000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -177) (undo-tree-id90 . -1) (#("_" 0 1 (fontified t)) . -178) (undo-tree-id91 . -1) 179) nil (26051 38522 468831 817000) 0 nil])
([nil nil ((177 . 184)) nil (26051 38522 468829 482000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -183) (undo-tree-id89 . -1) 184) nil (26051 38522 468828 791000) 0 nil])
([nil nil ((183 . 189)) nil (26051 38522 468827 483000) 0 nil])
([nil nil ((188 . 194) (#("d" 0 1 (fontified nil)) . 188) (188 . 189) (#("device" 0 6 (fontified nil)) . -188) (188 . 194) (#("d" 0 1 (fontified t)) . -188) (undo-tree-id88 . -1) 189) nil (26051 38522 468826 572000) 0 nil])
([nil nil ((194 . 195)) nil (26051 38522 468824 561000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -194) (undo-tree-id87 . -1) 195) nil (26051 38522 468823 817000) 0 nil])
([nil nil ((#("device" 0 6 (fontified t)) . -188) (undo-tree-id86 . -6) 194) nil (26051 38522 468822 463000) 0 nil])
([nil nil ((#("Device" 0 6 (face font-lock-type-face fontified t)) . -140) (undo-tree-id84 . -6) (undo-tree-id85 . -6) 146) nil (26051 38522 468821 100000) 0 nil])
([nil nil ((#("ash::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -135) (undo-tree-id82 . -5) (undo-tree-id83 . -5) 140) nil (26051 38522 468818 861000) 0 nil])
([nil nil ((135 . 137)) nil (26051 38522 468816 918000) 0 nil])
([nil nil ((135 . 142) (#("cr" 0 2 (fontified nil)) . 135) (135 . 137) (#("crate::" 0 7 (fontified nil)) . -135) (135 . 142) (#("cr" 0 2 (fontified t)) . -135) (undo-tree-id80 . -1) (undo-tree-id81 . -2) 137) nil (26051 38522 468816 58000) 0 nil])
([nil nil ((142 . 143)) nil (26051 38522 468813 410000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -142) (undo-tree-id79 . -1) 143) nil (26051 38522 468812 664000) 0 nil])
([nil nil ((142 . 143)) nil (26051 38522 468811 276000) 0 nil])
([nil nil ((142 . 148) (#("d" 0 1 (fontified nil)) . 142) (142 . 143) (#("device" 0 6 (fontified nil)) . -142) (142 . 148) (#("d" 0 1 (fontified t)) . -142) (undo-tree-id78 . -1) 143) nil (26051 38522 468810 461000) 0 nil])
([nil nil ((148 . 151)) nil (26051 38522 468808 531000) 0 nil])
([nil nil ((150 . 156) (#("D" 0 1 (fontified nil)) . 150) (150 . 151) (#("Device" 0 6 (fontified nil)) . -150) (150 . 156) (#("D" 0 1 (face font-lock-type-face fontified t)) . -150) (undo-tree-id77 . -1) 151) nil (26051 38522 468807 499000) 0 nil])
([nil nil ((198 . 199)) nil (26051 38522 468805 478000) 0 nil])
([nil nil ((198 . 204) (#("d" 0 1 (fontified nil)) . 198) (198 . 199) (#("device" 0 6 (fontified nil)) . -198) (198 . 204) (#("d" 0 1 (fontified t)) . -198) (undo-tree-id76 . -1) 199) nil (26051 38522 468804 572000) 0 nil])
([nil nil ((204 . 205)) nil (26051 38522 468802 574000) 0 nil])
([nil nil ((205 . 206)) nil (26051 38522 468801 990000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -205) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 206) nil (26051 38522 468800 895000) 0 nil])
([nil nil ((205 . 206)) nil (26051 38522 468796 316000) 0 nil])
([nil nil ((205 . 225) (#("q" 0 1 (fontified nil)) . 205) (205 . 206) (#("queue_family_indices" 0 20 (fontified nil)) . -205) (205 . 225) (#("q" 0 1 (fontified t)) . -205) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 206) nil (26051 38522 468793 771000) 0 nil])
([nil nil ((225 . 226)) nil (26051 38522 468778 245000) 0 nil])
([nil nil ((226 . 235) (t 26051 38522 478755 4000)) nil (26051 38535 344089 163000) 0 nil])
([nil nil ((235 . 249)) nil (26051 38535 344088 344000) 0 nil])
([nil nil ((248 . 254) (#("d" 0 1 (fontified nil)) . 248) (248 . 249) (#("device" 0 6 (fontified nil)) . -248) (248 . 254) (#("d" 0 1 (fontified t)) . -248) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 249) nil (26051 38535 344086 710000) 0 nil])
([nil nil ((254 . 255)) nil (26051 38535 344075 35000) 0 nil])
([nil nil ((255 . 269) (#("logical_device" 0 14 (fontified nil)) . -255) (255 . 269)) nil (26051 38535 344073 16000) 0 nil])
([nil nil ((269 . 270)) nil (26051 38535 344068 588000) 0 nil])
([nil nil ((512 . 520) (#("        " 0 8 (fontified nil)) . 511) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (510 . 520) (t 26051 38535 352089 124000)) nil (26051 38546 663870 528000) 0 nil])
([nil nil ((520 . 521)) nil (26051 38546 663866 921000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 544 546 nil nil nil nil #s(yas--field 2 563 565 nil nil nil nil #s(yas--exit 567 nil))) #s(yas--field 2 563 565 nil nil nil nil #s(yas--exit 567 nil))) #s(yas--exit 567 nil) 36 nil #s(yas--field 1 544 546 nil nil nil nil #s(yas--field 2 563 565 nil nil nil nil #s(yas--exit 567 nil))) nil nil)) (520 . 567) (#("Queue { graphics_queue: ${1:()}, present_queue: ${2:()} }$0" 0 59 (fontified nil)) . 520) (520 . 579) (#("Q" 0 1 (fontified nil)) . 520) (520 . 521) (#("Queue {…}" 0 9 (fontified nil)) . -520) (520 . 529) (#("Q" 0 1 (face font-lock-type-face fontified t)) . -520) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 521) nil (26051 38546 663865 343000) 0 nil])
([nil nil ((apply yas--snippet-revive 520 567 #s(yas--snippet nil (#s(yas--field 1 544 546 nil nil nil nil #s(yas--field 2 563 565 nil nil nil nil #s(yas--exit 567 nil))) #s(yas--field 2 563 565 nil nil nil nil #s(yas--exit 567 nil))) #s(yas--exit 567 nil) 36 nil #s(yas--field 1 544 546 nil nil nil nil #s(yas--field 2 563 565 nil nil nil nil #s(yas--exit 567 nil))) nil nil))) nil (26051 38546 663860 133000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . 542) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . 542) (#(" " 0 1 (fontified t)) . 542) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#(":" 0 1 (fontified t)) . 542) (undo-tree-id126 . -1)) nil (26051 38546 663857 994000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . 557) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . 557) (#(" " 0 1 (fontified t)) . 557) (#(":" 0 1 (fontified t)) . 557)) nil (26051 38546 663839 671000) 0 nil])
([nil nil ((198 . 199) (t 26051 38546 675423 143000)) nil (26051 38564 857831 153000) 0 nil])
([nil nil ((249 . 250) (t 26051 38564 868757 583000)) nil (26051 38568 79887 720000) 0 nil])
([nil current ((529 . 541) (545 . 557) (559 . 568) 570 (t 26051 38568 92091 115000)) nil (26051 38575 151354 62000) 0 nil])
nil
