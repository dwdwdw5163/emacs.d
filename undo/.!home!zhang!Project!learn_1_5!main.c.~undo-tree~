(undo-tree-save-format-version . 1)
"6a427ddc8e4ac659a680ff131101a2256e8d4837"
[nil nil nil nil (26129 11363 892826 233000) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . -105) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 106 (t 26007 48106 841127 209000)) nil (26129 11363 892824 728000) 0 nil])
([nil nil ((#("int impl_counter_increase(struct Counter *self);

struct Counter impl_counter_new() {
  struct Counter self = {
    .count = 0,
    .impl_counter_increase = impl_counter_increase
  };
  return self;
}

int impl_counter_increase(struct Counter *self) {
  return self->count++;
}

" 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 25 (face font-lock-function-name-face fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) c-type c-decl-arg-start fontified t) 26 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 40 (face font-lock-type-face fontified t) 40 42 (fontified t) 42 46 (face font-lock-variable-name-face fontified t) 46 47 (face (rainbow-delimiters-depth-1-face) fontified t) 47 49 (fontified t) 49 50 (fontified t) 50 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 63 (face font-lock-type-face fontified t) 63 64 (face font-lock-type-face c-type c-decl-id-start fontified t) 64 65 (fontified t) 65 81 (face font-lock-function-name-face fontified t) 81 82 (face (rainbow-delimiters-depth-1-face) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t) 83 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-1-face) fontified t) 85 88 (fontified t) 88 94 (face font-lock-keyword-face fontified t) 94 95 (fontified t) 95 101 (face font-lock-type-face fontified t) 101 102 (face font-lock-type-face c-type c-decl-id-start fontified t) 102 103 (fontified t) 103 107 (face font-lock-variable-name-face fontified t) 107 110 (fontified t) 110 111 (face (rainbow-delimiters-depth-2-face) fontified t) 111 181 (fontified t) 181 182 (face (rainbow-delimiters-depth-2-face) fontified t) 182 186 (fontified t) 186 192 (face font-lock-keyword-face fontified t) 192 199 (fontified t) 199 200 (face (rainbow-delimiters-depth-1-face) fontified t) 200 202 (fontified t) 202 204 (face font-lock-type-face fontified t) 204 205 (face font-lock-type-face c-type c-decl-id-start fontified t) 205 206 (fontified t) 206 227 (face font-lock-function-name-face fontified t) 227 228 (face (rainbow-delimiters-depth-1-face) c-type c-decl-arg-start fontified t) 228 234 (face font-lock-keyword-face fontified t) 234 235 (fontified t) 235 242 (face font-lock-type-face fontified t) 242 244 (fontified t) 244 248 (face font-lock-variable-name-face fontified t) 248 249 (face (rainbow-delimiters-depth-1-face) fontified t) 249 250 (fontified t) 250 251 (face (rainbow-delimiters-depth-1-face) fontified t) 251 254 (fontified t) 254 260 (face font-lock-keyword-face fontified t) 260 276 (fontified t) 276 277 (face (rainbow-delimiters-depth-1-face) fontified t) 277 279 (fontified t)) . 105) (undo-tree-id106 . -279) (undo-tree-id107 . -278) (undo-tree-id108 . -278) (undo-tree-id109 . -278) (undo-tree-id110 . -277) (undo-tree-id111 . -263) (undo-tree-id112 . -262) (undo-tree-id113 . -201) (undo-tree-id114 . -200) (undo-tree-id115 . -192) (undo-tree-id116 . -183) (undo-tree-id117 . -136) (undo-tree-id118 . -57) (undo-tree-id119 . -49) (undo-tree-id120 . -7) (undo-tree-id121 . -278) (undo-tree-id122 . -278) (undo-tree-id123 . -216) (undo-tree-id124 . -216) (undo-tree-id125 . -216) (undo-tree-id126 . -216) (undo-tree-id127 . -216) (undo-tree-id128 . -216) (undo-tree-id129 . -278) (undo-tree-id130 . -278) (undo-tree-id131 . -278) (undo-tree-id132 . -277) (undo-tree-id133 . -258) (undo-tree-id134 . -207) (undo-tree-id135 . -201) (undo-tree-id136 . -200) (undo-tree-id137 . -187) (undo-tree-id138 . -186) (undo-tree-id139 . -129) (undo-tree-id140 . -112) (undo-tree-id141 . -278) (undo-tree-id142 . -278) (undo-tree-id143 . -278) (undo-tree-id144 . -145) (undo-tree-id145 . -145) (undo-tree-id146 . -279) (undo-tree-id147 . -279) (undo-tree-id148 . -279) (undo-tree-id149 . -277) (undo-tree-id150 . -264) (undo-tree-id151 . -213) (undo-tree-id152 . -201) (undo-tree-id153 . -200) (undo-tree-id154 . -192) (undo-tree-id155 . -191) (undo-tree-id156 . -183) (undo-tree-id157 . -134) (undo-tree-id158 . -117) (undo-tree-id159 . -54) (undo-tree-id160 . -49) (undo-tree-id161 . -3) (undo-tree-id162 . -2) (undo-tree-id163 . -1) (undo-tree-id164 . -279) (undo-tree-id165 . -278) (undo-tree-id166 . -279)) nil (26129 11363 892812 440000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -146) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 147) nil (26129 11363 892482 816000) 0 nil])
([nil nil ((#("struct Counter count = impl_counter_new();
  printf(\"count is %d\\r\\n\", count.impl_counter_increase(&count));
  printf(\"count is %d\\r\\n\", count.impl_counter_increase(&count));
  printf(\"count is %d\\r\\n\", count.impl_counter_increase(&count));  " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face c-type c-decl-id-start fontified t) 14 15 (fontified t) 15 20 (face font-lock-variable-name-face fontified t) 20 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 43 (fontified t) 43 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t) 52 69 (face font-lock-string-face fontified t) 69 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-3-face) fontified t) 99 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-3-face) fontified t) 106 107 (face (rainbow-delimiters-depth-2-face) fontified t) 107 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-2-face) fontified t) 118 135 (face font-lock-string-face fontified t) 135 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-3-face) fontified t) 165 171 (fontified t) 171 172 (face (rainbow-delimiters-depth-3-face) fontified t) 172 173 (face (rainbow-delimiters-depth-2-face) fontified t) 173 183 (fontified t) 183 184 (face (rainbow-delimiters-depth-2-face) fontified t) 184 201 (face font-lock-string-face fontified t) 201 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-3-face) fontified t) 231 237 (fontified t) 237 238 (face (rainbow-delimiters-depth-3-face) fontified t) 238 239 (face (rainbow-delimiters-depth-2-face) fontified t) 239 242 (fontified t)) . 148) (undo-tree-id0 . -242) (undo-tree-id1 . -242) (undo-tree-id2 . -242) (undo-tree-id3 . -242) (undo-tree-id4 . -242) (undo-tree-id5 . -242) (undo-tree-id6 . -242) (undo-tree-id7 . -242) (undo-tree-id8 . -242) (undo-tree-id9 . -242) (undo-tree-id10 . -242) (undo-tree-id11 . -241) (undo-tree-id12 . -239) (undo-tree-id13 . -171) (undo-tree-id14 . -170) (undo-tree-id15 . -167) (undo-tree-id16 . -165) (undo-tree-id17 . -163) (undo-tree-id18 . -161) (undo-tree-id19 . -92) (undo-tree-id20 . -90) (undo-tree-id21 . -87) (undo-tree-id22 . -85) (undo-tree-id23 . -82) (undo-tree-id24 . -80) (undo-tree-id25 . -77) (undo-tree-id26 . -75) (undo-tree-id27 . -73) (undo-tree-id28 . -71) (undo-tree-id29 . -69) (undo-tree-id30 . -67) (undo-tree-id31 . -65) (undo-tree-id32 . -63) (undo-tree-id33 . -62) (undo-tree-id34 . -60) (undo-tree-id35 . -59) (undo-tree-id36 . -58) (undo-tree-id37 . -57) (undo-tree-id38 . -56) (undo-tree-id39 . -55) (undo-tree-id40 . -54) (undo-tree-id41 . -53) (undo-tree-id42 . -52) (undo-tree-id43 . -51) (undo-tree-id44 . -50) (undo-tree-id45 . -49) (undo-tree-id46 . -48) (undo-tree-id47 . -47) (undo-tree-id48 . -46) (undo-tree-id49 . -242) (undo-tree-id50 . -242) (undo-tree-id51 . -242) (undo-tree-id52 . -242) (undo-tree-id53 . -242) (undo-tree-id54 . -242) (undo-tree-id55 . -242) (undo-tree-id56 . -242) (undo-tree-id57 . -1) (undo-tree-id58 . -2) (undo-tree-id59 . -3) (undo-tree-id60 . -4) (undo-tree-id61 . -5) (undo-tree-id62 . -91) (undo-tree-id63 . -92) (undo-tree-id64 . -93) (undo-tree-id65 . -95) (undo-tree-id66 . -96) (undo-tree-id67 . -97) (undo-tree-id68 . -165) (undo-tree-id69 . -166) (undo-tree-id70 . -167) (undo-tree-id71 . -169) (undo-tree-id72 . -170) (undo-tree-id73 . -171) (undo-tree-id74 . -172) (undo-tree-id75 . -173) (undo-tree-id76 . -240) (undo-tree-id77 . -241) (undo-tree-id78 . -242) (undo-tree-id79 . -242) (undo-tree-id80 . -242) (undo-tree-id81 . -242) (undo-tree-id82 . -242) (undo-tree-id83 . -242) (undo-tree-id84 . -242) (undo-tree-id85 . -242) (undo-tree-id86 . -242) (undo-tree-id87 . -242) (undo-tree-id88 . -175) (undo-tree-id89 . -242) (undo-tree-id90 . -242) (undo-tree-id91 . -242) 390) nil (26129 11363 891924 702000) 0 nil])
([nil nil ((#("int (*impl_counter_increase)(struct Counter *);" 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t) 5 6 (fontified t) 6 27 (face font-lock-function-name-face fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 29 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 43 (face font-lock-type-face fontified t) 43 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-2-face) fontified t) 46 47 (fontified t)) . 54) (undo-tree-id670 . -47) (undo-tree-id671 . -47) (undo-tree-id672 . -47) (undo-tree-id673 . -47) (undo-tree-id674 . -47) (undo-tree-id675 . -47) (undo-tree-id676 . -47) (t 26129 11363 937539 207000)) nil (26129 11434 514112 769000) 0 nil])
([nil nil ((54 . 61)) nil (26129 11434 514107 759000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -59) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -60) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) 61) nil (26129 11434 514106 78000) 0 nil])
([nil nil ((59 . 61)) nil (26129 11434 514076 719000) 0 nil])
([nil nil ((61 . 63)) nil (26129 11434 514076 150000) 0 nil])
([nil nil ((#("void" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -54) (undo-tree-id610 . -4) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) 58) nil (26129 11434 514074 289000) 0 nil])
([nil nil ((54 . 58)) nil (26129 11434 514054 115000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -57) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) 58) nil (26129 11434 514053 285000) 0 nil])
([nil nil ((62 . 64)) nil (26129 11434 514048 469000) 0 nil])
([nil nil ((63 . 64)) nil (26129 11434 514047 905000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -63) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) 64) nil (26129 11434 514046 539000) 0 nil])
([nil nil ((63 . 67)) nil (26129 11434 514038 198000) 0 nil])
([nil nil ((#("void" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . -63) (undo-tree-id552 . -4) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) 67) nil (26129 11434 514036 328000) 0 nil])
([nil nil ((63 . 65)) nil (26129 11434 514010 442000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -64) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) 65) nil (26129 11434 514009 442000) 0 nil])
([nil nil ((64 . 70)) nil (26129 11434 514000 887000) 0 nil])
([nil nil ((#("Counter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -63) (undo-tree-id451 . -7) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -6) (undo-tree-id519 . -6) (undo-tree-id520 . -6) (undo-tree-id521 . -6) (undo-tree-id522 . -6) (undo-tree-id523 . -7) (undo-tree-id524 . -7) (undo-tree-id525 . -7) (undo-tree-id526 . -7) (undo-tree-id527 . -7) (undo-tree-id528 . -7) (undo-tree-id529 . -7) (undo-tree-id530 . -7) (undo-tree-id531 . -7) (undo-tree-id532 . -7) (undo-tree-id533 . -7) (undo-tree-id534 . -7) (undo-tree-id535 . -7) (undo-tree-id536 . -7) (undo-tree-id537 . -7) (undo-tree-id538 . -7) 70) nil (26129 11434 513997 522000) 0 nil])
([nil nil ((64 . 65)) nil (26129 11434 513932 286000) 0 nil])
([nil nil ((65 . 67)) nil (26129 11434 513931 732000) 0 nil])
([nil nil ((67 . 68)) nil (26129 11434 513931 149000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -67) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 68) nil (26129 11434 513930 6000) 0 nil])
([nil nil ((67 . 68)) nil (26129 11434 513920 480000) 0 nil])
([nil nil ((68 . 70) (#("  " 0 2 (fontified nil)) . 67) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (66 . 70)) nil (26129 11434 513919 280000) 0 nil])
([nil nil ((63 . 66)) nil (26129 11434 513913 446000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -63) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#("m" 0 1 (fontified t)) . -64) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (#("t" 0 1 (fontified t)) . -65) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) 66) nil (26129 11434 513909 227000) 0 nil])
([nil nil ((63 . 66)) nil (26129 11434 513211 282000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -63) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#("i" 0 1 (fontified t)) . -64) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("n" 0 1 (fontified t)) . -65) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) 66) nil (26129 11434 513207 421000) 0 nil])
([nil nil ((63 . 66)) nil (26129 11434 513156 629000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -63) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("i" 0 1 (fontified t)) . -64) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#("n" 0 1 (fontified t)) . -65) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 66) nil (26129 11434 513151 529000) 0 nil])
([nil nil ((63 . 68)) nil (26129 11434 512555 64000) 0 nil])
([nil nil ((72 . 76)) nil (26129 11434 512554 42000) 0 nil])
([nil nil ((76 . 77)) nil (26129 11434 512553 70000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -76) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 77) nil (26129 11434 512550 643000) 0 nil])
([nil nil ((76 . 78)) nil (26129 11434 512495 927000) 0 nil])
([nil nil ((78 . 84)) nil (26129 11434 512494 504000) 0 nil])
([nil nil ((84 . 85)) nil (26129 11434 512489 551000) 0 nil])
([nil nil ((69 . 70) (t 26129 11434 524210 203000)) nil (26129 11445 197716 275000) 0 nil])
([nil nil ((#(" {" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . 70) (undo-tree-id711 . -2)) nil (26129 11445 197715 149000) 0 nil])
([nil nil ((#("return a;" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 75) (undo-tree-id694 . -9) (undo-tree-id695 . -9) (undo-tree-id696 . -9) (undo-tree-id697 . -9) (undo-tree-id698 . -9) (undo-tree-id699 . -9) (undo-tree-id700 . -9) (undo-tree-id701 . -9) (undo-tree-id702 . -9) (undo-tree-id703 . -9) (undo-tree-id704 . -9) (undo-tree-id705 . -9) (undo-tree-id706 . -9) (undo-tree-id707 . -9) (undo-tree-id708 . -9) (undo-tree-id709 . -9) (undo-tree-id710 . -9)) nil (26129 11445 197712 915000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 75) (undo-tree-id692 . 1) (undo-tree-id693 . -1)) nil (26129 11445 197699 116000) 0 nil])
([nil nil ((#("  };" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-1-face) c-type c-decl-id-start fontified t) 3 4 (fontified t)) . 75) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . 4) (undo-tree-id691 . -4)) nil (26129 11445 197693 686000) 0 nil])
([nil nil ((#("int next(int a);" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 5 (face font-lock-function-name-face fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t) 15 16 (fontified t)) . 54) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -3) (undo-tree-id720 . -8) (undo-tree-id721 . -8) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (undo-tree-id724 . -8) (undo-tree-id725 . -8) (undo-tree-id726 . -8) (undo-tree-id727 . -1) (undo-tree-id728 . -2) (undo-tree-id729 . -3) (undo-tree-id730 . -4) (undo-tree-id731 . -16) (t 26129 11445 207544 188000)) nil (26129 11457 243724 951000) 0 nil])
([nil nil ((54 . 63) (t 26129 11457 287544 929000)) nil (26129 11585 50270 307000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -59) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -60) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -61) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -62) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 63) nil (26129 11585 50264 694000) 0 nil])
([nil nil ((59 . 62)) nil (26129 11585 49963 933000) 0 nil])
([nil nil ((62 . 64)) nil (26129 11585 49963 11000) 0 nil])
([nil nil ((64 . 65)) nil (26129 11585 49962 293000) 0 nil])
([nil nil ((65 . 67)) nil (26129 11585 49961 576000) 0 nil])
([nil nil ((67 . 68)) nil (26129 11585 49960 318000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -67) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 68) nil (26129 11585 49955 299000) 0 nil])
([nil nil ((64 . 65) (t 26129 11585 60886 110000)) nil (26129 11591 723668 475000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -64) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 65 (t 26129 11591 734219 853000)) nil (26129 11595 608336 855000) 0 nil])
([nil nil ((67 . 68)) nil (26129 11595 608327 324000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -67) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 68) nil (26129 11595 608324 886000) 0 nil])
([nil nil ((67 . 68)) nil (26129 11595 608305 177000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -67) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 68 (t 26129 11595 620886 759000)) nil (26129 11597 17597 727000) 0 nil])
([nil nil ((67 . 68)) nil (26129 11597 17580 478000) 0 nil])
([nil current ((#("void foo() {}," 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t) 10 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-2-face) fontified t) 12 13 (face (rainbow-delimiters-depth-2-face) fontified t) 13 14 (fontified t)) . 54) (undo-tree-id176 . -13) (undo-tree-id177 . -14) (undo-tree-id178 . -13) (undo-tree-id179 . -13) (undo-tree-id180 . -13) (undo-tree-id181 . -13) (undo-tree-id182 . -13) (undo-tree-id183 . -13) (undo-tree-id184 . -13) (undo-tree-id185 . -13) (undo-tree-id186 . -14) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (undo-tree-id189 . -14) (undo-tree-id190 . -14) (undo-tree-id191 . -14) (undo-tree-id192 . -14) (undo-tree-id193 . -14) (undo-tree-id194 . -14) (undo-tree-id195 . -14) (undo-tree-id196 . -14) (undo-tree-id197 . -14) (undo-tree-id198 . -14) (t 26129 11597 27553 513000)) nil (26129 11598 394009 447000) 0 nil])
nil
