(undo-tree-save-format-version . 1)
"0192d6b007b3aedd919a7c42d01b009f28a6fb41"
[nil nil nil nil (26051 36735 98514 517000) 0 nil]
([nil nil ((1 . 7) (t 26051 36637 718639 758000)) nil (26051 36735 98513 526000) 0 nil])
([nil nil ((apply yas--snippet-revive 5 12 #s(yas--snippet nil nil #s(yas--exit 12 nil) 13 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12 nil) 13 nil nil nil nil)) (5 . 12) (#("struct $0" 0 9 (fontified nil)) . 5) (5 . 14) (#("st" 0 2 (fontified nil)) . 5) (5 . 7) (#("struct" 0 6 (fontified nil)) . -5) (5 . 11) (#("st" 0 2 (fontified t)) . -5) (undo-tree-id26 . -2) 7) nil (26051 36735 98511 971000) 0 nil])
([nil nil ((12 . 13)) nil (26051 36735 98509 247000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -12) (undo-tree-id25 . -1) 13) nil (26051 36735 98508 443000) 0 nil])
([nil nil ((12 . 15)) nil (26051 36735 98507 85000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -14) (undo-tree-id24 . -1) 15) nil (26051 36735 98506 314000) 0 nil])
([nil nil ((14 . 22)) nil (26051 36735 98504 936000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 22) (22 . 26) (21 . 23)) nil (26051 36735 98504 153000) 0 nil])
([nil nil ((22 . 26)) nil (26051 36735 98503 173000) 0 nil])
([nil nil ((26 . 30)) nil (26051 36735 98502 647000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -28) (undo-tree-id22 . -1) (#("r" 0 1 (fontified t)) . -29) (undo-tree-id23 . -1) 30) nil (26051 36735 98501 415000) 0 nil])
([nil nil ((28 . 29)) nil (26051 36735 98499 312000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -28) (undo-tree-id21 . -1) 29) nil (26051 36735 98498 512000) 0 nil])
([nil nil ((28 . 33)) nil (26051 36735 98497 140000) 0 nil])
([nil nil ((33 . 39)) nil (26051 36735 98496 602000) 0 nil])
([nil nil ((39 . 46)) nil (26051 36735 98495 980000) 0 nil])
([nil nil ((44 . 54) (#("ex" 0 2 (fontified nil)) . 44) (44 . 46) (#("extensions" 0 10 (fontified nil)) . -44) (44 . 54) (#("ex" 0 2 (fontified t)) . -44) (undo-tree-id20 . -2) 46) nil (26051 36735 98494 872000) 0 nil])
([nil nil ((54 . 56)) nil (26051 36735 98492 828000) 0 nil])
([nil nil ((56 . 59) (#("khr" 0 3 (fontified nil)) . -56) (56 . 59)) nil (26051 36735 98492 104000) 0 nil])
([nil nil ((59 . 62)) nil (26051 36735 98491 247000) 0 nil])
([nil nil ((61 . 68) (#("S" 0 1 (fontified nil)) . 61) (61 . 62) (#("Surface" 0 7 (fontified nil)) . -61) (61 . 68) (#("S" 0 1 (face font-lock-type-face fontified t)) . -61) (undo-tree-id19 . -1) 62) nil (26051 36735 98490 113000) 0 nil])
([nil nil ((68 . 69)) nil (26051 36735 98488 15000) 0 nil])
([nil nil ((69 . 74)) nil (26051 36735 98487 402000) 0 nil])
([nil nil ((74 . 78)) nil (26051 36735 98486 849000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -76) (undo-tree-id17 . -1) (#("f" 0 1 (fontified t)) . -77) (undo-tree-id18 . -1) 78) nil (26051 36735 98485 728000) 0 nil])
([nil nil ((76 . 83)) nil (26051 36735 98483 641000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -81) (undo-tree-id15 . -1) (#("L" 0 1 (face font-lock-type-face fontified t)) . -82) (undo-tree-id16 . -1) 83) nil (26051 36735 98482 691000) 0 nil])
([nil nil ((81 . 86)) nil (26051 36735 98480 407000) 0 nil])
([nil nil ((#("ash" 0 3 (fontified t)) . -83) (undo-tree-id14 . -3) 86) nil (26051 36735 98479 536000) 0 nil])
([nil nil ((83 . 87)) nil (26051 36735 98478 19000) 0 nil])
([nil nil ((#("vk::" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t)) . -83) (undo-tree-id13 . -4) 87) nil (26051 36735 98477 291000) 0 nil])
([nil nil ((83 . 85)) nil (26051 36735 98475 891000) 0 nil])
([nil nil ((83 . 86) (#("as" 0 2 (fontified nil)) . 83) (83 . 85) (#("ash" 0 3 (fontified nil)) . -83) (83 . 86) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -83) (undo-tree-id12 . -2) 85) nil (26051 36735 98474 811000) 0 nil])
([nil nil ((86 . 89)) nil (26051 36735 98472 862000) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -88) (undo-tree-id11 . -1) 89) nil (26051 36735 98472 39000) 0 nil])
([nil nil ((88 . 89)) nil (26051 36735 98470 530000) 0 nil])
([nil nil ((88 . 90) (#("v" 0 1 (fontified nil)) . 88) (88 . 89) (#("vk" 0 2 (fontified nil)) . -88) (88 . 90) (#("v" 0 1 (fontified t)) . -88) (undo-tree-id10 . -1) 89) nil (26051 36735 98469 384000) 0 nil])
([nil nil ((90 . 100)) nil (26051 36735 98467 301000) 0 nil])
([nil nil ((92 . 102) (#("SurfaceH" 0 8 (fontified nil)) . 92) (92 . 100) (#("SurfaceKHR" 0 10 (fontified nil)) . -92) (92 . 102) (#("SurfaceH" 0 8 (face font-lock-type-face fontified t)) . -92) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) 100) nil (26051 36735 98465 925000) 0 nil])
([nil nil ((102 . 103)) nil (26051 36735 98460 952000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-type-face fontified t)) . -102) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 103) nil (26051 36735 98459 30000) 0 nil])
([nil nil ((102 . 103)) nil (26051 36735 98381 7000) 0 nil])
([nil nil ((105 . 106) 103) nil (26051 36735 98376 547000) 0 nil])
([nil nil ((105 . 107) (t 26051 36735 111979 65000)) nil (26051 36846 662913 608000) 0 nil])
([nil nil ((107 . 111)) nil (26051 36846 662912 791000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -110) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) 111) nil (26051 36846 662911 978000) 0 nil])
([nil nil ((110 . 114)) nil (26051 36846 662908 118000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -112) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("e" 0 1 (fontified t)) . -113) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 114) nil (26051 36846 662906 925000) 0 nil])
([nil nil ((112 . 113)) nil (26051 36846 662899 360000) 0 nil])
([nil nil ((112 . 119) (#("S" 0 1 (fontified nil)) . 112) (112 . 113) (#("Surface" 0 7 (fontified nil)) . -112) (112 . 119) (#("S" 0 1 (face font-lock-type-face fontified t)) . -112) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 113) nil (26051 36846 662898 45000) 0 nil])
([nil nil ((119 . 122)) nil (26051 36846 662892 383000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 122) (122 . 126) (121 . 123)) nil (26051 36846 662891 614000) 0 nil])
([nil nil ((122 . 126)) nil (26051 36846 662890 712000) 0 nil])
([nil nil ((126 . 128)) nil (26051 36846 662889 856000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -127) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) 128) nil (26051 36846 662888 477000) 0 nil])
([nil nil ((127 . 136)) nil (26051 36846 662878 935000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -126) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("u" 0 1 (fontified t)) . -127) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -128) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#(" " 0 1 (fontified t)) . -129) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (#("f" 0 1 (fontified t)) . -130) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -131) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#(" " 0 1 (fontified t)) . -132) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -133) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -134) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -135) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 136) nil (26051 36846 662864 582000) 0 nil])
([nil nil ((nil rear-nonsticky nil 611 . 612) (nil fontified nil 126 . 612) (126 . 612)) nil (26051 36846 661963 520000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -126) 107) nil (26051 36846 661958 264000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -263) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -264) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -265) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -266) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -267) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 268 (t 26051 36846 675319 251000)) nil (26051 36861 393522 463000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -531) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -532) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -533) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -534) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -535) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) 536) nil (26051 36861 393459 156000) 0 nil])
([nil nil ((#("utility" 0 7 (face font-lock-constant-face fontified t)) . -309) (undo-tree-id413 . -7) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -7) (undo-tree-id417 . -7) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) 316) nil (26051 36861 393424 145000) 0 nil])
([nil nil ((309 . 310)) nil (26051 36861 393416 447000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t)) . -309) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) 310) nil (26051 36861 393414 770000) 0 nil])
([nil nil ((309 . 312)) nil (26051 36861 393120 689000) 0 nil])
([nil nil ((309 . 316) (#("cra" 0 3 (fontified nil)) . 309) (309 . 312) (#("crate::" 0 7 (fontified nil)) . -309) (309 . 316) (#("cra" 0 3 (face font-lock-constant-face fontified t)) . -309) (undo-tree-id396 . -3) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) 312) nil (26051 36861 393116 379000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -314) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#(":" 0 1 (fontified t)) . -315) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) 316 (t 26051 36861 438653 491000)) nil (26051 36862 301818 480000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -451) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -452) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -453) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -454) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -455) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -456) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) 457 (t 26051 36862 315320 212000)) nil (26051 36874 831358 547000) 0 nil])
([nil nil ((451 . 454)) nil (26051 36874 831098 199000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -453) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) 454) nil (26051 36874 831097 267000) 0 nil])
([nil nil ((453 . 454)) nil (26051 36874 831093 423000) 0 nil])
([nil nil ((#("loader" 0 6 (fontified t)) . -549) (undo-tree-id582 . -6) (undo-tree-id583 . -6) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -6) (undo-tree-id587 . -6) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -6) 555) nil (26051 36874 831090 967000) 0 nil])
([nil nil ((549 . 552)) nil (26051 36874 831072 406000) 0 nil])
([nil nil ((126 . 130) (t 26051 36874 845320 980000)) nil (26051 36882 446984 50000) 0 nil])
([nil nil ((#("surface" 0 7 (face font-lock-function-name-face fontified t)) . -140) (undo-tree-id724 . -7) (undo-tree-id725 . -7) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (undo-tree-id729 . -7) (undo-tree-id730 . -7) (undo-tree-id731 . -7) (undo-tree-id732 . -7) 147 (t 26051 36882 458654 781000)) nil (26051 36889 69092 167000) 0 nil])
([nil nil ((#("create_" 0 7 (face font-lock-function-name-face fontified t)) . -133) (undo-tree-id707 . -7) (undo-tree-id708 . -7) (undo-tree-id709 . -6) (undo-tree-id710 . -7) (undo-tree-id711 . -7) (undo-tree-id712 . -7) (undo-tree-id713 . -7) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -7) (undo-tree-id721 . -7) (undo-tree-id722 . -7) (undo-tree-id723 . -7) 140) nil (26051 36889 69085 378000) 0 nil])
([nil nil ((133 . 135)) nil (26051 36889 69074 738000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-function-name-face fontified t)) . -133) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -134) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) 135) nil (26051 36889 69071 925000) 0 nil])
([nil nil ((133 . 136)) nil (26051 36889 69047 791000) 0 nil])
([nil nil ((26 . 30) (t 26051 36889 81988 520000)) nil (26051 37177 703811 967000) 0 nil])
([nil nil ((78 . 82)) nil (26051 37177 703807 833000) 0 nil])
([nil nil ((594 . 595) (t 26051 37177 715339 577000)) nil (26051 37435 75476 306000) 0 nil])
([nil nil ((595 . 597)) nil (26051 37435 75475 679000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 600 616 nil nil nil t #s(yas--exit 623 nil))) #s(yas--exit 623 nil) 19 nil #s(yas--field 1 600 616 nil nil nil t #s(yas--exit 623 nil)) nil nil)) (595 . 609) (#("impl $1 {
    $0
}" 0 18 (fontified nil)) . 595) (595 . 613) (#("im" 0 2 (fontified nil)) . 595) (595 . 597) (#("impl" 0 4 (fontified nil)) . -595) (595 . 599) (#("im" 0 2 (fontified t)) . -595) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) 597) nil (26051 37435 75474 279000) 0 nil])
([nil nil ((600 . 602)) nil (26051 37435 75465 291000) 0 nil])
([nil nil ((600 . 604) (#("Dr" 0 2 (fontified nil)) . 600) (undo-tree-id790 . -2) (600 . 602) (#("Drop" 0 4 (fontified nil)) . -600) (undo-tree-id791 . -4) (600 . 604) (#("Dr" 0 2 (face font-lock-type-face fontified t)) . -600) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) 602) nil (26051 37435 75464 39000) 0 nil])
([nil nil ((604 . 610)) nil (26051 37435 75456 90000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -609) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) 610) nil (26051 37435 75455 292000) 0 nil])
([nil nil ((609 . 610)) nil (26051 37435 75446 121000) 0 nil])
([nil nil ((609 . 616) (#("S" 0 1 (fontified nil)) . 609) (undo-tree-id778 . -1) (609 . 610) (#("Surface" 0 7 (fontified nil)) . -609) (undo-tree-id779 . -7) (609 . 616) (#("S" 0 1 (face font-lock-type-face fontified t)) . -609) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) 610) nil (26051 37435 75444 997000) 0 nil])
([nil nil ((apply yas--snippet-revive 595 625 #s(yas--snippet nil (#s(yas--field 1 600 616 nil nil nil t #s(yas--exit 623 nil))) #s(yas--exit 623 nil) 19 nil #s(yas--field 1 600 616 nil nil nil t #s(yas--exit 623 nil)) nil nil))) nil (26051 37435 75439 702000) 0 nil])
([nil nil ((623 . 624)) nil (26051 37435 75439 169000) 0 nil])
([nil nil ((apply yas--snippet-revive 623 658 #s(yas--snippet nil nil #s(yas--exit 652 nil) 20 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 652 nil) 20 nil nil nil nil)) (623 . 658) (#("fn drop(&mut self) {
        $0
    }" 0 37 (fontified nil)) . 623) (655 . 659) (644 . 652) (#("    " 0 4 (fontified nil)) . 644) (623 . 652) (#("f" 0 1 (fontified nil)) . 623) (623 . 624) (#("fn drop(..)" 0 11 (fontified nil)) . -623) (623 . 634) (#("f" 0 1 (fontified t)) . -623) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) 624) nil (26051 37435 75438 15000) 0 nil])
([nil nil ((652 . 653)) nil (26051 37435 75433 642000) 0 nil])
([nil nil ((652 . 656) (#("s" 0 1 (fontified nil)) . 652) (652 . 653) (#("self" 0 4 (fontified nil)) . -652) (652 . 656) (#("s" 0 1 (fontified t)) . -652) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) 653) nil (26051 37435 75432 760000) 0 nil])
([nil nil ((656 . 657)) nil (26051 37435 75429 23000) 0 nil])
([nil nil ((657 . 668) (#("surface_ext" 0 11 (fontified nil)) . -657) (657 . 668)) nil (26051 37435 75428 435000) 0 nil])
([nil nil ((668 . 670)) nil (26051 37435 75427 747000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 685 697 nil nil nil t #s(yas--field 2 699 719 nil nil nil nil #s(yas--exit 720 nil))) #s(yas--field 2 699 719 nil nil nil nil #s(yas--exit 720 nil))) #s(yas--exit 720 nil) 21 nil #s(yas--field 1 685 697 nil nil nil t #s(yas--field 2 699 719 nil nil nil nil #s(yas--exit 720 nil))) nil nil)) (669 . 715) (#("destroy_surface(${1:surface}, ${2:allocation_callbacks})$0" 0 58 (fontified nil)) . 669) (669 . 727) (#("d" 0 1 (fontified nil)) . 669) (669 . 670) (#("destroy_surface(…)" 0 18 (fontified nil)) . -669) (669 . 687) (#("d" 0 1 (fontified t)) . -669) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) 670) nil (26051 37435 75426 583000) 0 nil])
([nil nil ((686 . 690) (#("surface" 0 7 (fontified nil)) . 686) (undo-tree-id761 . -7) (685 . 686)) nil (26051 37435 75421 964000) 0 nil])
([nil nil ((690 . 691)) nil (26051 37435 75420 700000) 0 nil])
([nil nil ((690 . 697) (#("s" 0 1 (fontified nil)) . 690) (undo-tree-id753 . -1) (690 . 691) (#("surface" 0 7 (fontified nil)) . -690) (undo-tree-id754 . -7) (690 . 697) (#("s" 0 1 (fontified t)) . -690) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) 691) nil (26051 37435 75419 581000) 0 nil])
([nil nil ((apply yas--snippet-revive 669 720 #s(yas--snippet nil (#s(yas--field 1 685 697 nil nil nil t #s(yas--field 2 699 719 nil nil nil nil #s(yas--exit 720 nil))) #s(yas--field 2 699 719 nil nil nil nil #s(yas--exit 720 nil))) #s(yas--exit 720 nil) 21 nil #s(yas--field 1 685 697 nil nil nil t #s(yas--field 2 699 719 nil nil nil nil #s(yas--exit 720 nil))) nil nil))) nil (26051 37435 75414 123000) 0 nil])
([nil nil ((#("callbacks" 0 9 (fontified t)) . -710) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) 719) nil (26051 37435 75413 395000) 0 nil])
([nil nil ((#("allocation_" 0 11 (fontified t)) . -699) (undo-tree-id740 . -11) (undo-tree-id741 . -11) (undo-tree-id742 . -10) (undo-tree-id743 . -11) (undo-tree-id744 . -11) (undo-tree-id745 . -11) (undo-tree-id746 . -11) (undo-tree-id747 . -11) 710) nil (26051 37435 75409 855000) 0 nil])
([nil nil ((699 . 700)) nil (26051 37435 75404 499000) 0 nil])
([nil nil ((apply yas--snippet-revive 699 703 #s(yas--snippet nil nil #s(yas--exit 703 nil) 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 703 nil) 22 nil nil nil nil)) (699 . 703) (#("None$0" 0 6 (fontified nil)) . 699) (699 . 705) (#("N" 0 1 (fontified nil)) . 699) (699 . 700) (#("None" 0 4 (fontified nil)) . -699) (699 . 703) (#("N" 0 1 (face font-lock-type-face fontified t)) . -699) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) 700) nil (26051 37435 75402 437000) 0 nil])
([nil nil ((704 . 705)) nil (26051 37435 75389 172000) 0 nil])
([nil nil ((713 . 714) 705) nil (26051 37435 75385 482000) 0 nil])
([nil nil ((652 . 660) (t 26051 37435 92022 46000)) nil (26051 37440 608244 726000) 0 nil])
([nil nil ((660 . 673)) nil (26051 37440 608243 860000) 0 nil])
([nil nil ((726 . 739)) nil (26051 37440 608243 51000) 0 nil])
([nil nil ((736 . 737) (#("    " 0 4 (fontified nil)) . -735) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (739 . 740)) nil (26051 37440 608241 143000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -736) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) 737) nil (26051 37440 608231 136000) 0 nil])
([nil nil ((#("        entry: &ash::Entry,
        instance: &ash::Instance," 0 8 (fontified t) 8 13 (face font-lock-variable-name-face fontified t) 13 15 (fontified t) 15 16 (face rust-ampersand-face fontified t) 16 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 26 (face font-lock-type-face fontified t) 26 36 (fontified t) 36 44 (face font-lock-variable-name-face fontified t) 44 46 (fontified t) 46 47 (face rust-ampersand-face fontified t) 47 50 (face font-lock-constant-face fontified t) 50 52 (fontified t) 52 60 (face font-lock-type-face fontified t) 60 61 (fontified t)) . 146) (undo-tree-id846 . -61) (undo-tree-id847 . -61) (undo-tree-id848 . -61) (undo-tree-id849 . -61) (undo-tree-id850 . -60) (undo-tree-id851 . -59) (undo-tree-id852 . -58) (undo-tree-id853 . -57) (undo-tree-id854 . -27) (undo-tree-id855 . -25) (undo-tree-id856 . -24) (undo-tree-id857 . -22) (undo-tree-id858 . -21) (undo-tree-id859 . -19) (undo-tree-id860 . -17) (undo-tree-id861 . -16) (undo-tree-id862 . -15) (undo-tree-id863 . -13) (undo-tree-id864 . -12) (undo-tree-id865 . -11) (undo-tree-id866 . -10) (undo-tree-id867 . -9) (undo-tree-id868 . -8) (undo-tree-id869 . -7) (undo-tree-id870 . -6) (undo-tree-id871 . -5) (undo-tree-id872 . -4) (undo-tree-id873 . -3) (undo-tree-id874 . -2) (undo-tree-id875 . -1) (undo-tree-id876 . -61) (undo-tree-id877 . -61) (t 26051 37440 622022 384000)) nil (26051 39861 970807 862000) 0 nil])
([nil nil ((146 . 153)) nil (26051 39862 326804 18000) 0 nil])
([nil nil ((146 . 154) 153) nil (26051 39871 450429 640000) 0 nil] [nil nil ((1 . 23) (146 . 146) (146 . 154) (#("instace" 0 7 (fontified nil)) . 146) (146 . 153) (#("instance (use crate::instance)" 0 30 (fontified nil)) . -146) (146 . 176) (#("instace" 0 7 (fontified t)) . -146) (undo-tree-id827 . -7) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -3) (undo-tree-id835 . -3) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -5) (undo-tree-id839 . -5) (undo-tree-id840 . -6) (undo-tree-id841 . -6) (undo-tree-id842 . -7) (undo-tree-id843 . -7) (undo-tree-id844 . -7) (undo-tree-id845 . -7) 153) ((146 . 153) (#("instance (use crate::instance)" 0 30 (fontified nil)) . 146) (146 . 176) (#("instace" 0 7 (fontified nil)) . 146) (146 . 153) (#("instance" 0 8 (fontified t)) . 146) (undo-tree-id878 . -8) (undo-tree-id879 . -8) (undo-tree-id880 . -8) (#("use crate::instance;

" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 22 (fontified t)) . 1)) (26051 39861 971179 856000) 0 nil])
([nil nil ((161 . 163)) nil (26051 39871 450428 755000) 0 nil])
([nil nil ((168 . 176) 176) ((#("        " 0 8 (fontified t)) . 168)) (26051 39861 970754 886000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -162) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) 163) nil (26051 39871 450427 755000) 0 nil])
nil
([nil nil ((162 . 166)) nil (26051 39871 450424 796000) 0 nil])
([nil nil ((164 . 171) (#("cr" 0 2 (fontified nil)) . 164) (164 . 166) (#("crate::" 0 7 (fontified nil)) . -164) (164 . 171) (#("cr" 0 2 (fontified t)) . -164) (undo-tree-id885 . -2) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -2) (undo-tree-id889 . -2) (undo-tree-id890 . -2) (undo-tree-id891 . -2) (undo-tree-id892 . -2) 166) nil (26051 39871 450423 428000) 0 nil])
([nil nil ((171 . 172)) nil (26051 39871 450416 490000) 0 nil])
([nil nil ((171 . 179) (#("i" 0 1 (fontified nil)) . 171) (171 . 172) (#("instance" 0 8 (fontified nil)) . -171) (171 . 179) (#("i" 0 1 (fontified t)) . -171) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) 172) nil (26051 39871 450414 734000) 0 nil])
([nil nil ((179 . 181)) nil (26051 39871 450403 508000) 0 nil])
([nil nil ((181 . 189) (#("Instance" 0 8 (fontified nil)) . -181) (181 . 189)) nil (26051 39871 450401 433000) 0 nil])
([nil nil ((189 . 190)) nil (26051 39871 450395 811000) 0 nil])
([nil nil ((249 . 258) (t 26051 39871 462170 565000)) nil (26051 39893 295578 397000) 0 nil])
([nil nil ((258 . 262)) nil (26051 39893 295577 547000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -258) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (#("e" 0 1 (fontified t)) . -259) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (#("t" 0 1 (fontified t)) . -260) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (#(" " 0 1 (fontified t)) . -261) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) 262) nil (26051 39893 295574 819000) 0 nil])
([nil nil ((258 . 272)) nil (26051 39893 295144 933000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -270) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (#("i" 0 1 (fontified t)) . -271) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) 272) nil (26051 39893 295143 542000) 0 nil])
([nil nil ((270 . 272)) nil (26051 39893 295135 730000) 0 nil])
([nil nil ((271 . 278) (#("i" 0 1 (fontified nil)) . 271) (271 . 272) (#("instace" 0 7 (fontified nil)) . -271) (271 . 278) (#("i" 0 1 (fontified t)) . -271) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) 272) nil (26051 39893 295134 525000) 0 nil])
([nil nil ((278 . 279)) nil (26051 39893 295131 40000) 0 nil])
([nil nil ((279 . 284) (#("entry" 0 5 (fontified nil)) . -279) (279 . 284)) nil (26051 39893 295130 259000) 0 nil])
([nil nil ((284 . 285)) nil (26051 39893 295129 384000) 0 nil])
([nil nil ((285 . 294)) nil (26051 39893 295128 752000) 0 nil])
([nil nil ((294 . 306)) nil (26051 39893 295128 147000) 0 nil])
([nil nil ((306 . 311)) nil (26051 39893 295127 431000) 0 nil])
([nil nil ((310 . 317) (#("i" 0 1 (fontified nil)) . 310) (310 . 311) (#("instace" 0 7 (fontified nil)) . -310) (310 . 317) (#("i" 0 1 (fontified t)) . -310) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) 311) nil (26051 39893 295126 257000) 0 nil])
([nil nil ((317 . 320)) nil (26051 39893 295121 967000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -318) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (#("i" 0 1 (fontified t)) . -319) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) 320) nil (26051 39893 295120 313000) 0 nil])
([nil nil ((318 . 319)) nil (26051 39893 295110 513000) 0 nil])
([nil nil ((318 . 326) (#("i" 0 1 (fontified nil)) . 318) (318 . 319) (#("instance" 0 8 (fontified nil)) . -318) (318 . 326) (#("i" 0 1 (fontified t)) . -318) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) 319) nil (26051 39893 295108 64000) 0 nil])
([nil nil ((326 . 327)) nil (26051 39893 295095 214000) 0 nil])
([nil nil ((654 . 658) (#("    " 0 4 (fontified nil)) . 653) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (652 . 658) (t 26051 39893 295505 222000)) nil (26051 40673 129462 523000) 0 nil])
([nil nil ((nil rear-nonsticky nil 780 . 781) (nil fontified nil 780 . 781) (nil fontified nil 776 . 780) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 766 . 774) (nil fontified nil 764 . 766) (nil fontified nil 763 . 764) (nil fontified nil 759 . 763) (nil fontified nil 757 . 759) (nil fontified nil 750 . 757) (nil fontified nil 749 . 750) (nil fontified nil 745 . 749) (nil fontified nil 744 . 745) (nil fontified nil 729 . 744) (nil fontified nil 717 . 729) (nil fontified nil 716 . 717) (nil fontified nil 712 . 716) (nil fontified nil 700 . 712) (nil fontified nil 699 . 700) (nil fontified nil 698 . 699) (nil fontified nil 697 . 698) (nil fontified nil 691 . 697) (nil fontified nil 683 . 691) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 675 . 679) (nil fontified nil 674 . 675) (nil fontified nil 671 . 674) (nil fontified nil 670 . 671) (nil fontified nil 669 . 670) (nil fontified nil 665 . 669) (nil fontified nil 664 . 665) (nil fontified nil 662 . 664) (nil fontified nil 658 . 662) (658 . 781)) nil (26051 40673 129456 36000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -658) (undo-tree-id970 . -1) 659) nil (26051 40673 129449 148000) 0 nil])
([nil nil ((658 . 662)) nil (26051 40673 129438 36000) 0 nil])
([nil nil ((apply -21 785 956 undo--wrap-and-run-primitive-undo 785 956 ((951 . 954) (942 . 945) (929 . 932) (860 . 863) (840 . 843) (812 . 815) (785 . 788)))) nil (26051 41321 744595 379000) 0 nil])
([nil nil ((699 . 712)) nil (26051 41321 744594 856000) 0 nil])
([nil nil ((712 . 714)) nil (26051 41321 744594 287000) 0 nil])
([nil nil ((712 . 716) (#("se" 0 2 (fontified nil)) . 712) (712 . 714) (#("self" 0 4 (fontified nil)) . -712) (712 . 716) (#("se" 0 2 (fontified t)) . -712) (undo-tree-id1017 . -2) (undo-tree-id1018 . -1) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -2) (undo-tree-id1022 . -2) 714) nil (26051 41321 744593 130000) 0 nil])
([nil nil ((716 . 717)) nil (26051 41321 744587 714000) 0 nil])
([nil nil ((717 . 724) (#("surface" 0 7 (fontified nil)) . -717) (717 . 724)) nil (26051 41321 744586 960000) 0 nil])
([nil nil ((724 . 726)) nil (26051 41321 744585 921000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -724) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (#("d" 0 1 (fontified t)) . -725) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) 726) nil (26051 41321 744584 368000) 0 nil])
([nil nil ((#("self.surface" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 12 (fontified t)) . 712) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -5) (undo-tree-id982 . -5) (undo-tree-id983 . -5) (undo-tree-id984 . -5) (undo-tree-id985 . -12) (undo-tree-id986 . -12) (undo-tree-id987 . -12) (undo-tree-id988 . -12) (undo-tree-id989 . -12) (undo-tree-id990 . -12) (undo-tree-id991 . -12) (undo-tree-id992 . -12) (undo-tree-id993 . -12) (undo-tree-id994 . -12) (undo-tree-id995 . -12) (undo-tree-id996 . -12) (undo-tree-id997 . -12) (undo-tree-id998 . -12) (undo-tree-id999 . -12) (undo-tree-id1000 . -12)) nil (26051 41321 744571 649000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 712) (undo-tree-id977 . 1) (undo-tree-id978 . -1)) nil (26051 41321 744555 159000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -712) (undo-tree-id976 . 12)) nil (26051 41321 744549 502000) 0 nil])
([nil nil ((728 . 729) (t 26051 41321 755591 987000)) nil (26051 41334 427686 906000) 0 nil])
([nil nil ((728 . 731)) nil (26051 41334 427686 19000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -730) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 731) nil (26051 41334 427684 918000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -729) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#(" " 0 1 (fontified t)) . -730) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . 1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) 731) nil (26051 41334 427678 852000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -728) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 729) nil (26051 41334 427659 419000) 0 nil])
([nil nil ((682 . 691) (t 26051 41334 438926 84000)) nil (26051 42521 999946 924000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 691)) nil (26051 42521 999946 190000) 0 nil])
([nil nil ((691 . 692)) nil (26051 42521 999945 642000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -691) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) 692) nil (26051 42521 999944 844000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -691)) nil (26051 42521 999941 532000) 0 nil])
([nil nil ((682 . 691)) nil (26051 42521 999940 963000) 0 nil])
([nil nil ((691 . 695)) nil (26051 42521 999940 397000) 0 nil])
([nil nil ((691 . 698) (#("trac" 0 4 (fontified nil)) . 691) (691 . 695) (#("tracing" 0 7 (fontified nil)) . -691) (691 . 698) (#("trac" 0 4 (fontified t)) . -691) (undo-tree-id1087 . -4) (undo-tree-id1088 . -1) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) 695) nil (26051 42521 999939 71000) 0 nil])
([nil nil ((698 . 701)) nil (26051 42521 999931 147000) 0 nil])
([nil nil ((apply yas--snippet-revive 700 707 #s(yas--snippet nil nil #s(yas--exit 706 nil) 67 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 706 nil) 67 nil nil nil nil)) (700 . 707) (#("info!($0)" 0 9 (fontified nil)) . 700) (700 . 709) (#("i" 0 1 (fontified nil)) . 700) (700 . 701) (#("info!(…)" 0 8 (fontified nil)) . -700) (700 . 708) (#("i" 0 1 (fontified t)) . -700) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) 701) nil (26051 42521 999929 730000) 0 nil])
([nil nil ((706 . 708)) nil (26051 42521 999923 968000) 0 nil])
([nil nil ((707 . 708)) nil (26051 42521 999923 405000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -707) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) 708) nil (26051 42521 999922 670000) 0 nil])
([nil nil ((707 . 716)) nil (26051 42521 999920 602000) 0 nil])
([nil nil ((716 . 719)) nil (26051 42521 999920 15000) 0 nil])
([nil nil ((#("W" 0 1 (face font-lock-string-face fontified t)) . -718) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) 719) nil (26051 42521 999918 931000) 0 nil])
([nil nil ((718 . 730)) nil (26051 42521 999913 737000) 0 nil])
([nil nil ((#("H" 0 1 (face font-lock-string-face fontified t)) . -729) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 730) nil (26051 42521 999912 147000) 0 nil])
([nil nil ((729 . 732)) nil (26051 42521 999901 999000) 0 nil])
([nil nil ((734 . 735)) nil (26051 42748 896464 423000) 0 nil])
([nil nil ((apply 21 838 987 undo--wrap-and-run-primitive-undo 838 987 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -986) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -980) (#<marker at 1049 in surface.rs> . -3) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -970) (#<marker at 1036 in surface.rs> . -2) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -904) (#<marker at 967 in surface.rs> . -1) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -887) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -862) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -838)))) nil (26051 43070 114242 297000) 0 nil] [nil nil ((691 . 693) (t 26051 42522 2331 714000)) ((#("//" 0 2 (face font-lock-comment-delimiter-face fontified t)) . 691) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (t 26051 42742 279011 902000)) (26051 42742 277480 674000) 0 nil])
([nil nil ((886 . 895)) nil (26051 43070 114241 713000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 947 . 948) (nil fontified nil 947 . 948) (nil fontified nil 946 . 947) (nil fontified nil 945 . 946) (nil fontified nil 918 . 945) (nil fontified nil 917 . 918) (nil fontified nil 912 . 917) (nil fontified nil 910 . 912) (nil fontified nil 903 . 910) (nil fontified nil 895 . 903) (895 . 948)) nil (26051 43070 114240 766000) 0 nil])
([nil nil ((948 . 956)) nil (26051 43070 114238 779000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -895)) nil (26051 43070 114238 83000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -947) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) 948) nil (26051 43070 114237 210000) 0 nil])
([nil nil ((#("       
" 0 7 (fontified t) 7 8 (fontified t)) . 940) (undo-tree-id1135 . -8) (undo-tree-id1136 . -7) (undo-tree-id1137 . -7) (undo-tree-id1138 . -7) (undo-tree-id1139 . -7) (undo-tree-id1140 . -8)) nil (26051 43070 114233 521000) 0 nil])
([nil nil ((#("Destroying" 0 10 (face font-lock-string-face fontified t)) . -911) (undo-tree-id1133 . -10) (undo-tree-id1134 . -10) 921) nil (26051 43070 114228 138000) 0 nil])
([nil nil ((911 . 915)) nil (26051 43081 874566 794000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -913) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -914) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) 915) nil (26051 43085 745914 887000) 0 nil] [nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -913) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -914) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) 915) ((913 . 915)) (26051 43081 464670 255000) 0 nil])
([nil nil ((913 . 919)) nil (26051 43085 745896 475000) 0 nil])
([nil nil ((913 . 919)) ((#("opping" 0 6 (face font-lock-string-face fontified t)) . 913) (undo-tree-id1145 . -6) (undo-tree-id1146 . -6) (undo-tree-id1147 . -6) (undo-tree-id1148 . -6) (undo-tree-id1149 . -6) (undo-tree-id1150 . -6) (undo-tree-id1151 . -6) (undo-tree-id1152 . -6) (undo-tree-id1153 . -6) (undo-tree-id1154 . -6) (undo-tree-id1155 . -6) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) (undo-tree-id1160 . -6) (undo-tree-id1161 . -6) (undo-tree-id1162 . -6) (undo-tree-id1163 . -6) (undo-tree-id1164 . -6) (undo-tree-id1165 . -6) (undo-tree-id1166 . -6) (undo-tree-id1167 . -6) (undo-tree-id1168 . -6) (undo-tree-id1169 . -6) (t 26051 43070 125698 562000)) (26051 43070 114208 148000) 0 nil])
([nil current ((apply -24 838 1063 undo--wrap-and-run-primitive-undo 838 1063 ((1058 . 1061) (1049 . 1052) (1036 . 1039) (967 . 970) (947 . 950) (893 . 896) (865 . 868) (838 . 841)))) nil (26051 43206 346320 672000) 0 nil])
nil
nil
