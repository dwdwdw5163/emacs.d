(undo-tree-save-format-version . 1)
"9dbe445c56039ab4f0f36d5385c6579b1485445e"
[nil nil nil nil (26115 4800 463789 183000) 0 nil]
([nil nil ((20443 . 20451) (t 26114 62349 489173 117000)) nil (26115 4800 463788 280000) 0 nil])
([nil nil ((20451 . 20456)) nil (26115 4800 463787 340000) 0 nil])
([nil nil ((14 . 32) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 20476 20478 nil nil nil t nil)) nil 0 nil #s(yas--field 1 20476 20478 nil nil nil t nil) nil nil)) (20451 . 20493) (#("printf(${1:const char *__restrict format, ...})" 0 47 (fontified nil)) . 20451) (20451 . 20498) (#("prin" 0 4 (fontified nil)) . 20451) (20451 . 20455) (#("printf(const char *__restrict format, ...)" 0 42 (fontified nil)) . -20451) (20451 . 20493) (#("print" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20451) (undo-tree-id46 . -5) 20456) nil (26115 4800 463786 197000) 0 nil])
([nil nil ((20477 . 20478) (#("const char *__restrict format, ..." 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 10 (face font-lock-type-face fontified t) 10 12 (fontified t) 12 22 (face font-lock-variable-name-face fontified t) 22 34 (fontified t)) . 20477) (20476 . 20477)) nil (26115 4800 463783 311000) 0 nil])
([nil nil ((apply yas--snippet-revive 20469 20479 #s(yas--snippet nil (#s(yas--field 1 20476 20478 nil nil nil t nil)) nil 0 nil #s(yas--field 1 20476 20478 nil nil nil t nil) nil nil))) nil (26115 4800 463782 307000) 0 nil])
([nil nil ((20479 . 20480)) nil (26115 4800 463781 638000) 0 nil])
([nil nil ((20477 . 20478)) nil (26115 4800 463780 994000) 0 nil])
([nil nil ((20478 . 20479)) nil (26115 4800 463780 407000) 0 nil])
([nil nil ((20480 . 20481)) nil (26115 4800 463779 783000) 0 nil])
([nil nil ((20481 . 20482)) nil (26115 4800 463779 97000) 0 nil])
([nil nil ((20477 . 20480)) nil (26115 4800 463778 481000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -20479) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 20480) nil (26115 4800 463777 293000) 0 nil])
([nil nil ((20479 . 20485)) nil (26115 4800 463768 765000) 0 nil])
([nil nil ((20485 . 20486)) nil (26115 4800 463768 187000) 0 nil])
([nil nil ((20486 . 20487)) nil (26115 4800 463767 431000) 0 nil])
([nil nil ((20492 . 20493)) nil (26115 4800 463766 742000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -20492) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 20493) nil (26115 4800 463765 486000) 0 nil])
([nil nil ((20492 . 20495)) nil (26115 4800 463755 263000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -20494) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 20495) nil (26115 4800 463753 385000) 0 nil])
([nil nil ((20494 . 20496)) nil (26115 4800 463720 121000) 0 nil])
([nil nil ((20496 . 20497)) nil (26115 4800 463718 882000) 0 nil])
([nil nil ((20497 . 20501) (#("Name" 0 4 (fontified nil)) . -20497) (20497 . 20501)) nil (26115 4800 463714 500000) 0 nil])
([nil nil ((20501 . 20503) (t 26115 4800 503643 604000)) nil (26115 4817 301320 484000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -20502) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 20503) nil (26115 4817 301318 751000) 0 nil])
([nil nil ((20502 . 20505)) nil (26115 4817 301305 718000) 0 nil])
([nil nil ((apply yas--snippet-revive 20502 20509 #s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 1 nil nil nil nil)) (20502 . 20509) (#("c_str()" 0 7 (fontified nil)) . 20502) (20502 . 20509) (#("c_str() const" 0 13 (fontified nil)) . -20502) (20502 . 20515) (#("str" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -20502) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) 20505) nil (26115 4817 301299 705000) 0 nil])
([nil nil ((#("printf(\"Map Name: %s\", Map->Name.c_str());" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-3-face) fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 32 (fontified t) 32 33 (fontified t) 33 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-4-face) fontified t) 39 40 (face (rainbow-delimiters-depth-4-face) fontified t) 40 41 (face (rainbow-delimiters-depth-3-face) fontified t) 41 42 (fontified t)) . 20469) (undo-tree-id271 . -8) (undo-tree-id272 . -8) (undo-tree-id273 . -22) (undo-tree-id274 . -33) (undo-tree-id275 . -33) (undo-tree-id276 . -33) (undo-tree-id277 . -33) (undo-tree-id278 . -33) (undo-tree-id279 . -33) (undo-tree-id280 . -33) (undo-tree-id281 . -33) (undo-tree-id282 . -33) (undo-tree-id283 . -33) (undo-tree-id284 . -33) (undo-tree-id285 . -33) (undo-tree-id286 . -33) (undo-tree-id287 . -33) (undo-tree-id288 . -33) (undo-tree-id289 . -33) (undo-tree-id290 . -33) (undo-tree-id291 . -33) (undo-tree-id292 . -33) (undo-tree-id293 . -33) (undo-tree-id294 . -33) (undo-tree-id295 . -33) (undo-tree-id296 . -33) (undo-tree-id297 . -33) (undo-tree-id298 . -33) (undo-tree-id299 . -33) (undo-tree-id300 . -33) (undo-tree-id301 . -33) (undo-tree-id302 . -33) (undo-tree-id303 . -33) (undo-tree-id304 . -33) (undo-tree-id305 . -33) (undo-tree-id306 . -33) (undo-tree-id307 . -33) (undo-tree-id308 . -33) (undo-tree-id309 . -33) (undo-tree-id310 . -33) (undo-tree-id311 . -33) (undo-tree-id312 . -33) (undo-tree-id313 . -33) (undo-tree-id314 . -33) (undo-tree-id315 . -33) (undo-tree-id316 . -33) (undo-tree-id317 . -33) (undo-tree-id318 . -33) (undo-tree-id319 . -33) (undo-tree-id320 . -33) (undo-tree-id321 . -33) (undo-tree-id322 . -33) (undo-tree-id323 . -33) (undo-tree-id324 . -33) (undo-tree-id325 . -33) (undo-tree-id326 . -33) (undo-tree-id327 . -33) (undo-tree-id328 . -33) (undo-tree-id329 . -33) (undo-tree-id330 . -33) (undo-tree-id331 . -33) (undo-tree-id332 . -33) (undo-tree-id333 . -33) (undo-tree-id334 . -33) (undo-tree-id335 . -40) (undo-tree-id336 . -40) (undo-tree-id337 . -40) (undo-tree-id338 . -40) (undo-tree-id339 . -40) (undo-tree-id340 . -40) (undo-tree-id341 . -40) (undo-tree-id342 . -40) (undo-tree-id343 . -40) (undo-tree-id344 . -40) (undo-tree-id345 . -40) (undo-tree-id346 . -40) (undo-tree-id347 . -40) (undo-tree-id348 . -40) (undo-tree-id349 . -40) (undo-tree-id350 . -40) (undo-tree-id351 . -40) (undo-tree-id352 . -40) (undo-tree-id353 . -40) (undo-tree-id354 . -40) (undo-tree-id355 . -40) (undo-tree-id356 . -40) (undo-tree-id357 . -40) (undo-tree-id358 . -40) (undo-tree-id359 . -40) (undo-tree-id360 . -40) (undo-tree-id361 . -40) (undo-tree-id362 . -40) (undo-tree-id363 . -40) (undo-tree-id364 . -40) (undo-tree-id365 . -40) (undo-tree-id366 . -40) (undo-tree-id367 . -40) (undo-tree-id368 . -40) (undo-tree-id369 . -40) (undo-tree-id370 . -40) (undo-tree-id371 . -40) (undo-tree-id372 . -40) (undo-tree-id373 . -40) (undo-tree-id374 . -40) (undo-tree-id375 . -40) (undo-tree-id376 . -40) (undo-tree-id377 . -40) (undo-tree-id378 . -40) (undo-tree-id379 . -40) (undo-tree-id380 . -40) (undo-tree-id381 . -40) (undo-tree-id382 . -40) (undo-tree-id383 . -40) (undo-tree-id384 . -40) (undo-tree-id385 . -40) (undo-tree-id386 . -40) (undo-tree-id387 . -40) (undo-tree-id388 . -40) (undo-tree-id389 . -40) (undo-tree-id390 . -40) (undo-tree-id391 . -40) (undo-tree-id392 . -40) (undo-tree-id393 . -40) (undo-tree-id394 . -40) (undo-tree-id395 . -40) (undo-tree-id396 . -40) (undo-tree-id397 . -40) (undo-tree-id398 . -40) (undo-tree-id399 . -40) (undo-tree-id400 . -40) (undo-tree-id401 . -40) (undo-tree-id402 . -40) (undo-tree-id403 . -40) (undo-tree-id404 . -40) (undo-tree-id405 . -40) (undo-tree-id406 . -40) (undo-tree-id407 . -40) (undo-tree-id408 . -40) (undo-tree-id409 . -40) (undo-tree-id410 . -40) (undo-tree-id411 . -40) (undo-tree-id412 . -40) (undo-tree-id413 . -40) (undo-tree-id414 . -40) (undo-tree-id415 . -40) (undo-tree-id416 . -40) (undo-tree-id417 . -40) (undo-tree-id418 . -40) (undo-tree-id419 . -40) (undo-tree-id420 . -40) (undo-tree-id421 . -40) (undo-tree-id422 . -40) (undo-tree-id423 . -40) (undo-tree-id424 . -40) (undo-tree-id425 . -40) (undo-tree-id426 . -40) (undo-tree-id427 . -40) (undo-tree-id428 . -40) (undo-tree-id429 . -40) (undo-tree-id430 . -40) (undo-tree-id431 . -40) (undo-tree-id432 . -40) (undo-tree-id433 . -40) (undo-tree-id434 . -40) (undo-tree-id435 . -40) (undo-tree-id436 . -40) (undo-tree-id437 . -40) (undo-tree-id438 . -40) (undo-tree-id439 . -40) (undo-tree-id440 . -40) (undo-tree-id441 . -40) (undo-tree-id442 . -40) (undo-tree-id443 . -40) (undo-tree-id444 . -40) (undo-tree-id445 . -40) (undo-tree-id446 . -40) (undo-tree-id447 . -40) (undo-tree-id448 . -40) (undo-tree-id449 . -40) (undo-tree-id450 . -40) (undo-tree-id451 . -40) (undo-tree-id452 . -40) (undo-tree-id453 . -40) (undo-tree-id454 . -40) (undo-tree-id455 . -40) (undo-tree-id456 . -40) (undo-tree-id457 . -40) (undo-tree-id458 . -40) (undo-tree-id459 . -40) (undo-tree-id460 . -40) (undo-tree-id461 . -40) (undo-tree-id462 . -40) (undo-tree-id463 . -40) (undo-tree-id464 . -40) (undo-tree-id465 . -40) (undo-tree-id466 . -40) (undo-tree-id467 . -40) (undo-tree-id468 . -40) (undo-tree-id469 . -40) (undo-tree-id470 . -40) (undo-tree-id471 . -40) (undo-tree-id472 . -40) (undo-tree-id473 . -40) (undo-tree-id474 . -40) (undo-tree-id475 . -40) (undo-tree-id476 . -40) (undo-tree-id477 . -40) (undo-tree-id478 . -40) (undo-tree-id479 . -40) (undo-tree-id480 . -40) (undo-tree-id481 . -40) (undo-tree-id482 . -40) (undo-tree-id483 . -40) (undo-tree-id484 . -40) (undo-tree-id485 . -40) (undo-tree-id486 . -40) (undo-tree-id487 . -40) (undo-tree-id488 . -40) (undo-tree-id489 . -40) (undo-tree-id490 . -40) (undo-tree-id491 . -40) (undo-tree-id492 . -40) (undo-tree-id493 . -40) (undo-tree-id494 . -40) (undo-tree-id495 . -40) (undo-tree-id496 . -40) (undo-tree-id497 . -40) (undo-tree-id498 . -40) (undo-tree-id499 . -40) (undo-tree-id500 . -40) (undo-tree-id501 . -40) (undo-tree-id502 . -40) (undo-tree-id503 . -40) (undo-tree-id504 . -40) (undo-tree-id505 . -40) (undo-tree-id506 . -40) (undo-tree-id507 . -40) (undo-tree-id508 . -40) (undo-tree-id509 . -40) (undo-tree-id510 . -40) (undo-tree-id511 . -40) (undo-tree-id512 . -40) (undo-tree-id513 . -40) (undo-tree-id514 . -40) (undo-tree-id515 . -40) (undo-tree-id516 . -40) (undo-tree-id517 . -40) (undo-tree-id518 . -40) (undo-tree-id519 . -40) (undo-tree-id520 . -40) (undo-tree-id521 . -40) (undo-tree-id522 . -40) (undo-tree-id523 . -40) (undo-tree-id524 . -40) (undo-tree-id525 . -40) (undo-tree-id526 . -40) (undo-tree-id527 . -40) (undo-tree-id528 . -40) (undo-tree-id529 . -40) (undo-tree-id530 . -40) (undo-tree-id531 . -40) (undo-tree-id532 . -40) (undo-tree-id533 . -42) (undo-tree-id534 . -42) (undo-tree-id535 . -42) (undo-tree-id536 . -42) (undo-tree-id537 . -42) (undo-tree-id538 . -42) (undo-tree-id539 . -42) (undo-tree-id540 . -42) (undo-tree-id541 . -42) (undo-tree-id542 . -42) (undo-tree-id543 . -42) (undo-tree-id544 . -42) (undo-tree-id545 . -42) (undo-tree-id546 . -42) (undo-tree-id547 . -42) (undo-tree-id548 . -42) (undo-tree-id549 . -42) (undo-tree-id550 . -42) (undo-tree-id551 . -42) (t 26115 4817 346977 967000)) nil (26115 4857 207788 824000) 0 nil])
([nil nil ((20469 . 20473)) nil (26115 4857 207582 339000) 0 nil])
([nil nil ((20469 . 20478) (#("cout" 0 4 (fontified nil)) . 20469) (20469 . 20473) (#("std::cout" 0 9 (fontified nil)) . -20469) (20469 . 20478) (#("cout" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -20469) (undo-tree-id216 . -4) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) 20473) nil (26115 4857 207577 360000) 0 nil])
([nil nil ((20478 . 20479)) nil (26115 4857 206910 667000) 0 nil])
([nil nil ((20479 . 20481)) nil (26115 4857 206909 984000) 0 nil])
([nil nil ((20481 . 20484)) nil (26115 4857 206909 366000) 0 nil])
([nil nil ((20483 . 20491)) nil (26115 4857 206908 809000) 0 nil])
([nil nil ((20491 . 20492)) nil (26115 4857 206908 179000) 0 nil])
([nil nil ((20492 . 20493)) nil (26115 4857 206907 655000) 0 nil])
([nil nil ((20494 . 20495)) nil (26115 4857 206907 52000) 0 nil])
([nil nil ((20495 . 20497)) nil (26115 4857 206906 392000) 0 nil])
([nil nil ((20497 . 20502)) nil (26115 4857 206905 673000) 0 nil])
([nil nil ((20502 . 20503)) nil (26115 4857 206904 981000) 0 nil])
([nil nil ((20503 . 20504)) nil (26115 4857 206904 9000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -20503) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) 20504) nil (26115 4857 206902 625000) 0 nil])
([nil nil ((20503 . 20504)) nil (26115 4857 206892 15000) 0 nil])
([nil nil ((20503 . 20507) (#("Name" 0 4 (fontified nil)) . -20503) (20503 . 20507) (#("N" 0 1 (fontified t)) . -20503) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 20504) nil (26115 4857 206890 503000) 0 nil])
([nil nil ((20507 . 20508)) nil (26115 4857 206880 507000) 0 nil])
([nil nil ((20508 . 20510)) nil (26115 4857 206879 803000) 0 nil])
([nil nil ((20510 . 20514)) nil (26115 4857 206878 824000) 0 nil])
([nil nil ((52 . 71) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 20539 20540 nil nil nil t nil)) nil 2 nil #s(yas--field 1 20539 20540 nil nil nil t nil) nil nil)) (20511 . 20554) (#("std::endl(${1:basic_ostream<CharT, Traits> &os})" 0 27 (fontified nil) 27 28 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 28 33 (fontified nil) 33 34 (fontified nil c-type c-<>-arg-sep) 34 41 (fontified nil) 41 42 (fontified nil category c->-as-paren-syntax) 42 48 (fontified nil)) . 20511) (20511 . 20559) (#("end" 0 3 (fontified nil)) . 20511) (20511 . 20514) (#("std::endl(basic_ostream<CharT, Traits> &os)" 0 43 (fontified nil)) . -20511) (20511 . 20554) (#("end" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -20511) (undo-tree-id152 . -3) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) 20514) nil (26115 4857 206798 691000) 0 nil])
([nil nil ((#("basic_ostream<CharT, Traits> &os)" 0 13 (fontified t) 13 14 (fontified t) 14 19 (fontified t) 19 20 (fontified t) 20 27 (fontified t) 27 28 (fontified t) 28 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t)) . 20540) (undo-tree-id148 . -32) (undo-tree-id149 . -33) (undo-tree-id150 . -33) (undo-tree-id151 . -33)) nil (26115 4857 206285 506000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -20539) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 20540) nil (26115 4857 206278 409000) 0 nil])
([nil nil ((20539 . 20540)) nil (26115 4857 206055 263000) 0 nil])
([nil nil ((apply yas--snippet-revive 20530 20540 #s(yas--snippet nil (#s(yas--field 1 20539 20540 nil nil nil t nil)) nil 2 nil #s(yas--field 1 20539 20540 nil nil nil t nil) nil nil))) nil (26115 4920 957574 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20725 . 20726) (nil fontified nil 20725 . 20726) (nil fontified nil 20719 . 20725) (nil fontified nil 20716 . 20719) (nil fontified nil 20715 . 20716) (nil fontified nil 20714 . 20715) (nil fontified nil 20713 . 20714) (nil fontified nil 20712 . 20713) (nil fontified nil 20708 . 20712) (nil fontified nil 20707 . 20708) (nil fontified nil 20706 . 20707) (nil fontified nil 20705 . 20706) (nil fontified nil 20704 . 20705) (nil fontified nil 20703 . 20704) (nil fontified nil 20702 . 20703) (nil fontified nil 20701 . 20702) (nil fontified nil 20700 . 20701) (nil fontified nil 20699 . 20700) (nil fontified nil 20698 . 20699) (nil fontified nil 20697 . 20698) (nil fontified nil 20696 . 20697) (nil fontified nil 20695 . 20696) (nil fontified nil 20694 . 20695) (nil fontified nil 20693 . 20694) (nil fontified nil 20692 . 20693) (nil fontified nil 20691 . 20692) (nil fontified nil 20690 . 20691) (nil fontified nil 20689 . 20690) (nil fontified nil 20688 . 20689) (nil fontified nil 20687 . 20688) (nil fontified nil 20686 . 20687) (nil fontified nil 20685 . 20686) (nil fontified nil 20684 . 20685) (nil fontified nil 20683 . 20684) (nil fontified nil 20677 . 20683) (nil fontified nil 20674 . 20677) (20674 . 20726) (t 26115 4857 253647 45000)) nil (26115 4920 957572 949000) 0 nil])
([nil nil ((20674 . 20682) 20726) nil (26115 4920 957567 591000) 0 nil])
([nil nil ((#("Name" 0 4 (fontified t)) . -20716) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) 20720) nil (26115 4920 957566 381000) 0 nil])
([nil nil ((#("Map->" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20711) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) (undo-tree-id611 . -5) (undo-tree-id612 . -5) (undo-tree-id613 . -5) (undo-tree-id614 . -5) (undo-tree-id615 . -5) (undo-tree-id616 . -5) (undo-tree-id617 . -5) (undo-tree-id618 . -5) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) 20716) nil (26115 4920 957560 31000) 0 nil])
([nil nil ((20711 . 20713)) nil (26115 4920 957548 463000) 0 nil])
([nil nil ((20711 . 20717) (#("My" 0 2 (fontified nil)) . 20711) (20711 . 20713) (#("Myself" 0 6 (fontified nil)) . -20711) (20711 . 20717) (#("My" 0 1 (fontified t) 1 2 (fontified t)) . -20711) (undo-tree-id581 . -2) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) 20713) nil (26115 4920 957545 246000) 0 nil])
([nil nil ((20717 . 20718)) nil (26115 4920 957273 603000) 0 nil])
([nil nil ((20718 . 20719)) nil (26115 4920 957272 903000) 0 nil])
([nil nil ((20719 . 20720)) nil (26115 4920 957271 828000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -20719) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) 20720) nil (26115 4920 957270 229000) 0 nil])
([nil nil ((20719 . 20721)) nil (26115 4920 957262 209000) 0 nil])
([nil nil ((apply yas--snippet-revive 20719 20728 #s(yas--snippet nil nil nil 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 3 nil nil nil nil)) (20719 . 20728) (#("IsValid()" 0 9 (fontified nil)) . 20719) (20719 . 20728) (#("IsValid()" 0 9 (fontified nil)) . -20719) (20719 . 20728) (#("Is" 0 1 (fontified t) 1 2 (fontified t)) . -20719) (undo-tree-id552 . -2) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) 20721) nil (26115 4920 957257 319000) 0 nil])
([nil nil ((20444 . 20455) (t 26115 4920 970317 518000)) nil (26115 5079 835955 919000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20506 . 20507) (nil fontified nil 20506 . 20507) (nil fontified nil 20500 . 20506) (nil fontified nil 20497 . 20500) (nil fontified nil 20496 . 20497) (nil fontified nil 20495 . 20496) (nil fontified nil 20494 . 20495) (nil fontified nil 20493 . 20494) (nil fontified nil 20489 . 20493) (nil fontified nil 20488 . 20489) (nil fontified nil 20487 . 20488) (nil fontified nil 20486 . 20487) (nil fontified nil 20485 . 20486) (nil fontified nil 20484 . 20485) (nil fontified nil 20483 . 20484) (nil fontified nil 20482 . 20483) (nil fontified nil 20481 . 20482) (nil fontified nil 20480 . 20481) (nil fontified nil 20479 . 20480) (nil fontified nil 20478 . 20479) (nil fontified nil 20477 . 20478) (nil fontified nil 20476 . 20477) (nil fontified nil 20475 . 20476) (nil fontified nil 20474 . 20475) (nil fontified nil 20473 . 20474) (nil fontified nil 20472 . 20473) (nil fontified nil 20471 . 20472) (nil fontified nil 20470 . 20471) (nil fontified nil 20469 . 20470) (nil fontified nil 20468 . 20469) (nil fontified nil 20467 . 20468) (nil fontified nil 20466 . 20467) (nil fontified nil 20465 . 20466) (nil fontified nil 20464 . 20465) (nil fontified nil 20458 . 20464) (nil fontified nil 20455 . 20458) (20455 . 20507)) nil (26115 5079 835953 625000) 0 nil])
([nil nil ((20508 . 20518) (#("            " 0 12 (fontified t)) . 20508) 20532) nil (26115 5079 835945 632000) 0 nil])
([nil nil ((#("Name " 0 4 (fontified t) 4 5 (fontified t)) . -20489) (undo-tree-id871 . -5) (undo-tree-id872 . -5) (undo-tree-id873 . -4) (undo-tree-id874 . -5) (undo-tree-id875 . -5) (undo-tree-id876 . -5) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) 20494) nil (26115 5079 835943 573000) 0 nil])
([nil nil ((#("Map->" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20484) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -3) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -5) (undo-tree-id859 . -5) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (undo-tree-id870 . -5) 20489) nil (26115 5079 835931 582000) 0 nil])
([nil nil ((#("Name: \" << " 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . -20473) (undo-tree-id819 . -11) (undo-tree-id820 . -11) (undo-tree-id821 . -4) (undo-tree-id822 . -11) (undo-tree-id823 . -11) (undo-tree-id824 . -11) (undo-tree-id825 . -11) (undo-tree-id826 . -11) (undo-tree-id827 . -11) (undo-tree-id828 . -11) (undo-tree-id829 . -11) (undo-tree-id830 . -11) (undo-tree-id831 . -11) (undo-tree-id832 . -11) (undo-tree-id833 . -11) (undo-tree-id834 . -11) (undo-tree-id835 . -11) (undo-tree-id836 . -11) (undo-tree-id837 . -11) (undo-tree-id838 . -11) (undo-tree-id839 . -11) (undo-tree-id840 . -11) (undo-tree-id841 . -11) (undo-tree-id842 . -11) (undo-tree-id843 . -11) (undo-tree-id844 . -11) (undo-tree-id845 . -11) (undo-tree-id846 . -11) (undo-tree-id847 . -11) (undo-tree-id848 . -11) 20484) nil (26115 5079 835752 800000) 0 nil])
([nil nil ((#("Map " 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t)) . -20469) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -3) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) 20473) nil (26115 5079 835723 840000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -20468) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) 20469) nil (26115 5079 835681 992000) 0 nil])
([nil nil ((20468 . 20470)) nil (26115 5079 835628 562000) 0 nil])
([nil nil ((20469 . 20471)) nil (26115 5079 835627 614000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -20469) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -20470) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 20471) nil (26115 5079 835622 653000) 0 nil])
([nil nil ((20469 . 20470)) nil (26115 5079 833927 465000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -20469) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) 20470) nil (26115 5079 833925 872000) 0 nil])
([nil nil ((20469 . 20471)) nil (26115 5079 833913 261000) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-string-face fontified t)) . -20469) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -20470) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) 20471) nil (26115 5079 833910 228000) 0 nil])
([nil nil ((20469 . 20471)) nil (26115 5079 833877 437000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -20470) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 20471) nil (26115 5079 833875 520000) 0 nil])
([nil nil ((20470 . 20480)) nil (26115 5079 833860 137000) 0 nil])
([nil nil ((20480 . 20487)) nil (26115 5079 833855 132000) 0 nil])
([nil nil ((20488 . 20489) (t 26115 5079 836993 919000)) nil (26115 5135 617398 997000) 0 nil])
([nil nil ((20487 . 20488)) nil (26115 5135 617398 382000) 0 nil])
([nil nil ((20488 . 20489)) nil (26115 5135 617397 934000) 0 nil])
([nil nil ((20490 . 20492)) nil (26115 5135 617397 510000) 0 nil])
([nil nil ((20492 . 20493)) nil (26115 5135 617397 76000) 0 nil])
([nil nil ((20493 . 20495)) nil (26115 5135 617396 607000) 0 nil])
([nil nil ((20493 . 20496) (#("Ma" 0 2 (fontified nil)) . 20493) (20493 . 20495) (#("Map" 0 3 (fontified nil)) . -20493) (20493 . 20496) (#("Ma" 0 1 (fontified t) 1 2 (fontified t)) . -20493) (undo-tree-id891 . -2) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -2) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (undo-tree-id910 . -2) (undo-tree-id911 . -2) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -2) (undo-tree-id917 . -2) (undo-tree-id918 . -2) (undo-tree-id919 . -2) 20495) nil (26115 5135 617394 680000) 0 nil])
([nil nil ((20496 . 20497)) nil (26115 5135 617376 537000) 0 nil])
([nil nil ((20497 . 20498)) nil (26115 5135 617375 964000) 0 nil])
([nil nil ((20498 . 20499)) nil (26115 5135 617375 54000) 0 nil])
([nil nil ((20498 . 20502) (#("Name" 0 4 (fontified nil)) . -20498) (20498 . 20502) (#("N" 0 1 (fontified t)) . -20498) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) 20499) nil (26115 5135 617371 147000) 0 nil])
([nil nil ((#("std::cout << \"Map Name: \" << Map->Name << std::endl;" 0 3 (face font-lock-constant-face fontified t) 3 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 45 (face font-lock-constant-face fontified t) 45 51 (fontified t) 51 52 (fontified t)) . 20558) (undo-tree-id921 . -51) (undo-tree-id922 . -49) (undo-tree-id923 . -49) (undo-tree-id924 . -49) (undo-tree-id925 . -49) (undo-tree-id926 . -49) (undo-tree-id927 . -49) (undo-tree-id928 . -49) (undo-tree-id929 . -49) (undo-tree-id930 . -49) (undo-tree-id931 . -52) (t 26115 5135 616997 343000)) nil (26115 5142 225292 414000) 0 nil])
([nil nil ((#("std::cout << \"Map Name: \" << Myself->IsValid() << std::endl;" 0 3 (face font-lock-constant-face fontified t) 3 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-3-face) fontified t) 45 46 (face (rainbow-delimiters-depth-3-face) fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 53 (face font-lock-constant-face fontified t) 53 59 (fontified t) 59 60 (fontified t rear-nonsticky t)) . 20700) (undo-tree-id920 . -60)) nil (26115 5142 225282 70000) 0 nil])
([nil nil ((20356 . 20363) (t 26115 5142 223664 415000)) nil (26115 5208 589079 333000) 0 nil])
([nil nil ((20363 . 20375)) nil (26115 5208 589078 660000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -20374) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) 20375) nil (26115 5208 589077 737000) 0 nil])
([nil nil ((20374 . 20375)) nil (26115 5208 589072 229000) 0 nil])
([nil nil ((#("return true;" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 11 (face font-lock-constant-face fontified t) 11 12 (fontified t)) . 20546) (undo-tree-id932 . -9) (undo-tree-id933 . -10) (undo-tree-id934 . -11) (undo-tree-id935 . -11) (undo-tree-id936 . -11) (undo-tree-id937 . -11) (undo-tree-id938 . -11) (undo-tree-id939 . -11) (undo-tree-id940 . -11) (undo-tree-id941 . -12)) nil (26115 5208 589070 672000) 0 nil])
([nil nil ((20546 . 20549)) nil (26115 5208 589058 728000) 0 nil])
([nil nil ((20549 . 20551)) nil (26115 5208 589057 555000) 0 nil])
([nil nil ((20551 . 20552)) nil (26115 5208 589053 910000) 0 nil])
([nil nil ((#("return true;" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 11 (face font-lock-constant-face fontified t) 11 12 (fontified t)) . 20682) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -12) (t 26115 5208 590335 156000)) nil (26115 5214 814068 809000) 0 nil])
([nil nil ((20682 . 20687)) nil (26115 5214 814065 264000) 0 nil])
([nil nil ((20670 . 20680) (#("            " 0 12 (fontified nil)) . 20670) (undo-tree-id950 . -12) (undo-tree-id951 . -12) (undo-tree-id952 . -12) (undo-tree-id953 . -12) (undo-tree-id954 . -12) (undo-tree-id955 . -12) (undo-tree-id956 . -12) (undo-tree-id957 . -12) (undo-tree-id958 . -12) (undo-tree-id959 . -12) (undo-tree-id960 . -12) (undo-tree-id961 . -12) (undo-tree-id962 . -12) (undo-tree-id963 . -12) (undo-tree-id964 . -12) (undo-tree-id965 . -12) (undo-tree-id966 . -12) (20687 . 20688)) nil (26115 5214 814061 983000) 0 nil])
([nil nil ((20669 . 20680) (t 26115 5214 813668 871000)) nil (26115 5237 645158 9000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20751 . 20752) (nil fontified nil 20751 . 20752) (nil fontified nil 20750 . 20751) (nil fontified nil 20744 . 20750) (nil fontified nil 20741 . 20744) (nil fontified nil 20740 . 20741) (nil fontified nil 20739 . 20740) (nil fontified nil 20738 . 20739) (nil fontified nil 20737 . 20738) (nil fontified nil 20733 . 20737) (nil fontified nil 20732 . 20733) (nil fontified nil 20731 . 20732) (nil fontified nil 20728 . 20731) (nil fontified nil 20727 . 20728) (nil fontified nil 20726 . 20727) (nil fontified nil 20725 . 20726) (nil fontified nil 20724 . 20725) (nil fontified nil 20723 . 20724) (nil fontified nil 20722 . 20723) (nil fontified nil 20721 . 20722) (nil fontified nil 20720 . 20721) (nil fontified nil 20719 . 20720) (nil fontified nil 20718 . 20719) (nil fontified nil 20717 . 20718) (nil fontified nil 20716 . 20717) (nil fontified nil 20715 . 20716) (nil fontified nil 20714 . 20715) (nil fontified nil 20713 . 20714) (nil fontified nil 20712 . 20713) (nil fontified nil 20711 . 20712) (nil fontified nil 20710 . 20711) (nil fontified nil 20709 . 20710) (nil fontified nil 20708 . 20709) (nil fontified nil 20707 . 20708) (nil fontified nil 20706 . 20707) (nil fontified nil 20705 . 20706) (nil fontified nil 20704 . 20705) (nil fontified nil 20703 . 20704) (nil fontified nil 20702 . 20703) (nil fontified nil 20701 . 20702) (nil fontified nil 20700 . 20701) (nil fontified nil 20699 . 20700) (nil fontified nil 20693 . 20699) (nil fontified nil 20690 . 20693) (nil fontified nil 20680 . 20690) (20680 . 20752)) nil (26115 5237 645156 296000) 0 nil])
([nil nil ((20670 . 20680) (#("                    " 0 10 (fontified t) 10 20 (fontified t)) . 20670) (undo-tree-id1042 . -10) (undo-tree-id1043 . -10) (undo-tree-id1044 . -10) (undo-tree-id1045 . -10) (undo-tree-id1046 . -10) (undo-tree-id1047 . -10) (undo-tree-id1048 . -10) (undo-tree-id1049 . -10) (undo-tree-id1050 . -10) (undo-tree-id1051 . -10)) nil (26115 5237 645150 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20742) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1)) nil (26115 5237 645144 197000) 0 nil])
([nil nil ((#("std::cout << \"Level Not playable: \"<< Map->Name << std::endl;" 0 3 (face font-lock-constant-face fontified t) 3 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 54 (face font-lock-constant-face fontified t) 54 60 (fontified t) 60 61 (fontified t rear-nonsticky t)) . 20474) (undo-tree-id1005 . -14) (undo-tree-id1006 . -14) (undo-tree-id1007 . -14) (undo-tree-id1008 . -14) (undo-tree-id1009 . -14) (undo-tree-id1010 . -14) (undo-tree-id1011 . -14) (undo-tree-id1012 . -14) (undo-tree-id1013 . -14) (undo-tree-id1014 . -14) (undo-tree-id1015 . -14) (undo-tree-id1016 . -14) (undo-tree-id1017 . -19) (undo-tree-id1018 . -19) (undo-tree-id1019 . -14) (undo-tree-id1020 . -19) (undo-tree-id1021 . -19) (undo-tree-id1022 . -14) (undo-tree-id1023 . -32) (undo-tree-id1024 . -61)) nil (26115 5237 644945 942000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 20510) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (20509 . 20510) (#(" " 0 1 (fontified nil)) . 20508) (20509 . 20510) 20510) nil (26115 5237 644934 153000) 0 nil])
([nil nil ((nil fontified nil 20570 . 20571) (nil fontified nil 20564 . 20570) (nil fontified nil 20561 . 20564) (nil fontified nil 20560 . 20561) (nil fontified nil 20559 . 20560) (nil fontified nil 20558 . 20559) (nil fontified nil 20557 . 20558) (nil fontified nil 20553 . 20557) (nil fontified nil 20552 . 20553) (nil fontified nil 20551 . 20552) (nil fontified nil 20548 . 20551) (nil fontified nil 20547 . 20548) (nil fontified nil 20546 . 20547) (nil fontified nil 20545 . 20546) (nil fontified nil 20544 . 20545) (nil fontified nil 20543 . 20544) (nil fontified nil 20542 . 20543) (nil fontified nil 20541 . 20542) (nil fontified nil 20540 . 20541) (nil fontified nil 20539 . 20540) (nil fontified nil 20538 . 20539) (nil fontified nil 20537 . 20538) (nil fontified nil 20536 . 20537) (nil fontified nil 20535 . 20536) (nil fontified nil 20534 . 20535) (nil fontified nil 20533 . 20534) (nil fontified nil 20532 . 20533) (nil fontified nil 20531 . 20532) (nil fontified nil 20530 . 20531) (nil fontified nil 20529 . 20530) (nil fontified nil 20528 . 20529) (nil fontified nil 20527 . 20528) (nil fontified nil 20526 . 20527) (nil fontified nil 20525 . 20526) (nil fontified nil 20524 . 20525) (nil fontified nil 20523 . 20524) (nil fontified nil 20522 . 20523) (nil fontified nil 20521 . 20522) (nil fontified nil 20520 . 20521) (nil fontified nil 20519 . 20520) (nil fontified nil 20513 . 20519) (nil fontified nil 20510 . 20513) (20510 . 20571)) nil (26115 5237 644929 381000) 0 nil])
([nil nil ((#("playable" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t)) . -20534) (undo-tree-id998 . -8) (undo-tree-id999 . -8) 20542) nil (26115 5237 644924 540000) 0 nil])
([nil nil ((#("Not " 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t)) . -20530) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) 20534) nil (26115 5237 644921 988000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -20529) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) 20530) nil (26115 5237 644912 403000) 0 nil])
([nil nil ((#("std::cout << \"Level Not playable: \"<< Map->Name << std::endl;" 0 3 (face font-lock-constant-face fontified t) 3 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 54 (face font-lock-constant-face fontified t) 54 60 (fontified t) 60 61 (fontified t rear-nonsticky t)) . 20667) (undo-tree-id1322 . -17) (undo-tree-id1323 . -61) (t 26115 5237 643670 272000)) nil (26115 5260 306351 713000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 20667) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1)) nil (26115 5260 306349 198000) 0 nil])
([nil nil ((20657 . 20667) (#("                    " 0 10 (fontified t) 10 20 (fontified t)) . -20657) (undo-tree-id1254 . -10) (undo-tree-id1255 . -20) (undo-tree-id1256 . -10) (undo-tree-id1257 . -10) (undo-tree-id1258 . -10) (undo-tree-id1259 . -10) (undo-tree-id1260 . -10) (undo-tree-id1261 . -10) (undo-tree-id1262 . -10) (undo-tree-id1263 . -10) (undo-tree-id1264 . -10) (undo-tree-id1265 . -10) (undo-tree-id1266 . -10) (undo-tree-id1267 . -10) (undo-tree-id1268 . -10) (undo-tree-id1269 . -10) (undo-tree-id1270 . -10) (undo-tree-id1271 . -10) (undo-tree-id1272 . -10) (undo-tree-id1273 . -10) (undo-tree-id1274 . -10) (undo-tree-id1275 . -10) (undo-tree-id1276 . -10) (undo-tree-id1277 . -10) (undo-tree-id1278 . -10) (undo-tree-id1279 . -10) (undo-tree-id1280 . -10) (undo-tree-id1281 . -10) (undo-tree-id1282 . -10) (undo-tree-id1283 . -10) (undo-tree-id1284 . -10) (undo-tree-id1285 . -10) (undo-tree-id1286 . -10) (undo-tree-id1287 . -10) (undo-tree-id1288 . -10) (undo-tree-id1289 . -10) (undo-tree-id1290 . -10) (undo-tree-id1291 . -10) (undo-tree-id1292 . -10) (undo-tree-id1293 . -10) (undo-tree-id1294 . -10) (undo-tree-id1295 . -10) (undo-tree-id1296 . -10) (undo-tree-id1297 . -10) (undo-tree-id1298 . -10) (undo-tree-id1299 . -10) (undo-tree-id1300 . -10) (undo-tree-id1301 . -10) (undo-tree-id1302 . -20) (undo-tree-id1303 . -20) (undo-tree-id1304 . -20) 20677) nil (26115 5260 306338 268000) 0 nil])
([nil nil ((nil fontified nil 20753 . 20754) (nil fontified nil 20752 . 20753) (nil fontified nil 20746 . 20752) (nil fontified nil 20743 . 20746) (nil fontified nil 20742 . 20743) (nil fontified nil 20741 . 20742) (nil fontified nil 20740 . 20741) (nil fontified nil 20739 . 20740) (nil fontified nil 20735 . 20739) (nil fontified nil 20734 . 20735) (nil fontified nil 20733 . 20734) (nil fontified nil 20730 . 20733) (nil fontified nil 20729 . 20730) (nil fontified nil 20728 . 20729) (nil fontified nil 20727 . 20728) (nil fontified nil 20726 . 20727) (nil fontified nil 20725 . 20726) (nil fontified nil 20724 . 20725) (nil fontified nil 20723 . 20724) (nil fontified nil 20722 . 20723) (nil fontified nil 20721 . 20722) (nil fontified nil 20720 . 20721) (nil fontified nil 20719 . 20720) (nil fontified nil 20718 . 20719) (nil fontified nil 20717 . 20718) (nil fontified nil 20716 . 20717) (nil fontified nil 20715 . 20716) (nil fontified nil 20714 . 20715) (nil fontified nil 20713 . 20714) (nil fontified nil 20712 . 20713) (nil fontified nil 20711 . 20712) (nil fontified nil 20710 . 20711) (nil fontified nil 20709 . 20710) (nil fontified nil 20708 . 20709) (nil fontified nil 20707 . 20708) (nil fontified nil 20706 . 20707) (nil fontified nil 20705 . 20706) (nil fontified nil 20704 . 20705) (nil fontified nil 20703 . 20704) (nil fontified nil 20702 . 20703) (nil fontified nil 20701 . 20702) (nil fontified nil 20695 . 20701) (nil fontified nil 20692 . 20695) (20692 . 20754)) nil (26115 5260 306306 879000) 0 nil])
([nil nil ((#("playable" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t)) . -20716) (undo-tree-id1252 . -8) (undo-tree-id1253 . -8) 20724) nil (26115 5260 306301 816000) 0 nil])
([nil nil ((#("Not " 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t)) . -20712) (undo-tree-id1244 . -4) (undo-tree-id1245 . -3) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) 20716) nil (26115 5260 306299 554000) 0 nil])
([nil nil ((#("Level " 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t)) . -20706) (undo-tree-id1226 . -6) (undo-tree-id1227 . -5) (undo-tree-id1228 . -6) (undo-tree-id1229 . -6) (undo-tree-id1230 . -6) (undo-tree-id1231 . -6) (undo-tree-id1232 . -6) (undo-tree-id1233 . -6) (undo-tree-id1234 . -6) (undo-tree-id1235 . -6) (undo-tree-id1236 . -6) (undo-tree-id1237 . -6) (undo-tree-id1238 . -6) (undo-tree-id1239 . -6) (undo-tree-id1240 . -6) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6) (undo-tree-id1243 . -6) 20712) nil (26115 5260 306013 470000) 0 nil])
([nil nil ((20706 . 20712)) nil (26115 5260 306002 732000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-string-face fontified t)) . -20709) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -20710) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -20711) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) 20712) nil (26115 5260 306000 460000) 0 nil])
([nil nil ((#("Pla" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t)) . -20706) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3) (undo-tree-id1125 . -3) (undo-tree-id1126 . -3) (undo-tree-id1127 . -3) (undo-tree-id1128 . -3) (undo-tree-id1129 . -3) (undo-tree-id1130 . -3) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (undo-tree-id1136 . -3) (undo-tree-id1137 . -3) (undo-tree-id1138 . -3) (undo-tree-id1139 . -3) (undo-tree-id1140 . -3) (undo-tree-id1141 . -3) (undo-tree-id1142 . -3) (undo-tree-id1143 . -3) (undo-tree-id1144 . -3) (undo-tree-id1145 . -3) (undo-tree-id1146 . -3) (undo-tree-id1147 . -3) (undo-tree-id1148 . -3) (undo-tree-id1149 . -3) (undo-tree-id1150 . -3) (undo-tree-id1151 . -3) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3) (undo-tree-id1164 . -3) (undo-tree-id1165 . -3) (undo-tree-id1166 . -3) (undo-tree-id1167 . -3) (undo-tree-id1168 . -3) (undo-tree-id1169 . -3) 20709) nil (26115 5260 305966 874000) 0 nil])
([nil nil ((20706 . 20707)) nil (26115 5260 305068 939000) 0 nil])
([nil nil ((#("<" 0 1 (face font-lock-string-face fontified t)) . -20706) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) 20707) nil (26115 5260 305067 740000) 0 nil])
([nil nil ((20706 . 20712)) nil (26115 5260 305057 412000) 0 nil])
([nil nil ((#("Name" 0 4 (fontified t)) . -20723) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) 20727) nil (26115 5260 305056 682000) 0 nil])
([nil nil ((#("Map->" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -20718) (undo-tree-id1066 . -5) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -5) (undo-tree-id1071 . -5) (undo-tree-id1072 . -5) (undo-tree-id1073 . -5) (undo-tree-id1074 . -5) (undo-tree-id1075 . -5) 20723) nil (26115 5260 305054 535000) 0 nil])
([nil nil ((20718 . 20719)) nil (26115 5260 305048 262000) 0 nil])
([nil nil ((20718 . 20724) (#("M" 0 1 (fontified nil)) . 20718) (20718 . 20719) (#("Myself" 0 6 (fontified nil)) . -20718) (20718 . 20724) (#("M" 0 1 (fontified t)) . -20718) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) 20719) nil (26115 5260 305046 651000) 0 nil])
([nil nil ((20724 . 20725)) nil (26115 5260 305032 331000) 0 nil])
([nil nil ((20725 . 20726)) nil (26115 5260 305031 167000) 0 nil])
([nil nil ((apply yas--snippet-revive 20726 20735 #s(yas--snippet nil nil nil 4 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 4 nil nil nil nil)) (20726 . 20735) (#("IsValid()" 0 9 (fontified nil)) . 20726) (20726 . 20735) (#("IsValid()" 0 9 (fontified nil)) . -20726) (20726 . 20735)) nil (26115 5260 305026 262000) 0 nil])
([nil nil ((20750 . 20759) (t 26115 5260 307004 997000)) nil (26115 5284 356804 722000) 0 nil])
([nil nil ((20759 . 20765)) nil (26115 5284 356803 986000) 0 nil])
([nil nil ((20762 . 20763)) nil (26115 5284 356803 69000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -20761) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) 20762) nil (26115 5284 356801 734000) 0 nil])
([nil nil ((20761 . 20762)) nil (26115 5284 356790 645000) 0 nil])
([nil nil ((20766 . 20767)) nil (26115 5284 356790 37000) 0 nil])
([nil nil ((20767 . 20768)) nil (26115 5284 356789 284000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -20767) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) 20768) nil (26115 5284 356788 94000) 0 nil])
([nil nil ((20767 . 20769)) nil (26115 5284 356782 176000) 0 nil])
([nil nil ((apply yas--snippet-revive 20767 20779 #s(yas--snippet nil nil nil 5 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 5 nil nil nil nil)) (20767 . 20779) (#("return true;" 0 12 (fontified nil)) . 20767) (20767 . 20779) (#("re" 0 2 (fontified nil)) . 20767) (20767 . 20769) (#("return true;" 0 12 (fontified nil)) . -20767) (20767 . 20779) (#("re" 0 1 (fontified t) 1 2 (fontified t)) . -20767) (undo-tree-id1324 . -2) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -2) (undo-tree-id1331 . -2) (undo-tree-id1332 . -2) (undo-tree-id1333 . -2) (undo-tree-id1334 . -2) (undo-tree-id1335 . -2) (undo-tree-id1336 . -2) (undo-tree-id1337 . -2) (undo-tree-id1338 . -2) (undo-tree-id1339 . -2) (undo-tree-id1340 . -2) (undo-tree-id1341 . -2) (undo-tree-id1342 . -2) (undo-tree-id1343 . -2) 20769) nil (26115 5284 356778 48000) 0 nil])
([nil nil ((20779 . 20788) (t 26115 5284 357006 473000)) nil (26115 5285 224516 692000) 0 nil])
([nil nil ((21485 . 21493) (t 26115 5285 223673 193000)) nil (26115 5373 785205 698000) 0 nil])
([nil nil ((20510 . 20512)) nil (26115 5373 785204 955000) 0 nil])
([nil nil ((20563 . 20571) (#("        " 0 8 (c-is-sws t c-in-sws t fontified nil)) . 20562) (undo-tree-id1382 . -8) (undo-tree-id1383 . -8) (undo-tree-id1384 . -8) (undo-tree-id1385 . -8) (undo-tree-id1386 . -8) (undo-tree-id1387 . -8) (undo-tree-id1388 . -8) (20562 . 20571) (#("        " 0 1 (c-is-sws t fontified nil) 1 8 (c-is-sws t fontified nil c-in-sws t)) . 20561) (undo-tree-id1389 . -8) (undo-tree-id1390 . -8) (20569 . 20570)) nil (26115 5373 785203 608000) 0 nil])
([nil nil ((20503 . 20511) (#("        " 0 6 (c-is-sws t c-in-sws t fontified nil) 6 7 (c-is-sws t c-in-sws t fontified nil) 7 8 (c-is-sws t c-in-sws t fontified nil)) . 20502) (undo-tree-id1370 . -8) (undo-tree-id1371 . -8) (undo-tree-id1372 . -8) (undo-tree-id1373 . -8) (undo-tree-id1374 . -8) (undo-tree-id1375 . -8) (undo-tree-id1376 . -8) (undo-tree-id1377 . -8) (undo-tree-id1378 . -8) (undo-tree-id1379 . -8) (undo-tree-id1380 . -8) (undo-tree-id1381 . -8) (20510 . 20511)) nil (26115 5373 785195 840000) 0 nil])
([nil nil ((20697 . 20699)) nil (26115 5373 785182 405000) 0 nil])
([nil nil ((20688 . 20697)) nil (26115 5373 785178 276000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-is-sws t)) . -20706) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -20707) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) 20708 (t 26115 5373 800345 297000)) nil (26115 5412 416619 498000) 0 nil])
([nil nil ((20726 . 20731)) nil (26115 5412 416180 756000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -20730) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) 20731) nil (26115 5412 416179 409000) 0 nil])
([nil nil ((20730 . 20731)) nil (26115 5412 416166 559000) 0 nil])
([nil nil ((#("IsValid()" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t)) . -20745) (undo-tree-id1543 . -9) (undo-tree-id1544 . -9) (undo-tree-id1545 . -7) (undo-tree-id1546 . -7) (undo-tree-id1547 . -7) (undo-tree-id1548 . -7) (undo-tree-id1549 . -7) (undo-tree-id1550 . -7) (undo-tree-id1551 . -7) (undo-tree-id1552 . -7) (undo-tree-id1553 . -8) (undo-tree-id1554 . -8) (undo-tree-id1555 . -8) (undo-tree-id1556 . -8) (undo-tree-id1557 . -8) (undo-tree-id1558 . -9) 20754) nil (26115 5412 416165 434000) 0 nil])
([nil nil ((20745 . 20747)) nil (26115 5412 416155 827000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -20745) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("I" 0 1 (fontified t)) . -20746) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) 20747) nil (26115 5412 416154 67000) 0 nil])
([nil nil ((20745 . 20747)) nil (26115 5412 416133 716000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -20746) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) 20747) nil (26115 5412 416132 590000) 0 nil])
([nil nil ((20746 . 20747)) nil (26115 5412 416123 813000) 0 nil])
([nil nil ((20747 . 20748)) nil (26115 5412 416123 238000) 0 nil])
([nil nil ((#("J" 0 1 (fontified t)) . -20747) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) 20748) nil (26115 5412 416121 608000) 0 nil])
([nil nil ((#("Is" 0 1 (fontified t) 1 2 (fontified t)) . -20745) (undo-tree-id1407 . -2) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (undo-tree-id1440 . -2) (undo-tree-id1441 . -2) (undo-tree-id1442 . -2) (undo-tree-id1443 . -2) (undo-tree-id1444 . -2) (undo-tree-id1445 . -2) (undo-tree-id1446 . -2) (undo-tree-id1447 . -2) (undo-tree-id1448 . -2) (undo-tree-id1449 . -2) (undo-tree-id1450 . -2) (undo-tree-id1451 . -2) (undo-tree-id1452 . -2) (undo-tree-id1453 . -2) (undo-tree-id1454 . -2) (undo-tree-id1455 . -2) (undo-tree-id1456 . -2) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) (undo-tree-id1461 . -2) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) 20747) nil (26115 5412 416109 453000) 0 nil])
([nil nil ((20745 . 20746)) nil (26115 5412 416064 171000) 0 nil])
([nil nil ((20745 . 20751) (#("I" 0 1 (fontified nil)) . 20745) (20745 . 20746) (#("InJump" 0 6 (fontified nil)) . -20745) (20745 . 20751) (#("I" 0 1 (fontified t)) . -20745) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) 20746) nil (26115 5412 416059 376000) 0 nil])
([nil current ((20706 . 20708) (t 26115 5412 417014 334000)) nil (26115 5573 398033 276000) 0 nil])
nil
