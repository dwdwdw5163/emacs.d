(undo-tree-save-format-version . 1)
"cdef2707a9546938b69a602011585f591993a7b5"
[nil nil nil nil (26049 54188 825411 246000) 0 nil]
([nil nil ((nil rear-nonsticky nil 25 . 26) (nil fontified nil 1 . 26) (1 . 26) (t 26049 54016 435776 727000)) nil (26049 54188 825407 90000) 0 nil])
([nil nil ((26 . 33) (t 26049 54188 835787 304000)) nil (26049 54238 547547 892000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -32) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 33) nil (26049 54238 547546 510000) 0 nil])
([nil nil ((32 . 34)) nil (26049 54238 547536 731000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -32) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("a" 0 1 (fontified t)) . -33) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 34) nil (26049 54238 547534 641000) 0 nil])
([nil nil ((32 . 38)) nil (26049 54238 547510 719000) 0 nil])
([nil nil ((#("enable" 0 6 (fontified t)) . -32) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -1) (undo-tree-id14 . -2) (undo-tree-id15 . -3) (undo-tree-id16 . -4) (undo-tree-id17 . -5) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) 38) nil (26049 54238 547509 521000) 0 nil])
([nil nil ((32 . 34)) nil (26049 54238 547499 406000) 0 nil])
([nil nil ((34 . 38)) nil (26049 54238 547498 823000) 0 nil])
([nil nil ((38 . 55)) nil (26049 54238 547498 219000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -54) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 55) nil (26049 54238 547497 257000) 0 nil])
([nil nil ((54 . 57)) nil (26049 54238 547495 127000) 0 nil])
([nil nil ((56 . 60) (#("b" 0 1 (fontified nil)) . 56) (56 . 57) (#("bool" 0 4 (fontified nil)) . -56) (56 . 60) (#("b" 0 1 (fontified t)) . -56) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 57) nil (26049 54238 547493 863000) 0 nil])
([nil nil ((60 . 65)) nil (26049 54238 547488 729000) 0 nil])
([nil nil ((apply yas--snippet-revive 63 67 #s(yas--snippet nil nil nil 5 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 5 nil nil nil nil)) (63 . 67) (#("true" 0 4 (fontified nil)) . 63) (63 . 67) (#("tr" 0 2 (fontified nil)) . 63) (63 . 65) (#("true" 0 4 (fontified nil)) . -63) (63 . 67) (#("tr" 0 2 (fontified t)) . -63) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) 65) nil (26049 54238 547486 552000) 0 nil])
([nil nil ((67 . 68)) nil (26049 54238 547464 350000) 0 nil])
([nil nil ((68 . 69)) nil (26049 54238 547460 78000) 0 nil])
([nil nil ((25 . 26) (t 26049 54238 559123 690000)) nil (26049 54260 485468 388000) 0 nil])
([nil nil ((26 . 29)) nil (26049 54260 485467 593000) 0 nil])
([nil nil ((28 . 29)) nil (26049 54260 485466 907000) 0 nil])
([nil nil ((28 . 33) (#("a" 0 1 (fontified nil)) . 28) (28 . 29) (#("alloc" 0 5 (fontified nil)) . -28) (28 . 33) (#("a" 0 1 (face font-lock-preprocessor-face fontified t)) . -28) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 29) nil (26049 54260 485465 392000) 0 nil])
([nil nil ((#("alloc" 0 5 (face font-lock-preprocessor-face fontified t)) . -28) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) 33) nil (26049 54260 485460 438000) 0 nil])
([nil nil ((28 . 29)) nil (26049 54260 485456 645000) 0 nil])
([nil nil ((#("lint" 0 4 (face font-lock-preprocessor-face fontified t)) . 34) (undo-tree-id94 . -4) (apply yas--snippet-revive 28 39 #s(yas--snippet nil (#s(yas--field 0 34 38 nil nil nil nil nil)) nil 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 0 34 38 nil nil nil nil nil)) nil 6 nil nil nil nil)) (28 . 39) (#("allow(${0:lint})" 0 16 (fontified nil)) . 28) (28 . 44) (#("a" 0 1 (fontified nil)) . 28) (28 . 29) (#("allow(…)" 0 8 (fontified nil)) . -28) (28 . 36) (#("a" 0 1 (face font-lock-preprocessor-face fontified t)) . -28) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 29) nil (26049 54260 485455 176000) 0 nil])
([nil nil ((34 . 38)) nil (26049 54260 485448 81000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-preprocessor-face fontified t)) . -37) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 38) nil (26049 54260 485446 438000) 0 nil])
([nil nil ((34 . 56) (#("non" 0 3 (fontified nil)) . 34) (34 . 37) (#("non_upper_case_globals" 0 22 (fontified nil)) . -34) (34 . 56) (#("non" 0 3 (face font-lock-preprocessor-face fontified t)) . -34) (undo-tree-id72 . -3) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) 37) nil (26049 54260 485438 403000) 0 nil])
([nil nil ((nil rear-nonsticky nil 133 . 134) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (nil fontified nil 110 . 132) (nil fontified nil 109 . 110) (nil fontified nil 104 . 109) (nil fontified nil 103 . 104) (nil fontified nil 102 . 103) (102 . 134) (t 26049 54260 495791 703000)) nil (26049 54295 653493 872000) 0 nil])
([nil nil ((#("#[allow(non_upper_case_globals)]" 0 1 (face font-lock-preprocessor-face fontified t) 1 2 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 2 7 (face font-lock-preprocessor-face fontified t) 7 8 (face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face) fontified t) 8 30 (face font-lock-preprocessor-face fontified t) 30 31 (face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) rear-nonsticky t fontified t)) . 102) (undo-tree-id152 . -32) (undo-tree-id153 . -32) (undo-tree-id154 . -32) (undo-tree-id155 . -32) (undo-tree-id156 . -32) (undo-tree-id157 . -32) (undo-tree-id158 . -32) (undo-tree-id159 . -32) (undo-tree-id160 . -32) (undo-tree-id161 . -32) (undo-tree-id162 . -32) (undo-tree-id163 . -32) (undo-tree-id164 . -32) (undo-tree-id165 . -32) (undo-tree-id166 . -32) (undo-tree-id167 . -32) (undo-tree-id168 . -32) (undo-tree-id169 . -32) (undo-tree-id170 . -31) (undo-tree-id171 . -31) (undo-tree-id172 . -31) (undo-tree-id173 . -31) (undo-tree-id174 . -31) (undo-tree-id175 . -32)) nil (26049 54295 653491 301000) 0 nil])
([nil nil ((102 . 104)) nil (26049 54295 653475 952000) 0 nil])
([nil nil ((apply yas--snippet-revive 103 109 #s(yas--snippet nil nil #s(yas--exit 108 nil) 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 108 nil) 7 nil nil nil nil)) (103 . 109) (#("cfg!($0)" 0 8 (fontified nil)) . 103) (103 . 111) (#("c" 0 1 (fontified nil)) . 103) (103 . 104) (#("cfg!(…)" 0 7 (fontified nil)) . -103) (103 . 110) (#("c" 0 1 (fontified t)) . -103) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 104) nil (26049 54295 653474 642000) 0 nil])
([nil nil ((#("#cfg!()" 0 1 (fontified t) 1 5 (face font-lock-preprocessor-face fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t)) . 102) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -7)) nil (26049 54295 653468 667000) 0 nil])
([nil nil ((102 . 105)) nil (26049 54295 653453 728000) 0 nil])
([nil nil ((104 . 105)) nil (26049 54295 653453 17000) 0 nil])
([nil nil ((#("predicate" 0 9 (face font-lock-preprocessor-face fontified t)) . 108) (undo-tree-id120 . -9) (apply yas--snippet-revive 104 118 #s(yas--snippet nil (#s(yas--field 0 108 117 nil nil nil nil nil)) nil 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 0 108 117 nil nil nil nil nil)) nil 8 nil nil nil nil)) (104 . 118) (#("cfg(${0:predicate})" 0 19 (fontified nil)) . 104) (104 . 123) (#("c" 0 1 (fontified nil)) . 104) (104 . 105) (#("cfg(…)" 0 6 (fontified nil)) . -104) (104 . 110) (#("c" 0 1 (face font-lock-preprocessor-face fontified t)) . -104) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 105) nil (26049 54295 653451 542000) 0 nil])
([nil nil ((108 . 111)) nil (26049 54295 653445 977000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-preprocessor-face fontified t)) . -110) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 111) nil (26049 54295 653445 119000) 0 nil])
([nil nil ((110 . 113)) nil (26049 54295 653442 990000) 0 nil])
([nil nil ((112 . 114)) nil (26049 54295 653442 258000) 0 nil])
([nil nil ((112 . 128) (#("de" 0 2 (fontified nil)) . 112) (112 . 114) (#("debug_assertions" 0 16 (fontified nil)) . -112) (112 . 128) (#("de" 0 2 (face font-lock-preprocessor-face fontified t)) . -112) (undo-tree-id111 . -2) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) 114) nil (26049 54295 653439 743000) 0 nil])
([nil nil ((131 . 132) 128) nil (26049 54295 653423 321000) 0 nil])
([nil nil ((131 . 132) (t 26049 54295 699127 198000)) nil (26049 54307 217533 888000) 0 nil])
([nil nil ((132 . 133)) nil (26049 54307 217532 990000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -132) (undo-tree-id189 . -1) (undo-tree-id190 . 1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) 133) nil (26049 54307 217532 77000) 0 nil])
([nil nil ((nil rear-nonsticky nil 206 . 207) (nil fontified nil 206 . 207) (nil fontified nil 202 . 206) (nil fontified nil 199 . 202) (nil fontified nil 195 . 199) (nil fontified nil 193 . 195) (nil fontified nil 171 . 193) (nil fontified nil 170 . 171) (nil fontified nil 165 . 170) (nil fontified nil 164 . 165) (nil fontified nil 163 . 164) (nil fontified nil 162 . 163) (nil fontified nil 140 . 162) (nil fontified nil 139 . 140) (nil fontified nil 134 . 139) (nil fontified nil 133 . 134) (nil fontified nil 132 . 133) (132 . 207)) nil (26049 54307 217527 319000) 0 nil])
([nil nil ((#("true;" 0 4 (face font-lock-keyword-face fontified t) 4 5 (rear-nonsticky t fontified t)) . -202) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) 207) nil (26049 54307 217523 754000) 0 nil])
([nil nil ((202 . 203)) nil (26049 54307 217518 97000) 0 nil])
([nil nil ((apply yas--snippet-revive 202 207 #s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 9 nil nil nil nil)) (202 . 207) (#("false" 0 5 (fontified nil)) . 202) (202 . 207) (#("f" 0 1 (fontified nil)) . 202) (202 . 203) (#("false" 0 5 (fontified nil)) . -202) (202 . 207) (#("f" 0 1 (fontified t)) . -202) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 203) nil (26049 54307 217515 260000) 0 nil])
([nil nil ((207 . 208)) nil (26049 54307 217501 142000) 0 nil])
([nil nil ((101 . 102) (t 26049 54307 229127 906000)) nil (26049 54314 224885 362000) 0 nil])
([nil nil ((210 . 211) (t 26049 54314 269128 337000)) nil (26049 54322 734717 209000) 0 nil])
([nil nil ((211 . 215) (t 26049 54322 745795 524000)) nil (26049 54364 709102 712000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -212) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (#("b" 0 1 (fontified t)) . -213) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("s" 0 1 (fontified t)) . -214) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 215) nil (26049 54364 709100 843000) 0 nil])
([nil nil ((212 . 233)) nil (26049 54364 709091 510000) 0 nil])
([nil nil ((233 . 235)) nil (26049 54364 709090 751000) 0 nil])
([nil nil ((235 . 236)) nil (26049 54364 709090 104000) 0 nil])
([nil nil ((apply yas--snippet-revive 235 240 #s(yas--snippet nil nil #s(yas--exit 239 nil) 10 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 239 nil) 10 nil nil nil nil)) (235 . 240) (#("Vec<$0>" 0 7 (fontified nil)) . 235) (235 . 242) (#("V" 0 1 (fontified nil)) . 235) (235 . 236) (#("Vec<…>" 0 6 (fontified nil)) . -235) (235 . 241) (#("V" 0 1 (face font-lock-type-face fontified t)) . -235) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 236) nil (26049 54364 709088 657000) 0 nil])
([nil nil ((239 . 242)) nil (26049 54364 709082 938000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -241) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 242) nil (26049 54364 709081 823000) 0 nil])
([nil nil ((239 . 246) (#("'s" 0 1 (fontified nil) 1 2 (fontified nil)) . 239) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (240 . 241) (#("'static" 0 7 (fontified nil)) . -240) (240 . 247) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -240) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 241) nil (26049 54364 709074 443000) 0 nil])
([nil nil ((246 . 250)) nil (26049 54364 708857 814000) 0 nil])
([nil nil ((239 . 240)) nil (26049 54364 708856 383000) 0 nil])
([nil nil ((252 . 253) 240) nil (26049 54364 708851 134000) 0 nil])
([nil nil ((252 . 256) (t 26049 54364 722464 768000)) nil (26049 54369 886156 586000) 0 nil])
([nil nil ((apply yas--snippet-revive 255 261 #s(yas--snippet nil nil #s(yas--exit 260 nil) 11 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 260 nil) 11 nil nil nil nil)) (255 . 261) (#("vec![$0]" 0 8 (fontified nil)) . 255) (255 . 263) (#("v" 0 1 (fontified nil)) . 255) (255 . 256) (#("vec![…]" 0 7 (fontified nil)) . -255) (255 . 262) (#("v" 0 1 (fontified t)) . -255) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 256) nil (26049 54369 886151 950000) 0 nil])
([nil nil ((261 . 262) (t 26049 54369 899131 752000)) nil (26049 54371 19565 570000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 261) (261 . 265) (260 . 262) (t 26049 54371 29131 821000)) nil (26049 54395 823700 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 289 . 290) (nil fontified nil 261 . 290) (261 . 290)) nil (26049 54395 823697 782000) 0 nil])
([nil nil ((261 . 265) 290) nil (26049 54395 823693 456000) 0 nil])
([nil nil ((294 . 295) (t 26049 54395 869133 345000)) nil (26049 54438 853649 370000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -294) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) 295) nil (26049 54438 853648 327000) 0 nil])
([nil nil ((#("str>" 0 3 (face font-lock-type-face fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t)) . -248) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -1) (undo-tree-id407 . -2) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) 252) nil (26049 54438 853643 595000) 0 nil])
([nil nil ((#("static " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -241) (undo-tree-id339 . -7) (undo-tree-id340 . -7) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -6) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (undo-tree-id391 . -7) (undo-tree-id392 . -7) (undo-tree-id393 . -7) (undo-tree-id394 . -7) (undo-tree-id395 . -7) (undo-tree-id396 . -7) (undo-tree-id397 . -7) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -7) (undo-tree-id401 . -7) (undo-tree-id402 . -7) (undo-tree-id403 . -7) 248) nil (26049 54438 853607 990000) 0 nil])
([nil nil ((#("Vec<&'" 0 3 (face font-lock-type-face fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -235) (undo-tree-id272 . -6) (undo-tree-id273 . -6) (undo-tree-id274 . -4) (undo-tree-id275 . -6) (undo-tree-id276 . -6) (undo-tree-id277 . -6) (undo-tree-id278 . -6) (undo-tree-id279 . -6) (undo-tree-id280 . -6) (undo-tree-id281 . -6) (undo-tree-id282 . -6) (undo-tree-id283 . -6) (undo-tree-id284 . -6) (undo-tree-id285 . -6) (undo-tree-id286 . -6) (undo-tree-id287 . -6) (undo-tree-id288 . -6) (undo-tree-id289 . -6) (undo-tree-id290 . -6) (undo-tree-id291 . -6) (undo-tree-id292 . -6) (undo-tree-id293 . -6) (undo-tree-id294 . -6) (undo-tree-id295 . -6) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id299 . -6) (undo-tree-id300 . -6) (undo-tree-id301 . -6) (undo-tree-id302 . -6) (undo-tree-id303 . -6) (undo-tree-id304 . -6) (undo-tree-id305 . -6) (undo-tree-id306 . -6) (undo-tree-id307 . -6) (undo-tree-id308 . -6) (undo-tree-id309 . -6) (undo-tree-id310 . -6) (undo-tree-id311 . -6) (undo-tree-id312 . -6) (undo-tree-id313 . -6) (undo-tree-id314 . -6) (undo-tree-id315 . -6) (undo-tree-id316 . -6) (undo-tree-id317 . -6) (undo-tree-id318 . -6) (undo-tree-id319 . -6) (undo-tree-id320 . -6) (undo-tree-id321 . -6) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -6) (undo-tree-id325 . -6) (undo-tree-id326 . -6) (undo-tree-id327 . -6) (undo-tree-id328 . -6) (undo-tree-id329 . -6) (undo-tree-id330 . -6) (undo-tree-id331 . -6) (undo-tree-id332 . -6) (undo-tree-id333 . -6) (undo-tree-id334 . -6) (undo-tree-id335 . -6) (undo-tree-id336 . -6) (undo-tree-id337 . -6) (undo-tree-id338 . -6) 241) nil (26049 54438 853562 107000) 0 nil])
([nil nil ((235 . 237)) nil (26049 54438 853163 985000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -240) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t)) . -241) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("c" 0 1 (fontified t)) . -242) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . -243) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 244) nil (26049 54438 853159 497000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -233) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#(" " 0 1 (fontified t)) . -234) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -235) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -236) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) 237 (t 26049 54438 895802 654000)) nil (26049 54442 313912 45000) 0 nil])
([nil nil ((233 . 237) (t 26049 54442 325802 863000)) nil (26049 54475 428895 577000) 0 nil])
([nil nil ((236 . 241)) nil (26049 54475 428894 590000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -240) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) 241) nil (26049 54475 428892 510000) 0 nil])
([nil nil ((240 . 243)) nil (26049 54475 428882 171000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -242) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) 243 (t 26049 54475 429138 224000)) nil (26049 54483 478660 511000) 0 nil])
([nil nil ((242 . 243)) nil (26049 54483 478639 220000) 0 nil])
([nil nil ((59 . 63) (t 26049 54483 522472 54000)) nil (26049 54558 929116 784000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -60) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#("b" 0 1 (fontified t)) . -61) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#(" " 0 1 (fontified t)) . -62) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) 63) nil (26049 54558 929114 348000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -59) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) 60) nil (26049 54558 929086 508000) 0 nil])
([nil nil ((59 . 63)) nil (26049 54558 929069 934000) 0 nil])
([nil nil ((170 . 172)) nil (26049 54558 929069 62000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -170) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#("p" 0 1 (fontified t)) . -171) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) 172) nil (26049 54558 929066 949000) 0 nil])
([nil nil ((170 . 173)) nil (26049 54558 929051 760000) 0 nil])
([nil nil ((173 . 174)) nil (26049 54558 929047 730000) 0 nil])
([nil nil ((219 . 223) (t 26049 54558 942476 686000)) nil (26049 54573 194201 499000) 0 nil])
([nil nil ((#("pub const VALIDATIONLAYERS: [&str; 1] = [" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 26 (face font-lock-variable-name-face fontified t) 26 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (face rust-ampersand-face fontified t) 30 33 (face font-lock-type-face fontified t) 33 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t)) . 219) (undo-tree-id721 . -26) (undo-tree-id722 . -36) (undo-tree-id723 . -8) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . 37) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -41)) nil (26049 54573 194198 901000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 219) (undo-tree-id718 . -1) (undo-tree-id719 . 1) (undo-tree-id720 . -1)) nil (26049 54573 194175 85000) 0 nil])
([nil nil ((#("    \"VK_LAYER_KHRONOS_validation\"" 0 4 (fontified t) 4 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t rear-nonsticky t)) . 219) (undo-tree-id716 . 33) (undo-tree-id717 . -33)) nil (26049 54573 194172 205000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 219) (undo-tree-id714 . 1) (undo-tree-id715 . -1)) nil (26049 54573 194170 62000) 0 nil])
([nil nil ((#("];" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t) 1 2 (fontified t)) . 219) (undo-tree-id712 . 2) (undo-tree-id713 . -2)) nil (26049 54573 194167 880000) 0 nil])
([nil nil ((219 . 220)) nil (26049 54573 194165 560000) 0 nil])
([nil nil ((219 . 230) (#("l" 0 1 (fontified nil)) . 219) (219 . 220) (#("lazy_static" 0 11 (fontified nil)) . -219) (219 . 230) (#("l" 0 1 (fontified t)) . -219) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) 220) nil (26049 54573 194164 226000) 0 nil])
([nil nil ((230 . 234)) nil (26049 54573 194158 585000) 0 nil])
([nil nil ((233 . 234)) nil (26049 54573 194157 828000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 234) (234 . 238) (234 . 235)) nil (26049 54573 194156 854000) 0 nil])
([nil nil ((234 . 237)) nil (26049 54573 194155 602000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -234) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#("a" 0 1 (fontified t)) . -235) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (#("t" 0 1 (fontified t)) . -236) (undo-tree-id705 . -1) (undo-tree-id706 . -1) 237) nil (26049 54573 194152 813000) 0 nil])
([nil nil ((234 . 240)) nil (26049 54573 194134 740000) 0 nil])
([nil nil ((240 . 245) (t 26049 54573 205810 894000)) nil (26049 54629 334329 797000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -244) (undo-tree-id846 . -1) (undo-tree-id847 . -1) 245) nil (26049 54629 334328 767000) 0 nil])
([nil nil ((244 . 245)) nil (26049 54629 334326 625000) 0 nil])
([nil nil ((234 . 238)) nil (26049 54629 334326 47000) 0 nil])
([nil nil ((248 . 249)) nil (26049 54629 334325 493000) 0 nil])
([nil nil ((249 . 269)) nil (26049 54629 334324 964000) 0 nil])
([nil nil ((#("<" 0 1 (syntax-table (1) fontified t)) . -267) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) 268) nil (26049 54629 334323 954000) 0 nil])
([nil nil ((#(">" 0 1 (syntax-table (1) fontified t)) . -267) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) 268) nil (26049 54629 334314 724000) 0 nil])
([nil nil ((267 . 272)) nil (26049 54629 334310 605000) 0 nil])
([nil nil ((271 . 273)) nil (26049 54629 334309 990000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -272) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) 273) nil (26049 54629 334309 166000) 0 nil])
([nil nil ((272 . 273)) nil (26049 54629 334305 712000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -271) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -272) (undo-tree-id823 . -1) (undo-tree-id824 . -1) 273) nil (26049 54629 334304 532000) 0 nil])
([nil nil ((271 . 275)) nil (26049 54629 334292 830000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -272) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -273) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -274) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 275) nil (26049 54629 334291 430000) 0 nil])
([nil nil ((272 . 275)) nil (26049 54629 334277 945000) 0 nil])
([nil nil ((276 . 277)) nil (26049 54629 334277 332000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -276) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) 277) nil (26049 54629 334276 448000) 0 nil])
([nil nil ((276 . 279)) nil (26049 54629 334273 99000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -277) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#("=" 0 1 (fontified t)) . -278) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) 279) nil (26049 54629 334271 904000) 0 nil])
([nil nil ((277 . 280)) nil (26049 54629 334264 437000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -279) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) 280) nil (26049 54629 334263 391000) 0 nil])
([nil nil ((279 . 282)) nil (26049 54629 334256 981000) 0 nil])
([nil nil ((282 . 285)) nil (26049 54629 334256 314000) 0 nil])
([nil nil ((285 . 286)) nil (26049 54629 334255 536000) 0 nil])
([nil nil ((234 . 238) 284) nil (26049 54629 334254 766000) 0 nil])
([nil nil ((290 . 294) (#("        " 0 8 (fontified nil)) . 289) (289 . 297) (#("    " 0 4 (fontified nil)) . 289) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (288 . 294)) nil (26049 54629 334253 533000) 0 nil])
([nil nil ((289 . 297)) nil (26049 54629 334250 303000) 0 nil])
([nil nil ((297 . 299)) nil (26049 54629 334249 555000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -297) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -298) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 299) nil (26049 54629 334247 146000) 0 nil])
([nil nil ((nil rear-nonsticky nil 325 . 326) (nil fontified nil 297 . 326) (297 . 326)) nil (26049 54629 334228 924000) 0 nil])
([nil nil ((326 . 327)) nil (26049 54629 334227 686000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -326) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) 327) nil (26049 54629 334225 591000) 0 nil])
([nil nil ((326 . 327)) nil (26049 54629 334210 742000) 0 nil])
([nil nil ((1 . 3) (t 26049 54629 379147 675000)) nil (26049 54651 984895 101000) 0 nil])
([nil nil ((1 . 7)) nil (26049 54651 984894 306000) 0 nil])
([nil nil ((5 . 16) (#("la" 0 2 (fontified nil)) . 5) (5 . 7) (#("lazy_static" 0 11 (fontified nil)) . -5) (5 . 16) (#("la" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id854 . -2) (undo-tree-id855 . -1) (undo-tree-id856 . -2) (undo-tree-id857 . -2) 7) nil (26049 54651 984893 282000) 0 nil])
([nil nil ((16 . 19)) nil (26049 54651 984889 328000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -18) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) 19) nil (26049 54651 984887 887000) 0 nil])
([nil nil ((18 . 29) (#("lazy_static" 0 11 (fontified nil)) . -18) (18 . 29)) nil (26049 54651 984875 426000) 0 nil])
([nil nil ((29 . 30)) nil (26049 54651 984870 851000) 0 nil])
([nil nil ((307 . 310) (t 26049 54651 995815 731000)) nil (26049 54661 236965 740000) 0 nil])
([nil nil ((309 . 315)) nil (26049 54661 236964 353000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -313) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -314) (undo-tree-id863 . -1) (undo-tree-id864 . -1) 315) nil (26049 54661 236962 147000) 0 nil])
([nil nil ((313 . 314)) nil (26049 54661 236947 505000) 0 nil])
([nil nil ((376 . 378) (t 26049 54661 239149 631000)) nil (26049 54938 166573 861000) 0 nil])
([nil nil ((378 . 390)) nil (26049 54938 166573 27000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -385) (undo-tree-id971 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -386) (undo-tree-id972 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -387) (undo-tree-id973 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -388) (undo-tree-id974 . -1) (#("k" 0 1 (face font-lock-function-name-face fontified t)) . -389) (undo-tree-id975 . -1) 390) nil (26049 54938 166571 672000) 0 nil])
([nil nil ((nil rear-nonsticky nil 411 . 412) (nil fontified nil 385 . 412) (385 . 412)) nil (26049 54938 166566 803000) 0 nil])
([nil nil ((412 . 417)) nil (26049 54938 166565 784000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 417) (417 . 421) (416 . 418)) nil (26049 54938 166564 987000) 0 nil])
([nil nil ((415 . 418)) nil (26049 54938 166564 105000) 0 nil])
([nil nil ((417 . 421)) nil (26049 54938 166563 500000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -420) (undo-tree-id970 . -1) 421) nil (26049 54938 166562 540000) 0 nil])
([nil nil ((418 . 421) (#("as" 0 2 (fontified nil)) . 418) (418 . 420) (#("ash" 0 3 (fontified nil)) . -418) (418 . 421) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -418) (undo-tree-id969 . -2) 420) nil (26049 54938 166560 712000) 0 nil])
([nil nil ((421 . 425)) nil (26049 54938 166558 532000) 0 nil])
([nil nil ((425 . 430)) nil (26049 54938 166557 830000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -427) (undo-tree-id966 . -1) (#("o" 0 1 (fontified t)) . -428) (undo-tree-id967 . -1) (#("o" 0 1 (fontified t)) . -429) (undo-tree-id968 . -1) 430) nil (26049 54938 166556 756000) 0 nil])
([nil nil ((427 . 431)) nil (26049 54938 166553 912000) 0 nil])
([nil nil ((#("bool" 0 4 (face font-lock-type-face fontified t)) . -427) (undo-tree-id953 . -4) (undo-tree-id954 . -3) (undo-tree-id955 . -3) (undo-tree-id956 . -3) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) 431) nil (26049 54938 166552 709000) 0 nil])
([nil nil ((#("vk::" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t)) . -423) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) 427) nil (26049 54938 166543 381000) 0 nil])
([nil nil ((#("ash::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -418) (undo-tree-id921 . -5) (undo-tree-id922 . -5) (undo-tree-id923 . -5) (undo-tree-id924 . -5) (undo-tree-id925 . -5) (undo-tree-id926 . -5) (undo-tree-id927 . -5) (undo-tree-id928 . -5) (undo-tree-id929 . -5) (undo-tree-id930 . -5) (undo-tree-id931 . -5) (undo-tree-id932 . -5) (undo-tree-id933 . -5) (undo-tree-id934 . -5) (undo-tree-id935 . -5) (undo-tree-id936 . -5) (undo-tree-id937 . -5) 423) nil (26049 54938 166532 171000) 0 nil])
([nil nil ((418 . 419)) nil (26049 54938 166519 980000) 0 nil])
([nil nil ((418 . 422) (#("b" 0 1 (fontified nil)) . 418) (418 . 419) (#("bool" 0 4 (fontified nil)) . -418) (418 . 422) (#("b" 0 1 (fontified t)) . -418) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) 419) nil (26049 54938 166518 261000) 0 nil])
([nil nil ((#("pub fn checkValidationLayerSupport() -> bool {

}
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 33 (face font-lock-function-name-face fontified t) 33 34 (face font-lock-function-name-face rear-nonsticky t fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 38 (fontified t) 38 39 (syntax-table (1) fontified t) 39 40 (fontified t) 40 44 (face font-lock-type-face fontified t) 44 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 50 (fontified t)) . 378) (undo-tree-id865 . -50) (undo-tree-id866 . -7) (undo-tree-id867 . -40) (undo-tree-id868 . -40) (undo-tree-id869 . -40) (undo-tree-id870 . -40) (undo-tree-id871 . -40) (undo-tree-id872 . -40) (undo-tree-id873 . -40) (undo-tree-id874 . -40) (undo-tree-id875 . -40) (undo-tree-id876 . -40) (undo-tree-id877 . -40) (undo-tree-id878 . -40) (undo-tree-id879 . -40) (undo-tree-id880 . -40) (undo-tree-id881 . -40) (undo-tree-id882 . -40) (undo-tree-id883 . -40) (undo-tree-id884 . -40) (undo-tree-id885 . -40) (undo-tree-id886 . -40) (undo-tree-id887 . -40) (undo-tree-id888 . -44) (undo-tree-id889 . -44) (undo-tree-id890 . -47) (undo-tree-id891 . -47) (undo-tree-id892 . -47) (undo-tree-id893 . -47) (undo-tree-id894 . -47) (undo-tree-id895 . -47) (undo-tree-id896 . -47) (undo-tree-id897 . -47) (undo-tree-id898 . -47) (undo-tree-id899 . -47) (undo-tree-id900 . -47) (undo-tree-id901 . -47) (undo-tree-id902 . -47) (undo-tree-id903 . -47) (undo-tree-id904 . -47) (undo-tree-id905 . -47) (undo-tree-id906 . -47) (undo-tree-id907 . -50) (undo-tree-id908 . -50) (undo-tree-id909 . -50) (undo-tree-id910 . -49) (undo-tree-id911 . -47) (undo-tree-id912 . -1) (undo-tree-id913 . -50) (undo-tree-id914 . -7) (undo-tree-id915 . -50)) nil (26049 54938 166509 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1298 . 1299) (nil fontified nil 378 . 1299) (378 . 1299)) nil (26049 54938 166383 209000) 0 nil])
([nil nil ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . -327) (undo-tree-id976 . -9) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . -366) (#(" " 0 1 (fontified t)) . -373) 575 (t 26049 54938 179166 626000)) nil (26049 55022 668728 689000) 0 nil])
([nil nil ((#("super::" 0 5 (face font-lock-keyword-face fontified t) 5 7 (fontified t)) . -991) (undo-tree-id1076 . -7) (undo-tree-id1077 . -7) (undo-tree-id1078 . -7) (undo-tree-id1079 . -7) (undo-tree-id1080 . -7) (undo-tree-id1081 . -7) (undo-tree-id1082 . -7) (undo-tree-id1083 . -7) (undo-tree-id1084 . -7) (undo-tree-id1085 . -7) (undo-tree-id1086 . -7) (undo-tree-id1087 . -7) (undo-tree-id1088 . -7) (undo-tree-id1089 . -7) (undo-tree-id1090 . -7) (undo-tree-id1091 . -7) (undo-tree-id1092 . -7) 998 (t 26049 54944 462500 345000)) nil (26049 56183 863676 171000) 0 nil] [nil nil ((#("name)" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) fontified t)) . -1040) (undo-tree-id1014 . -5) (undo-tree-id1015 . -5) (undo-tree-id1016 . -5) 1045 (t 26049 54944 462500 345000)) ((1040 . 1045)) (26049 55022 231515 803000) 0 nil])
([nil nil ((991 . 992)) nil (26049 56183 863665 642000) 0 nil])
([nil nil ((#("layer_" 0 6 (fontified t)) . -1034) (undo-tree-id1011 . -6) (undo-tree-id1012 . -6) (undo-tree-id1013 . -6) 1040) ((1034 . 1040)) (26049 55021 845161 216000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -991) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) 992) nil (26049 56183 863664 782000) 0 nil])
([nil nil ((#("property." 0 9 (fontified t)) . -1025) (undo-tree-id1008 . -9) (undo-tree-id1009 . -9) (undo-tree-id1010 . -9) 1034) ((1025 . 1034)) (26049 55021 427643 217000) 0 nil])
([nil nil ((991 . 992)) nil (26049 56183 863661 123000) 0 nil])
([nil nil ((#("layer_" 0 6 (fontified t)) . -1019) (undo-tree-id1005 . -6) (undo-tree-id1006 . -6) (undo-tree-id1007 . -6) 1025) ((1019 . 1025)) (26049 55020 752031 991000) 0 nil])
([nil nil ((991 . 993)) nil (26049 56183 863660 524000) 0 nil])
([nil nil ((#("string(&" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t) 7 8 (fontified t)) . -1011) (undo-tree-id1002 . -8) (undo-tree-id1003 . -8) (undo-tree-id1004 . -8) 1019) ((1011 . 1019)) (26049 55020 312960 843000) 0 nil])
([nil nil ((991 . 998) (#("cr" 0 2 (fontified nil)) . 991) (991 . 993) (#("crate::" 0 7 (fontified nil)) . -991) (991 . 998) (#("cr" 0 2 (fontified t)) . -991) (undo-tree-id1062 . -2) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -2) (undo-tree-id1067 . -2) (undo-tree-id1068 . -2) (undo-tree-id1069 . -2) (undo-tree-id1070 . -2) 993) nil (26049 56183 863658 520000) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -1008) (undo-tree-id998 . -3) (undo-tree-id999 . -3) (undo-tree-id1000 . -2) (undo-tree-id1001 . -3) 1011) ((1008 . 1011)) (26049 55019 937872 771000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -998) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) 999) nil (26049 56183 863648 139000) 0 nil])
([nil nil ((#("vk_" 0 3 (fontified t)) . -1005) (undo-tree-id994 . -3) (undo-tree-id995 . -3) (undo-tree-id996 . -3) (undo-tree-id997 . -3) 1008) ((1005 . 1008)) (26049 55019 631060 946000) 0 nil])
([nil nil ((998 . 999) (t 26049 56183 875909 737000)) nil (26049 56215 175376 651000) 0 nil])
([nil nil ((#("tools::" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t)) . -998) (undo-tree-id990 . -7) (undo-tree-id991 . -7) (undo-tree-id992 . -7) (undo-tree-id993 . -7) 1005) ((998 . 1005)) (26049 55019 275843 775000) 0 nil])
([nil nil ((#("crate::" 0 5 (face font-lock-keyword-face fontified t) 5 7 (fontified t)) . -991) (undo-tree-id1228 . -7) (undo-tree-id1229 . -7) (undo-tree-id1230 . -7) (undo-tree-id1231 . -7) (undo-tree-id1232 . -7) (undo-tree-id1233 . -7) (undo-tree-id1234 . -7) (undo-tree-id1235 . -7) (undo-tree-id1236 . -7) (undo-tree-id1237 . -7) (undo-tree-id1238 . -7) (undo-tree-id1239 . -7) (undo-tree-id1240 . -7) (undo-tree-id1241 . -7) (undo-tree-id1242 . -7) (undo-tree-id1243 . -7) (undo-tree-id1244 . -7) (undo-tree-id1245 . -7) (undo-tree-id1246 . -7) (undo-tree-id1247 . -7) (undo-tree-id1248 . -7) (undo-tree-id1249 . -7) (undo-tree-id1250 . -7) 998) nil (26049 56215 175374 418000) 0 nil])
([nil nil ((#("super::" 0 5 (face font-lock-keyword-face fontified t) 5 7 (fontified t)) . -991) (undo-tree-id986 . -7) (undo-tree-id987 . -7) (undo-tree-id988 . -7) (undo-tree-id989 . -7) 998) ((991 . 998)) (26049 55018 940514 712000) 0 nil])
([nil nil ((991 . 992)) nil (26049 56215 175356 46000) 0 nil])
([nil nil ((991 . 992)) ((#("l" 0 1 (fontified t)) . 991) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1)) (26049 55018 609115 751000) 0 nil])
([nil nil ((991 . 997) (#("s" 0 1 (fontified nil)) . 991) (991 . 992) (#("self::" 0 6 (fontified nil)) . -991) (991 . 997) (#("s" 0 1 (fontified t)) . -991) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) 992) nil (26049 56215 175355 72000) 0 nil])
([nil nil ((991 . 1007) (#("l" 0 1 (fontified nil)) . 991) (991 . 992) (#("layer_properties" 0 16 (fontified nil)) . -991) (991 . 1007) (#("l" 0 1 (fontified t)) . -991) (undo-tree-id985 . -1) 992) ((991 . 992) (#("layer_properties" 0 16 (fontified nil)) . 991) (991 . 1007) (#("l" 0 1 (fontified nil)) . 991) (991 . 992) (#("layer_properties" 0 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 991) (undo-tree-id1042 . -13) (undo-tree-id1043 . -13) (undo-tree-id1044 . -13) (undo-tree-id1045 . -16) (undo-tree-id1046 . -13) (undo-tree-id1047 . -13) (undo-tree-id1048 . -13) (undo-tree-id1049 . -13) (undo-tree-id1050 . -13) (undo-tree-id1051 . -13) (undo-tree-id1052 . -13) (undo-tree-id1053 . -16) (undo-tree-id1054 . -16)) (26049 55018 318997 457000) 0 nil])
([nil nil ((997 . 998)) nil (26049 56215 175350 308000) 0 nil])
([nil nil ((1007 . 1008)) ((#("." 0 1 (fontified t)) . 1007) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1)) (26049 55018 44948 494000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -997) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) 998) nil (26049 56215 175349 545000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1004) (undo-tree-id981 . -1) (#("e" 0 1 (fontified t)) . -1005) (undo-tree-id982 . -1) (#("s" 0 1 (fontified t)) . -1006) (undo-tree-id983 . -1) (#("." 0 1 (fontified t)) . -1007) (undo-tree-id984 . -1) 1008) ((1004 . 1008)) (26049 55017 808954 200000) 0 nil])
([nil nil ((997 . 998)) nil (26049 56215 175347 285000) 0 nil])
([nil nil ((1004 . 1006)) ((#("y," 0 1 (fontified t) 1 2 (fontified t)) . 1004) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -2)) (26049 55017 540567 748000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -997) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) 998) nil (26049 56215 175346 474000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1005) (undo-tree-id979 . -1) (undo-tree-id980 . -1) 1006) ((1005 . 1006)) (26049 55017 319817 672000) 0 nil])
([nil nil ((997 . 998)) nil (26049 56215 175341 200000) 0 nil])
([nil nil ((1005 . 1008)) ((#(".na" 0 1 (fontified t) 1 3 (fontified t)) . 1005) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -3) (undo-tree-id1026 . -1) (undo-tree-id1027 . -3) (undo-tree-id1028 . -3) (undo-tree-id1029 . -3)) (26049 55016 963124 784000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -996) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("c" 0 1 (fontified t)) . -997) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) 998) nil (26049 56215 175338 121000) 0 nil])
([nil nil ((1006 . 1016) (#("na" 0 2 (fontified nil)) . 1006) (1006 . 1008) (#("layer_name" 0 10 (fontified nil)) . -1006) (1006 . 1016) (#("na" 0 2 (fontified t)) . -1006) (undo-tree-id978 . -2) 1008) ((1006 . 1008) (#("layer_name" 0 10 (fontified nil)) . 1006) (1006 . 1016) (#("na" 0 2 (fontified nil)) . 1006) (1006 . 1008) (#("layer_name" 0 10 (fontified nil)) . 1006) (undo-tree-id1017 . -7) (undo-tree-id1018 . -7) (undo-tree-id1019 . -7) (undo-tree-id1020 . -7) (undo-tree-id1021 . -7)) (26049 55016 962454 163000) 0 nil])
([nil nil ((#("self:" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -991) (undo-tree-id1138 . -5) (undo-tree-id1139 . -5) (undo-tree-id1140 . -5) (undo-tree-id1141 . -5) (undo-tree-id1142 . -5) (undo-tree-id1143 . -5) (undo-tree-id1144 . -5) (undo-tree-id1145 . -5) (undo-tree-id1146 . -5) (undo-tree-id1147 . -5) (undo-tree-id1148 . -5) (undo-tree-id1149 . -5) (undo-tree-id1150 . -5) (undo-tree-id1151 . -5) (undo-tree-id1152 . -5) (undo-tree-id1153 . -5) (undo-tree-id1154 . -5) (undo-tree-id1155 . -5) (undo-tree-id1156 . -5) (undo-tree-id1157 . -5) (undo-tree-id1158 . -5) (undo-tree-id1159 . -5) (undo-tree-id1160 . -5) (undo-tree-id1161 . -5) (undo-tree-id1162 . -5) (undo-tree-id1163 . -5) (undo-tree-id1164 . -5) (undo-tree-id1165 . -5) (undo-tree-id1166 . -5) (undo-tree-id1167 . -5) (undo-tree-id1168 . -5) (undo-tree-id1169 . -5) (undo-tree-id1170 . -5) (undo-tree-id1171 . -5) (undo-tree-id1172 . -5) (undo-tree-id1173 . -5) (undo-tree-id1174 . -5) 996) nil (26049 56215 175083 144000) 0 nil])
([nil nil ((1016 . 1017)) ((#("." 0 1 (fontified nil)) . 1016)) (26049 55016 962092 668000) 0 nil])
([nil nil ((991 . 992)) nil (26049 56215 175060 17000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1016) (undo-tree-id977 . -1) 1017) ((1016 . 1017)) (26049 55016 961689 429000) 0 nil])
([nil nil ((992 . 993)) nil (26049 56215 175059 520000) 0 nil])
nil
([nil nil ((#("c" 0 1 (fontified t)) . -991) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (#("r" 0 1 (fontified t)) . -992) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) 993) nil (26049 56215 175058 226000) 0 nil])
([nil nil ((991 . 993)) nil (26049 56215 175048 570000) 0 nil])
([nil nil ((991 . 998) (#("su" 0 2 (fontified nil)) . 991) (991 . 993) (#("super::" 0 7 (fontified nil)) . -991) (991 . 998) (#("su" 0 2 (fontified t)) . -991) (undo-tree-id1115 . -2) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) 993) nil (26049 56215 175047 340000) 0 nil])
([nil nil ((998 . 999)) nil (26049 56215 175041 351000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -998) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) 999) nil (26049 56215 175040 573000) 0 nil])
([nil nil ((998 . 999)) nil (26049 56215 175036 841000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -998) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) 999) nil (26049 56215 175035 994000) 0 nil])
([nil nil ((998 . 1003) (#("tools" 0 5 (fontified nil)) . -998) (998 . 1003)) nil (26049 56215 175032 998000) 0 nil])
([nil nil ((#("tools" 0 5 (fontified t)) . -998) (undo-tree-id1098 . -5) (undo-tree-id1099 . -5) (undo-tree-id1100 . -5) (undo-tree-id1101 . -5) (undo-tree-id1102 . -5) (undo-tree-id1103 . -5) (undo-tree-id1104 . -5) (undo-tree-id1105 . -5) (undo-tree-id1106 . -5) 1003) nil (26049 56215 175031 274000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -998) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) 999) nil (26049 56215 175019 822000) 0 nil])
([nil nil ((535 . 539) (t 26049 56215 175911 658000)) nil (26049 56376 571666 94000) 0 nil])
([nil nil ((539 . 541)) nil (26049 56376 571664 915000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -540) (undo-tree-id1276 . -1) 541) nil (26049 56376 571663 845000) 0 nil])
([nil nil ((540 . 541)) nil (26049 56376 571661 747000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -539) (undo-tree-id1274 . -1) (#("k" 0 1 (fontified t)) . -540) (undo-tree-id1275 . -1) 541) nil (26049 56376 571660 355000) 0 nil])
([nil nil ((539 . 541)) nil (26049 56376 571656 644000) 0 nil])
([nil nil ((539 . 542) (#("as" 0 2 (fontified nil)) . 539) (539 . 541) (#("ash" 0 3 (fontified nil)) . -539) (539 . 542) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -539) (undo-tree-id1273 . -2) 541) nil (26049 56376 571654 783000) 0 nil])
([nil nil ((542 . 546)) nil (26049 56376 571651 552000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -545) (undo-tree-id1272 . -1) 546) nil (26049 56376 571649 957000) 0 nil])
([nil nil ((545 . 549)) nil (26049 56376 571647 739000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -548) (undo-tree-id1271 . -1) 549) nil (26049 56376 571646 760000) 0 nil])
([nil nil ((548 . 549)) nil (26049 56376 571644 845000) 0 nil])
([nil nil ((549 . 552)) nil (26049 56376 571644 136000) 0 nil])
([nil nil ((552 . 557)) nil (26049 56376 571643 230000) 0 nil])
([nil nil ((#("ash::vk::Enumerate" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 18 (face font-lock-type-face fontified t)) . 539) (undo-tree-id1254 . -18) (undo-tree-id1255 . -14) (undo-tree-id1256 . -16) (undo-tree-id1257 . -16) (undo-tree-id1258 . -18) (undo-tree-id1259 . -18) (undo-tree-id1260 . -18) (undo-tree-id1261 . -18) (undo-tree-id1262 . -18) (undo-tree-id1263 . -18) (undo-tree-id1264 . -18) (undo-tree-id1265 . -18) (undo-tree-id1266 . -18) (undo-tree-id1267 . -18) (undo-tree-id1268 . -18) (undo-tree-id1269 . -18) (undo-tree-id1270 . -18)) nil (26049 56376 571640 838000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 539) (undo-tree-id1252 . 1) (undo-tree-id1253 . -1)) nil (26049 56376 571595 54000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -539) (undo-tree-id1251 . 4)) nil (26049 56376 571587 547000) 0 nil])
([nil nil ((#("fn check_validation_layer_support(
    entry: &ash::Entry,
    required_validation_layers: &Vec<&str>,
) -> bool {
    // if support validation layer, then return true
    let layer_properties = entry
        .enumerate_instance_layer_properties()
        .expect(\"Failed to enumerate Instance Layers Properties\");

    if layer_properties.len() <= 0 {
        eprintln!(\"No available layers.\");
        return false;
    }

    for required_layer_name in required_validation_layers.iter() {
        let mut is_layer_found = false;

        for layer_property in layer_properties.iter() {
            let test_layer_name = super::tools::vk_to_string(&layer_property.layer_name);
            if (*required_layer_name) == test_layer_name {
                is_layer_found = true;
                break;
            }
        }

        if is_layer_found == false {
            return false;
        }
    }

    true
}" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 33 (face font-lock-function-name-face fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t) 34 39 (fontified t) 39 44 (face font-lock-variable-name-face fontified t) 44 46 (fontified t) 46 47 (face rust-ampersand-face fontified t) 47 50 (face font-lock-constant-face fontified t) 50 52 (fontified t) 52 57 (face font-lock-type-face fontified t) 57 63 (fontified t) 63 89 (face font-lock-variable-name-face fontified t) 89 91 (fontified t) 91 92 (face rust-ampersand-face fontified t) 92 95 (face font-lock-type-face fontified t) 95 96 (face (rainbow-delimiters-depth-2-face) fontified t) 96 97 (face rust-ampersand-face fontified t) 97 100 (face font-lock-type-face fontified t) 100 101 (face (rainbow-delimiters-depth-2-face) fontified t) 101 103 (fontified t) 103 104 (face (rainbow-delimiters-depth-1-face) fontified t) 104 106 (fontified t) 106 107 (fontified t syntax-table (1)) 107 108 (fontified t) 108 112 (face font-lock-type-face fontified t) 112 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-1-face) fontified t) 114 119 (fontified t) 119 122 (face font-lock-comment-delimiter-face fontified t) 122 168 (face font-lock-comment-face fontified t) 168 172 (fontified t) 172 175 (face font-lock-keyword-face fontified t) 175 176 (fontified t) 176 192 (face font-lock-variable-name-face fontified t) 192 201 (fontified t) 201 245 (fontified t) 245 246 (face (rainbow-delimiters-depth-2-face) fontified t) 246 247 (face (rainbow-delimiters-depth-2-face) fontified t) 247 263 (fontified t) 263 264 (face (rainbow-delimiters-depth-2-face) fontified t) 264 312 (face font-lock-string-face fontified t) 312 313 (face (rainbow-delimiters-depth-2-face) fontified t) 313 320 (fontified t) 320 322 (face font-lock-keyword-face fontified t) 322 343 (fontified t) 343 344 (face (rainbow-delimiters-depth-2-face) fontified t) 344 345 (face (rainbow-delimiters-depth-2-face) fontified t) 345 346 (fontified t) 346 347 (fontified t syntax-table (1)) 347 351 (fontified t) 351 352 (face (rainbow-delimiters-depth-2-face) fontified t) 352 361 (fontified t) 361 370 (face rust-builtin-formatting-macro fontified t) 370 371 (face (rainbow-delimiters-depth-3-face) fontified t) 371 393 (face font-lock-string-face fontified t) 393 394 (face (rainbow-delimiters-depth-3-face) fontified t) 394 404 (fontified t) 404 410 (face font-lock-keyword-face fontified t) 410 411 (fontified t) 411 416 (face font-lock-keyword-face fontified t) 416 422 (fontified t) 422 423 (face (rainbow-delimiters-depth-2-face) fontified t) 423 429 (fontified t) 429 432 (face font-lock-keyword-face fontified t) 432 433 (fontified t) 433 452 (face font-lock-variable-name-face fontified t) 452 453 (fontified t) 453 455 (face font-lock-keyword-face fontified t) 455 487 (fontified t) 487 488 (face (rainbow-delimiters-depth-2-face) fontified t) 488 489 (face (rainbow-delimiters-depth-2-face) fontified t) 489 490 (fontified t) 490 491 (face (rainbow-delimiters-depth-2-face) fontified t) 491 500 (fontified t) 500 503 (face font-lock-keyword-face fontified t) 503 504 (fontified t) 504 507 (face font-lock-keyword-face fontified t) 507 508 (fontified t) 508 522 (face font-lock-variable-name-face fontified t) 522 525 (fontified t) 525 530 (face font-lock-keyword-face fontified t) 530 541 (fontified t) 541 544 (face font-lock-keyword-face fontified t) 544 545 (fontified t) 545 559 (face font-lock-variable-name-face fontified t) 559 560 (fontified t) 560 562 (face font-lock-keyword-face fontified t) 562 584 (fontified t) 584 585 (face (rainbow-delimiters-depth-3-face) fontified t) 585 586 (face (rainbow-delimiters-depth-3-face) fontified t) 586 587 (fontified t) 587 588 (face (rainbow-delimiters-depth-3-face) fontified t) 588 589 (fontified t) 589 601 (fontified t) 601 604 (face font-lock-keyword-face fontified t) 604 605 (fontified t) 605 620 (face font-lock-variable-name-face fontified t) 620 623 (fontified t) 623 628 (face font-lock-keyword-face fontified t) 628 630 (fontified t) 630 635 (face font-lock-constant-face fontified t) 635 637 (fontified t) 637 640 (fontified t) 640 643 (fontified t) 643 649 (fontified t) 649 650 (face (rainbow-delimiters-depth-4-face) fontified t) 650 651 (face rust-ampersand-face fontified t) 651 657 (fontified t) 657 666 (fontified t) 666 672 (fontified t) 672 676 (fontified t) 676 677 (face (rainbow-delimiters-depth-4-face) fontified t) 677 679 (fontified t) 679 691 (fontified t) 691 693 (face font-lock-keyword-face fontified t) 693 694 (fontified t) 694 695 (face (rainbow-delimiters-depth-4-face) fontified t) 695 715 (fontified t) 715 716 (face (rainbow-delimiters-depth-4-face) fontified t) 716 736 (fontified t) 736 737 (face (rainbow-delimiters-depth-4-face) fontified t) 737 771 (fontified t) 771 775 (face font-lock-keyword-face fontified t) 775 793 (fontified t) 793 798 (face font-lock-keyword-face fontified t) 798 812 (fontified t) 812 813 (face (rainbow-delimiters-depth-4-face) fontified t) 813 822 (fontified t) 822 823 (face (rainbow-delimiters-depth-3-face) fontified t) 823 833 (fontified t) 833 835 (face font-lock-keyword-face fontified t) 835 854 (fontified t) 854 859 (face font-lock-keyword-face fontified t) 859 860 (fontified t) 860 861 (face (rainbow-delimiters-depth-3-face) fontified t) 861 874 (fontified t) 874 880 (face font-lock-keyword-face fontified t) 880 881 (fontified t) 881 886 (face font-lock-keyword-face fontified t) 886 896 (fontified t) 896 897 (face (rainbow-delimiters-depth-3-face) fontified t) 897 902 (fontified t) 902 903 (face (rainbow-delimiters-depth-2-face) fontified t) 903 909 (fontified t) 909 913 (face font-lock-keyword-face fontified t) 913 914 (fontified t) 914 915 (face (rainbow-delimiters-depth-1-face) fontified t)) . 367) (undo-tree-id1321 . -915) (undo-tree-id1322 . -13) (undo-tree-id1323 . -417) (undo-tree-id1324 . -623) (undo-tree-id1325 . -35) (undo-tree-id1326 . -248) (undo-tree-id1327 . -425) (undo-tree-id1328 . -800) (undo-tree-id1329 . -914) (undo-tree-id1330 . -914) (undo-tree-id1331 . -914) (undo-tree-id1332 . -914) (undo-tree-id1333 . -914) (undo-tree-id1334 . -914) (undo-tree-id1335 . -914) (undo-tree-id1336 . -914) (undo-tree-id1337 . -904) (undo-tree-id1338 . -738) (undo-tree-id1339 . -738) (undo-tree-id1340 . -738) (undo-tree-id1341 . -738) (undo-tree-id1342 . -738) (undo-tree-id1343 . -738) (undo-tree-id1344 . -738) (undo-tree-id1345 . -738) (undo-tree-id1346 . -738) (undo-tree-id1347 . -738) (undo-tree-id1348 . -738) (undo-tree-id1349 . -738) (undo-tree-id1350 . -738) (undo-tree-id1351 . -738) (undo-tree-id1352 . -738) (undo-tree-id1353 . -738) (undo-tree-id1354 . -738) (undo-tree-id1355 . -738) (undo-tree-id1356 . -738) (undo-tree-id1357 . -738) (undo-tree-id1358 . -738) (undo-tree-id1359 . -738) (undo-tree-id1360 . -738) (undo-tree-id1361 . -738) (undo-tree-id1362 . -738) (undo-tree-id1363 . -738) (undo-tree-id1364 . -738) (undo-tree-id1365 . -738) (undo-tree-id1366 . -738) (undo-tree-id1367 . -738) (undo-tree-id1368 . -738) (undo-tree-id1369 . -738) (undo-tree-id1370 . -738) (undo-tree-id1371 . -738) (undo-tree-id1372 . -738) (undo-tree-id1373 . -738) (undo-tree-id1374 . -738) (undo-tree-id1375 . -738) (undo-tree-id1376 . -738) (undo-tree-id1377 . -738) (undo-tree-id1378 . -738) (undo-tree-id1379 . -738) (undo-tree-id1380 . -738) (undo-tree-id1381 . -13) (undo-tree-id1382 . -13) (undo-tree-id1383 . -13) (undo-tree-id1384 . -13) (undo-tree-id1385 . -13) (undo-tree-id1386 . -13) (undo-tree-id1387 . -13) (undo-tree-id1388 . -13) (undo-tree-id1389 . -13) (undo-tree-id1390 . -13) (undo-tree-id1391 . -13) (undo-tree-id1392 . -13) (undo-tree-id1393 . -13) (undo-tree-id1394 . -13) (undo-tree-id1395 . -13) (undo-tree-id1396 . -13) (undo-tree-id1397 . -13) (undo-tree-id1398 . -13) (undo-tree-id1399 . -13) (undo-tree-id1400 . -13) (undo-tree-id1401 . -13) (undo-tree-id1402 . -13) (undo-tree-id1403 . -13) (undo-tree-id1404 . -13) (undo-tree-id1405 . -13) (undo-tree-id1406 . -13) (undo-tree-id1407 . -13) (undo-tree-id1408 . -13) (undo-tree-id1409 . -13) (undo-tree-id1410 . -13) (undo-tree-id1411 . -13) (undo-tree-id1412 . -13) (undo-tree-id1413 . -13) (undo-tree-id1414 . -13) (undo-tree-id1415 . -13) (undo-tree-id1416 . -13) (undo-tree-id1417 . -13) (undo-tree-id1418 . -13) (undo-tree-id1419 . -13) (undo-tree-id1420 . -13) (undo-tree-id1421 . -13) (undo-tree-id1422 . -13) (undo-tree-id1423 . -13) (undo-tree-id1424 . -13) (undo-tree-id1425 . -13) (undo-tree-id1426 . -13) (undo-tree-id1427 . -13) (undo-tree-id1428 . -13) (undo-tree-id1429 . -35) (undo-tree-id1430 . -915) (undo-tree-id1431 . -915) (undo-tree-id1432 . -915) (undo-tree-id1433 . -910) (undo-tree-id1434 . -904) (undo-tree-id1435 . -902) (undo-tree-id1436 . -865) (undo-tree-id1437 . -824) (undo-tree-id1438 . -817) (undo-tree-id1439 . -681) (undo-tree-id1440 . -590) (undo-tree-id1441 . -590) (undo-tree-id1442 . -590) (undo-tree-id1443 . -590) (undo-tree-id1444 . -590) (undo-tree-id1445 . -590) (undo-tree-id1446 . -590) (undo-tree-id1447 . -915) 957 (t 26049 56376 572588 232000)) nil (26050 3750 239710 596000) 0 nil])
([nil nil ((nil fontified nil 1583 . 1584) (nil fontified nil 1578 . 1583) (nil fontified nil 1574 . 1578) (nil fontified nil 1564 . 1574) (nil fontified nil 1563 . 1564) (nil fontified nil 1554 . 1563) (nil fontified nil 1553 . 1554) (nil fontified nil 1539 . 1553) (nil fontified nil 1534 . 1539) (nil fontified nil 1533 . 1534) (nil fontified nil 1527 . 1533) (nil fontified nil 1510 . 1527) (nil fontified nil 1509 . 1510) (nil fontified nil 1508 . 1509) (nil fontified nil 1503 . 1508) (nil fontified nil 1484 . 1503) (nil fontified nil 1482 . 1484) (nil fontified nil 1468 . 1482) (nil fontified nil 1467 . 1468) (nil fontified nil 1454 . 1467) (nil fontified nil 1453 . 1454) (nil fontified nil 1435 . 1453) (nil fontified nil 1430 . 1435) (nil fontified nil 1408 . 1430) (nil fontified nil 1404 . 1408) (nil fontified nil 1366 . 1404) (nil fontified nil 1365 . 1366) (nil fontified nil 1345 . 1365) (nil fontified nil 1344 . 1345) (nil fontified nil 1324 . 1344) (nil fontified nil 1323 . 1324) (nil fontified nil 1322 . 1323) (nil fontified nil 1320 . 1322) (nil fontified nil 1302 . 1320) (nil fontified nil 1301 . 1302) (nil fontified nil 1276 . 1301) (nil fontified nil 1275 . 1276) (nil fontified nil 1274 . 1275) (nil fontified nil 1260 . 1274) (nil fontified nil 1255 . 1260) (nil fontified nil 1253 . 1255) (nil fontified nil 1246 . 1253) (nil fontified nil 1243 . 1246) (nil fontified nil 1228 . 1243) (nil fontified nil 1227 . 1228) (nil fontified nil 1224 . 1227) (nil fontified nil 1207 . 1224) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1204 . 1205) (nil fontified nil 1203 . 1204) (nil fontified nil 1181 . 1203) (nil fontified nil 1179 . 1181) (nil fontified nil 1178 . 1179) (nil fontified nil 1164 . 1178) (nil fontified nil 1163 . 1164) (nil fontified nil 1160 . 1163) (nil fontified nil 1145 . 1160) (nil fontified nil 1140 . 1145) (nil fontified nil 1137 . 1140) (nil fontified nil 1123 . 1137) (nil fontified nil 1122 . 1123) (nil fontified nil 1119 . 1122) (nil fontified nil 1118 . 1119) (nil fontified nil 1115 . 1118) (nil fontified nil 1103 . 1115) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1100 . 1101) (nil fontified nil 1099 . 1100) (nil fontified nil 1098 . 1099) (nil fontified nil 1093 . 1098) (nil fontified nil 1077 . 1093) (nil fontified nil 1076 . 1077) (nil fontified nil 1074 . 1076) (nil fontified nil 1073 . 1074) (nil fontified nil 1054 . 1073) (nil fontified nil 1053 . 1054) (nil fontified nil 1050 . 1053) (nil fontified nil 1042 . 1050) (nil fontified nil 1040 . 1042) (nil fontified nil 1039 . 1040) (nil fontified nil 1030 . 1039) (nil fontified nil 1029 . 1030) (nil fontified nil 1015 . 1029) (nil fontified nil 1014 . 1015) (nil fontified nil 1002 . 1014) (nil fontified nil 1001 . 1002) (nil fontified nil 999 . 1001) (nil fontified nil 996 . 999) (nil fontified nil 995 . 996) (nil fontified nil 987 . 995) (nil fontified nil 969 . 987) (nil fontified nil 968 . 969) (nil fontified nil 952 . 968) (nil fontified nil 951 . 952) (nil fontified nil 950 . 951) (nil fontified nil 936 . 950) (nil fontified nil 931 . 936) (nil fontified nil 929 . 931) (nil fontified nil 922 . 929) (nil fontified nil 919 . 922) (nil fontified nil 909 . 919) (nil fontified nil 908 . 909) (nil fontified nil 905 . 908) (nil fontified nil 888 . 905) (nil fontified nil 887 . 888) (nil fontified nil 886 . 887) (nil fontified nil 885 . 886) (nil fontified nil 884 . 885) (nil fontified nil 862 . 884) (nil fontified nil 860 . 862) (nil fontified nil 859 . 860) (nil fontified nil 854 . 859) (nil fontified nil 853 . 854) (nil fontified nil 850 . 853) (nil fontified nil 836 . 850) (nil fontified nil 835 . 836) (nil fontified nil 806 . 835) (nil fontified nil 805 . 806) (nil fontified nil 797 . 805) (nil fontified nil 784 . 797) (nil fontified nil 783 . 784) (nil fontified nil 782 . 783) (nil fontified nil 778 . 782) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 766 . 776) (nil fontified nil 761 . 766) (nil fontified nil 760 . 761) (nil fontified nil 754 . 760) (nil fontified nil 740 . 754) (nil fontified nil 739 . 740) (nil fontified nil 717 . 739) (nil fontified nil 716 . 717) (nil fontified nil 707 . 716) (nil fontified nil 694 . 707) (nil fontified nil 693 . 694) (nil fontified nil 689 . 693) (nil fontified nil 688 . 689) (nil fontified nil 687 . 688) (nil fontified nil 686 . 687) (nil fontified nil 685 . 686) (nil fontified nil 664 . 685) (nil fontified nil 662 . 664) (nil fontified nil 651 . 662) (nil fontified nil 650 . 651) (nil fontified nil 601 . 650) (nil fontified nil 600 . 601) (nil fontified nil 581 . 600) (nil fontified nil 580 . 581) (nil fontified nil 579 . 580) (nil fontified nil 578 . 579) (nil fontified nil 564 . 578) (nil fontified nil 554 . 564) (nil fontified nil 551 . 554) (nil fontified nil 521 . 551) (nil fontified nil 505 . 521) (nil fontified nil 504 . 505) (nil fontified nil 501 . 504) (nil fontified nil 492 . 501) (nil fontified nil 446 . 492) (nil fontified nil 443 . 446) (nil fontified nil 434 . 443) (nil fontified nil 433 . 434) (nil fontified nil 432 . 433) (nil fontified nil 428 . 432) (nil fontified nil 427 . 428) (nil fontified nil 426 . 427) (nil fontified nil 424 . 426) (nil fontified nil 423 . 424) (nil fontified nil 418 . 423) (nil fontified nil 416 . 418) (nil fontified nil 413 . 416) (nil fontified nil 412 . 413) (nil fontified nil 410 . 412) (nil fontified nil 405 . 410) (nil fontified nil 404 . 405) (nil fontified nil 374 . 404) (nil fontified nil 373 . 374) (nil fontified nil 371 . 373) (nil fontified nil 367 . 371) (367 . 1584)) nil (26050 3750 239548 633000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1467) (#("    " 0 4 (fontified t)) . -1462) (undo-tree-id1318 . -4) (#("    " 0 4 (fontified t)) . -1455) (undo-tree-id1319 . -2) (undo-tree-id1320 . -1) (#("    " 0 4 (fontified t)) . -1449) (#("    " 0 4 (fontified t)) . -1427) (#("    " 0 4 (fontified t)) . -1386) (#("    " 0 4 (fontified t)) . -1375) (#("    " 0 4 (fontified t)) . -1365) (#("    " 0 4 (fontified t)) . -1346) (#("    " 0 4 (fontified t)) . -1307) (#("    " 0 4 (fontified t)) . -1244) (#("    " 0 4 (fontified t)) . -1152) (#("    " 0 4 (fontified t)) . -1092) (#("    " 0 4 (fontified t)) . -1051) (#("    " 0 4 (fontified t)) . -990) (#("    " 0 4 (fontified t)) . -983) (#("    " 0 4 (fontified t)) . -977) (#("    " 0 4 (fontified t)) . -939) (#("    " 0 4 (fontified t)) . -861) (#("    " 0 4 (fontified t)) . -810) (#("    " 0 4 (fontified t)) . -761) (#("    " 0 4 (fontified t)) . -744) (#("    " 0 4 (fontified t)) . -726) (#("    " 0 4 (fontified t)) . -683) (#("    " 0 4 (fontified t)) . -642) (#("    " 0 4 (fontified t)) . -577) (#("    " 0 4 (fontified t)) . -530) (#("    " 0 4 (fontified t)) . -493) (#("    " 0 4 (fontified t)) . -439) 364) nil (26050 3750 239524 194000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -367) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (#(" " 0 1 (fontified t)) . -368) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (#(" " 0 1 (fontified t)) . -369) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (#(" " 0 1 (fontified t)) . -370) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) 371) nil (26050 3750 239480 139000) 0 nil])
([nil nil ((#("utility" 0 7 (face font-lock-constant-face fontified t)) . -874) (undo-tree-id1448 . -7) (undo-tree-id1449 . -7) 881 (t 26050 3750 250047 131000)) nil (26050 3762 204190 889000) 0 nil])
([nil nil ((874 . 875)) nil (26050 3762 204184 72000) 0 nil])
([nil nil ((875 . 879)) nil (26050 3762 204180 216000) 0 nil])
([nil nil ((#("utility" 0 7 (face font-lock-constant-face fontified t)) . -1168) (undo-tree-id1465 . -7) (undo-tree-id1466 . -7) (undo-tree-id1467 . -7) 1175 (t 26050 3762 216714 533000)) nil (26050 3767 300920 111000) 0 nil])
([nil nil ((1168 . 1170)) nil (26050 3767 300916 676000) 0 nil])
([nil nil ((1168 . 1175) (#("su" 0 2 (fontified nil)) . 1168) (1168 . 1170) (#("super::" 0 7 (fontified nil)) . -1168) (1168 . 1175) (#("su" 0 2 (face font-lock-constant-face fontified t)) . -1168) (undo-tree-id1450 . -1) (undo-tree-id1451 . -2) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -2) (undo-tree-id1461 . -2) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) 1170) nil (26050 3767 300912 405000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1173) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (#(":" 0 1 (fontified t)) . -1174) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) 1175 (t 26050 3767 310048 179000)) nil (26050 3770 87078 879000) 0 nil])
([nil nil ((1461 . 1462) (t 26050 3770 96715 16000)) nil (26050 3926 418450 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2306 . 2307) (nil fontified nil 1462 . 2307) (1462 . 2307)) nil (26050 3926 418449 131000) 0 nil])
([nil nil ((1462 . 1466)) nil (26050 3926 418447 319000) 0 nil])
([nil nil ((2311 . 2312) 1466) nil (26050 3926 418442 962000) 0 nil])
([nil nil ((31 . 37) (t 26050 3926 430057 939000)) nil (26050 3936 48918 704000) 0 nil])
([nil nil ((35 . 38) (#("as" 0 2 (fontified nil)) . 35) (35 . 37) (#("ash" 0 3 (fontified nil)) . -35) (35 . 38) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -35) (undo-tree-id1501 . -2) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) 37) nil (26050 3936 48916 652000) 0 nil])
([nil nil ((38 . 41)) nil (26050 3936 48907 484000) 0 nil])
([nil nil ((40 . 42) (#("v" 0 1 (fontified nil)) . 40) (40 . 41) (#("vk" 0 2 (fontified nil)) . -40) (40 . 42) (#("v" 0 1 (fontified t)) . -40) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) 41) nil (26050 3936 48904 609000) 0 nil])
([nil nil ((42 . 43)) nil (26050 3936 48889 29000) 0 nil])
([nil nil ((43 . 44) (t 26050 3936 60058 529000)) nil (26050 3936 885809 439000) 0 nil])
([nil nil ((1696 . 1697) (t 26050 3936 886725 247000)) nil (26050 3947 545935 83000) 0 nil])
([nil nil ((1697 . 1701)) nil (26050 3947 545931 62000) 0 nil])
([nil nil ((2305 . 2310) (t 26050 3947 556725 900000)) nil (26050 3964 150231 692000) 0 nil])
([nil nil ((1474 . 1476) (t 26050 3964 163393 582000)) nil (26050 4027 834888 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2582 . 2583) (nil fontified nil 1475 . 2583) (1475 . 2583)) nil (26050 4027 834884 37000) 0 nil])
([nil nil ((#("CStr" 0 4 (face font-lock-type-face fontified t)) . -2462) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (undo-tree-id1525 . -4) (undo-tree-id1526 . -4) (undo-tree-id1527 . -4) (undo-tree-id1528 . -4) (undo-tree-id1529 . -4) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -3) (undo-tree-id1539 . -3) (undo-tree-id1540 . -4) (undo-tree-id1541 . -4) (undo-tree-id1542 . -4) (undo-tree-id1543 . -4) (undo-tree-id1544 . -4) (undo-tree-id1545 . -4) (undo-tree-id1546 . -4) (undo-tree-id1547 . -4) 2466 (t 26050 4027 846730 778000)) nil (26050 4038 176331 54000) 0 nil])
([nil nil ((2462 . 2465)) nil (26050 4038 176313 461000) 0 nil])
([nil nil ((1 . 22) (2462 . 2462) (2462 . 2466) (#("CSt" 0 3 (fontified nil)) . 2462) (2462 . 2465) (#("CStr (use std::ffi::CStr)" 0 25 (fontified nil)) . -2462) (2462 . 2487) (#("CSt" 0 3 (face font-lock-type-face fontified t)) . -2462) (undo-tree-id1508 . -3) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -3) (undo-tree-id1519 . -3) (undo-tree-id1520 . -3) (undo-tree-id1521 . -3) (undo-tree-id1522 . -3) 2465) nil (26050 4038 176308 863000) 0 nil])
([nil nil ((#("void" 0 4 (fontified t)) . -1805) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) 1809 (t 26050 4038 190064 738000)) nil (26050 4046 691888 672000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1803) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (#("_" 0 1 (fontified t)) . -1804) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) 1805) nil (26050 4046 691885 574000) 0 nil])
([nil nil ((1803 . 1807)) nil (26050 4046 691874 527000) 0 nil])
([nil nil (("::ffi" . -8) (undo-tree-id1548 . -5) 13 (15 . 21) (19 . 28) (1803 . 1803) (1803 . 1809) (#("c_vo" 0 4 (fontified nil)) . 1803) (1803 . 1807) (#("c_void (use std::ffi::c_void)" 0 29 (fontified nil)) . -1803) (1803 . 1832) (#("c_vo" 0 4 (fontified t)) . -1803) (undo-tree-id1549 . -4) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -2) (undo-tree-id1553 . -2) (undo-tree-id1554 . -2) (undo-tree-id1555 . -3) (undo-tree-id1556 . -3) (undo-tree-id1557 . -4) (undo-tree-id1558 . -4) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) 1807) nil (26050 4046 691869 387000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3005) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3006) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) 3007 (t 26050 4046 703398 586000)) nil (26050 6354 620532 292000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3067) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3068) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) 3069) nil (26050 6354 620425 808000) 0 nil])
([nil nil ((#("     " 0 4 (fontified t) 4 5 (fontified t)) . -3063) (undo-tree-id1634 . -4) (undo-tree-id1635 . -4) (undo-tree-id1636 . -4) (undo-tree-id1637 . -4) (undo-tree-id1638 . -4) (undo-tree-id1639 . -4) (undo-tree-id1640 . -4) 3067) nil (26050 6354 620420 112000) 0 nil])
([nil nil ((#("     " 0 4 (fontified t) 4 5 (fontified t)) . -3001) (undo-tree-id1613 . -4) (undo-tree-id1614 . -4) (undo-tree-id1615 . -4) (undo-tree-id1616 . -4) (undo-tree-id1617 . -4) (undo-tree-id1618 . -4) (undo-tree-id1619 . -4) (undo-tree-id1620 . -4) (undo-tree-id1621 . -4) (undo-tree-id1622 . -4) (undo-tree-id1623 . -4) (undo-tree-id1624 . -4) (undo-tree-id1625 . -4) (undo-tree-id1626 . -4) (undo-tree-id1627 . -4) (undo-tree-id1628 . -4) (undo-tree-id1629 . -4) (undo-tree-id1630 . -4) (undo-tree-id1631 . -4) (undo-tree-id1632 . -4) (undo-tree-id1633 . -4)) nil (26050 6354 620414 184000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3112)) nil (26050 6354 620399 498000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -2990) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (#("|" 0 1 (fontified t)) . -2991) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) 2992) nil (26050 6354 620398 206000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3045) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("|" 0 1 (fontified t)) . -3046) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) 3047) nil (26050 6354 620387 984000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3097) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (#("|" 0 1 (fontified t)) . -3098) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) 3099) nil (26050 6354 620383 474000) 0 nil])
([nil nil ((2999 . 3001)) nil (26050 6354 620378 810000) 0 nil])
([nil nil ((3058 . 3059)) nil (26050 6354 620378 199000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -3058) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) 3059) nil (26050 6354 620376 454000) 0 nil])
([nil nil ((3056 . 3058)) nil (26050 6354 620361 369000) 0 nil])
([nil nil ((3110 . 3112)) nil (26050 6354 620357 331000) 0 nil])
([nil nil ((3056 . 3060) 3066 (t 26050 6354 633538 346000)) nil (26050 6365 980919 495000) 0 nil])
([nil nil ((2999 . 3003) 3010) nil (26050 6365 980917 795000) 0 nil])
([nil nil ((3118 . 3122) 3128) nil (26050 6365 980912 996000) 0 nil])
([nil nil ((3003 . 3005) (t 26050 6365 996872 377000)) nil (26050 6440 668336 22000) 0 nil])
([nil current ((3066 . 3068)) nil (26050 6440 668331 824000) 0 nil])
nil
