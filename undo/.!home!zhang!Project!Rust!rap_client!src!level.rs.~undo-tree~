(undo-tree-save-format-version . 1)
"afb658490ce0b3de9017e9743bd1319fcb8ac551"
[nil nil nil nil (26116 21444 777158 603000) 0 nil]
([nil nil ((1 . 7) (t 26116 21359 878723 801000)) nil (26116 21444 777157 500000) 0 nil])
([nil nil ((5 . 12) (#("cr" 0 2 (fontified nil)) . 5) (5 . 7) (#("crate::" 0 7 (fontified nil)) . -5) (5 . 12) (#("cr" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id225 . -2) (undo-tree-id226 . -1) (undo-tree-id227 . -2) (undo-tree-id228 . -2) 7) nil (26116 21444 777155 815000) 0 nil])
([nil nil ((12 . 14)) nil (26116 21444 777152 29000) 0 nil])
([nil nil ((12 . 19) (#("of" 0 2 (fontified nil)) . 12) (12 . 14) (#("offsets" 0 7 (fontified nil)) . -12) (12 . 19) (#("of" 0 2 (fontified t)) . -12) (undo-tree-id222 . -2) (undo-tree-id223 . -1) (undo-tree-id224 . -2) 14) nil (26116 21444 777150 848000) 0 nil])
([nil nil ((19 . 23)) nil (26116 21444 777147 525000) 0 nil])
([nil nil ((23 . 25)) nil (26116 21444 777146 862000) 0 nil])
([nil nil ((25 . 28)) nil (26116 21444 777146 327000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -25) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("t" 0 1 (fontified t)) . -26) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -27) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 28) nil (26116 21444 777144 375000) 0 nil])
([nil nil ((25 . 32)) nil (26116 21444 777102 118000) 0 nil])
([nil nil ((apply yas--snippet-revive 29 36 #s(yas--snippet nil nil #s(yas--exit 36 nil) 92 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 36 nil) 92 nil nil nil nil)) (29 . 36) (#("struct $0" 0 9 (fontified nil)) . 29) (29 . 38) (#("str" 0 3 (fontified nil)) . 29) (29 . 32) (#("struct" 0 6 (fontified nil)) . -29) (29 . 35) (#("str" 0 3 (face font-lock-type-face fontified t)) . -29) (undo-tree-id188 . -3) (undo-tree-id189 . -1) (undo-tree-id190 . -2) (undo-tree-id191 . -3) 32) nil (26116 21444 777100 209000) 0 nil])
([nil nil ((36 . 44)) nil (26116 21444 777094 926000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 44) (44 . 48) (43 . 45)) nil (26116 21444 777094 135000) 0 nil])
([nil nil ((44 . 48)) nil (26116 21444 777092 715000) 0 nil])
([nil nil ((48 . 56)) nil (26116 21444 777092 49000) 0 nil])
([nil nil ((56 . 57)) nil (26116 21444 777091 423000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -54) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("t" 0 1 (fontified t)) . -55) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -56) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 57) nil (26116 21444 777089 580000) 0 nil])
([nil nil ((54 . 56)) nil (26116 21444 777069 674000) 0 nil])
([nil nil ((54 . 60) (#("St" 0 2 (fontified nil)) . 54) (54 . 56) (#("String" 0 6 (fontified nil)) . -54) (54 . 60) (#("St" 0 2 (face font-lock-type-face fontified t)) . -54) (undo-tree-id153 . -2) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) 56) nil (26116 21444 777068 215000) 0 nil])
([nil nil ((60 . 61)) nil (26116 21444 777061 845000) 0 nil])
([nil nil ((61 . 66)) nil (26116 21444 777061 187000) 0 nil])
([nil nil ((66 . 69)) nil (26116 21444 777060 414000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -67) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("l" 0 1 (fontified t)) . -68) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 69) nil (26116 21444 777058 685000) 0 nil])
([nil nil ((67 . 74)) nil (26116 21444 776614 561000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -73) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 74) nil (26116 21444 776613 632000) 0 nil])
([nil nil ((#("is" 0 2 (fontified t)) . -71) (undo-tree-id123 . -2) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) 73) nil (26116 21444 776609 174000) 0 nil])
([nil nil ((#("bool " 0 4 (face font-lock-type-face fontified t) 4 5 (fontified t)) . -66) (undo-tree-id78 . -5) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) 71) nil (26116 21444 776594 398000) 0 nil])
([nil nil ((66 . 80)) nil (26116 21444 776041 612000) 0 nil])
([nil nil ((79 . 83) (#("b" 0 1 (fontified nil)) . 79) (79 . 80) (#("bool" 0 4 (fontified nil)) . -79) (79 . 83) (#("b" 0 1 (fontified t)) . -79) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 80) nil (26116 21444 776040 292000) 0 nil])
([nil nil ((83 . 84)) nil (26116 21444 776034 122000) 0 nil])
([nil nil ((84 . 89)) nil (26116 21444 776033 510000) 0 nil])
([nil nil ((89 . 92)) nil (26116 21444 776032 814000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -91) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 92) nil (26116 21444 776031 775000) 0 nil])
([nil nil ((91 . 96)) nil (26116 21444 776026 580000) 0 nil])
([nil nil ((96 . 99)) nil (26116 21444 776025 756000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -95) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("i" 0 1 (fontified t)) . -96) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("n" 0 1 (fontified t)) . -97) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("g" 0 1 (fontified t)) . -98) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 99) nil (26116 21444 776022 488000) 0 nil])
([nil nil ((95 . 105)) nil (26116 21444 775553 429000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -102) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("g" 0 1 (fontified t)) . -103) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t)) . -104) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 105) nil (26116 21444 775551 663000) 0 nil])
([nil nil ((102 . 107)) nil (26116 21444 775536 698000) 0 nil])
([nil nil ((106 . 110) (#("b" 0 1 (fontified nil)) . 106) (106 . 107) (#("bool" 0 4 (fontified nil)) . -106) (106 . 110) (#("b" 0 1 (fontified t)) . -106) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 107) nil (26116 21444 775533 932000) 0 nil])
([nil nil ((110 . 111)) nil (26116 21444 775512 124000) 0 nil])
([nil nil ((113 . 114) 111) nil (26116 21444 775507 102000) 0 nil])
([nil nil ((114 . 115) (t 26116 21444 785395 628000)) nil (26116 21471 817171 851000) 0 nil])
([nil nil ((115 . 117)) nil (26116 21471 817170 996000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 120 125 nil nil nil t #s(yas--exit 132 nil))) #s(yas--exit 132 nil) 93 nil #s(yas--field 1 120 125 nil nil nil t #s(yas--exit 132 nil)) nil nil)) (115 . 129) (#("impl $1 {
    $0
}" 0 18 (fontified nil)) . 115) (115 . 133) (#("im" 0 2 (fontified nil)) . 115) (115 . 117) (#("impl" 0 4 (fontified nil)) . -115) (115 . 119) (#("im" 0 2 (fontified t)) . -115) (undo-tree-id317 . -2) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -2) 117) nil (26116 21471 817169 641000) 0 nil])
([nil nil ((120 . 121)) nil (26116 21471 817165 83000) 0 nil])
([nil nil ((120 . 125) (#("L" 0 1 (fontified nil)) . 120) (undo-tree-id308 . -1) (120 . 121) (#("Level" 0 5 (fontified nil)) . -120) (undo-tree-id309 . -5) (120 . 125) (#("L" 0 1 (face font-lock-type-face fontified t)) . -120) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 121) nil (26116 21471 817163 465000) 0 nil])
([nil nil ((apply yas--snippet-revive 115 134 #s(yas--snippet nil (#s(yas--field 1 120 125 nil nil nil t #s(yas--exit 132 nil))) #s(yas--exit 132 nil) 93 nil #s(yas--field 1 120 125 nil nil nil t #s(yas--exit 132 nil)) nil nil))) nil (26116 21471 817155 542000) 0 nil])
([nil nil ((24 . 25)) nil (26116 21471 817154 902000) 0 nil])
([nil nil ((25 . 27)) nil (26116 21471 817154 264000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -26) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) 27) nil (26116 21471 817153 334000) 0 nil])
([nil nil ((26 . 28)) nil (26116 21471 817148 634000) 0 nil])
([nil nil ((32 . 33)) nil (26116 21471 817148 81000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -32) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 33) nil (26116 21471 817146 993000) 0 nil])
([nil nil ((27 . 29)) nil (26116 21471 817139 577000) 0 nil])
([nil nil ((#("Debug" 0 5 (face font-lock-preprocessor-face fontified t)) . 34) (undo-tree-id279 . -5) (apply yas--snippet-revive 27 40 #s(yas--snippet nil (#s(yas--field 0 34 39 nil nil nil nil nil)) nil 94 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 0 34 39 nil nil nil nil nil)) nil 94 nil nil nil nil)) (27 . 40) (#("derive(${0:Debug})" 0 18 (fontified nil)) . 27) (27 . 45) (#("de" 0 2 (fontified nil)) . 27) (27 . 29) (#("derive(…)" 0 9 (fontified nil)) . -27) (27 . 36) (#("de" 0 2 (face font-lock-preprocessor-face fontified t)) . -27) (undo-tree-id280 . -2) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) 29) nil (26116 21471 817137 839000) 0 nil])
([nil nil ((34 . 36)) nil (26116 21471 817127 537000) 0 nil])
([nil nil ((34 . 41) (#("De" 0 2 (fontified nil)) . 34) (34 . 36) (#("Default" 0 7 (fontified nil)) . -34) (34 . 41) (#("De" 0 2 (face font-lock-preprocessor-face fontified t)) . -34) (undo-tree-id271 . -2) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) 36) nil (26116 21471 817125 955000) 0 nil])
([nil nil ((41 . 42)) nil (26116 21471 817118 380000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-preprocessor-face fontified t)) . -41) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 42) nil (26116 21471 817117 439000) 0 nil])
([nil nil ((41 . 44)) nil (26116 21471 817113 662000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-preprocessor-face fontified t)) . -41) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#(" " 0 1 (face font-lock-preprocessor-face fontified t)) . -42) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("D" 0 1 (face font-lock-preprocessor-face fontified t)) . -43) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 44) nil (26116 21471 817110 122000) 0 nil])
([nil nil ((153 . 154) 41) nil (26116 21471 817074 53000) 0 nil])
([nil nil ((151 . 154) (t 26116 21471 825397 262000)) nil (26116 21490 623850 988000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -152) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("n" 0 1 (fontified t)) . -153) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) 154) nil (26116 21490 623849 597000) 0 nil])
([nil nil ((152 . 169)) nil (26116 21490 623841 363000) 0 nil])
([nil nil ((167 . 172) (#("Le" 0 2 (fontified nil)) . 167) (167 . 169) (#("Level" 0 5 (fontified nil)) . -167) (167 . 172) (#("Le" 0 2 (face font-lock-type-face fontified t)) . -167) (undo-tree-id347 . -2) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -2) (undo-tree-id352 . -2) 169) nil (26116 21490 623840 123000) 0 nil])
([nil nil ((172 . 175)) nil (26116 21490 623834 997000) 0 nil])
([nil nil ((176 . 180) (#("        " 0 8 (fontified nil)) . 175) (175 . 183) (#("    " 0 4 (fontified nil)) . 175) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (174 . 180)) nil (26116 21490 623833 986000) 0 nil])
([nil nil ((175 . 183)) nil (26116 21490 623830 223000) 0 nil])
([nil nil ((183 . 185)) nil (26116 21490 623829 475000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -183) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("t" 0 1 (fontified t)) . -184) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) 185) nil (26116 21490 623828 250000) 0 nil])
([nil nil ((183 . 185)) nil (26116 21490 623820 426000) 0 nil])
([nil nil ((183 . 190) (#("De" 0 2 (fontified nil)) . 183) (183 . 185) (#("Default" 0 7 (fontified nil)) . -183) (183 . 190) (#("De" 0 2 (face font-lock-type-face fontified t)) . -183) (undo-tree-id326 . -2) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) 185) nil (26116 21490 623819 80000) 0 nil])
([nil nil ((190 . 191)) nil (26116 21490 623812 573000) 0 nil])
([nil nil ((191 . 193)) nil (26116 21490 623811 255000) 0 nil])
([nil nil ((apply yas--snippet-revive 192 201 #s(yas--snippet nil nil #s(yas--exit 201 nil) 95 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 201 nil) 95 nil nil nil nil)) (192 . 201) (#("default()$0" 0 11 (fontified nil)) . 192) (192 . 203) (#("d" 0 1 (fontified nil)) . 192) (192 . 193) (#("default() (as Default)" 0 22 (fontified nil)) . -192) (192 . 214) (#("d" 0 1 (fontified t)) . -192) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) 193) nil (26116 21490 623806 656000) 0 nil])
([nil nil ((209 . 213) (#("    " 0 4 (fontified nil)) . 208) (undo-tree-id407 . -4) (207 . 213) (t 26116 21490 632065 63000)) nil (26116 22033 632981 114000) 0 nil])
([nil nil ((213 . 229)) nil (26116 22033 632979 114000) 0 nil])
([nil nil ((230 . 234) (#("        " 0 8 (fontified nil)) . 229) (229 . 237) (#("    " 0 4 (fontified nil)) . 229) (undo-tree-id406 . -4) (228 . 234)) nil (26116 22033 632978 182000) 0 nil])
([nil nil ((229 . 237)) nil (26116 22033 632976 340000) 0 nil])
([nil nil ((225 . 230)) nil (26116 22033 632975 673000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -225) (undo-tree-id401 . -1) (#("m" 0 1 (fontified t)) . -226) (undo-tree-id402 . -1) (#("u" 0 1 (fontified t)) . -227) (undo-tree-id403 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -228) (undo-tree-id404 . -1) (#(" " 0 1 (fontified t)) . -229) (undo-tree-id405 . -1) 230) nil (26116 22033 632974 430000) 0 nil])
([nil nil ((225 . 231)) nil (26116 22033 632969 998000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -228) (undo-tree-id398 . -1) (#("t" 0 1 (fontified t)) . -229) (undo-tree-id399 . -1) (#(" " 0 1 (fontified t)) . -230) (undo-tree-id400 . -1) 231) nil (26116 22033 632968 940000) 0 nil])
([nil nil ((228 . 229)) nil (26116 22033 632965 959000) 0 nil])
([nil nil ((225 . 234) (#("&mut" 0 1 (face rust-ampersand-face fontified nil) 1 4 (fontified nil)) . 225) (undo-tree-id396 . -1) (226 . 229) (#("&mut self" 0 9 (fontified nil)) . -226) (226 . 235) (#("mut" 0 3 (face font-lock-keyword-face fontified t)) . -226) (undo-tree-id397 . -3) 229) nil (26116 22033 632964 948000) 0 nil])
([nil nil ((246 . 247)) nil (26116 22033 632962 131000) 0 nil])
([nil nil ((246 . 250) (#("s" 0 1 (fontified nil)) . 246) (246 . 247) (#("self" 0 4 (fontified nil)) . -246) (246 . 250) (#("s" 0 1 (fontified t)) . -246) (undo-tree-id395 . -1) 247) nil (26116 22033 632960 993000) 0 nil])
([nil nil ((250 . 252)) nil (26116 22033 632958 922000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -251) (undo-tree-id394 . -1) 252) nil (26116 22033 632958 219000) 0 nil])
([nil nil ((251 . 252)) nil (26116 22033 632956 777000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -251) (undo-tree-id393 . -1) 252) nil (26116 22033 632956 69000) 0 nil])
([nil nil ((251 . 254)) nil (26116 22033 632954 566000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -251) (undo-tree-id390 . -1) (#("t" 0 1 (fontified t)) . -252) (undo-tree-id391 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -253) (undo-tree-id392 . -1) 254) nil (26116 22033 632953 549000) 0 nil])
([nil nil ((251 . 252)) nil (26116 22033 632950 457000) 0 nil])
([nil nil ((251 . 255) (#("n" 0 1 (fontified nil)) . 251) (251 . 252) (#("name" 0 4 (fontified nil)) . -251) (251 . 255) (#("n" 0 1 (fontified t)) . -251) (undo-tree-id389 . -1) 252) nil (26116 22033 632949 440000) 0 nil])
([nil nil ((255 . 260)) nil (26116 22033 632947 266000) 0 nil])
([nil nil ((#("::offsets" 0 2 (fontified t) 2 9 (face font-lock-constant-face fontified t)) . -10) 19 (21 . 31) (22 . 41) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 281 284 nil nil nil nil #s(yas--field 2 286 293 nil nil nil nil #s(yas--exit 294 nil))) #s(yas--field 2 286 293 nil nil nil nil #s(yas--exit 294 nil))) #s(yas--exit 294 nil) 96 nil #s(yas--field 1 281 284 nil nil nil nil #s(yas--field 2 286 293 nil nil nil nil #s(yas--exit 294 nil))) nil nil)) (256 . 274) (#("read(${1:pid}, ${2:address})$0" 0 30 (fontified nil)) . 256) (256 . 286) (#("read" 0 4 (fontified nil)) . 256) (256 . 260) (#("read(…) (use crate::memory::Readable)" 0 37 (fontified nil)) . -256) (256 . 293) (#("read" 0 4 (fontified t)) . -256) (undo-tree-id388 . -4) 260) nil (26116 22033 632945 603000) 0 nil])
([nil nil ((apply yas--snippet-revive 276 294 #s(yas--snippet nil (#s(yas--field 1 281 284 nil nil nil nil #s(yas--field 2 286 293 nil nil nil nil #s(yas--exit 294 nil))) #s(yas--field 2 286 293 nil nil nil nil #s(yas--exit 294 nil))) #s(yas--exit 294 nil) 96 nil #s(yas--field 1 281 284 nil nil nil nil #s(yas--field 2 286 293 nil nil nil nil #s(yas--exit 294 nil))) nil nil))) nil (26116 22033 632941 824000) 0 nil])
([nil nil ((#("pid, " 0 5 (fontified t)) . -281) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -4) (undo-tree-id369 . -5) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -5) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5) (undo-tree-id387 . -5) 286) nil (26116 22033 632937 603000) 0 nil])
([nil nil ((#("address" 0 7 (fontified t)) . -281) (undo-tree-id455 . -7) (undo-tree-id456 . -7) (undo-tree-id457 . -7) (undo-tree-id458 . -7) (undo-tree-id459 . -7) (undo-tree-id460 . -7) 288 (t 26116 22033 675431 146000)) nil (26116 22053 181340 805000) 0 nil])
([nil nil ((281 . 284)) nil (26116 22053 181335 917000) 0 nil])
([nil nil ((284 . 286)) nil (26116 22053 181335 190000) 0 nil])
([nil nil ((281 . 291) (#("OFF_R" 0 5 (fontified nil)) . 281) (281 . 286) (#("OFF_REGION" 0 10 (fontified nil)) . -281) (281 . 291) (#("OFF_R" 0 5 (face font-lock-type-face fontified t)) . -281) (undo-tree-id437 . -5) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -5) (undo-tree-id452 . -5) (undo-tree-id453 . -5) (undo-tree-id454 . -5) 286) nil (26116 22053 181333 455000) 0 nil])
([nil nil ((291 . 298)) nil (26116 22053 181319 907000) 0 nil])
([nil nil ((292 . 301) (#("OFF_LE" 0 6 (fontified nil)) . 292) (292 . 298) (#("OFF_LEVEL" 0 9 (fontified nil)) . -292) (292 . 301) (#("OFF_LE" 0 6 (face font-lock-type-face fontified t)) . -292) (undo-tree-id408 . -3) (undo-tree-id409 . -6) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -5) (undo-tree-id427 . -5) (undo-tree-id428 . -5) (undo-tree-id429 . -5) (undo-tree-id430 . -5) (undo-tree-id431 . -5) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) 298) nil (26116 22053 181316 30000) 0 nil])
([nil nil ((302 . 303)) nil (26116 22053 181284 601000) 0 nil])
([nil nil ((#("offsets::*, " 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 10 (fontified t) 10 12 (fontified t)) . -13) (41 . 53) (291 . 292) (292 . 293) (t 26116 22053 222099 12000)) nil (26116 22115 616371 837000) 0 nil])
([nil nil ((305 . 314)) nil (26116 22115 616370 738000) 0 nil])
([nil nil ((314 . 316)) nil (26116 22115 616370 145000) 0 nil])
([nil nil ((314 . 318) (#("se" 0 2 (fontified nil)) . 314) (314 . 316) (#("self" 0 4 (fontified nil)) . -314) (314 . 318) (#("se" 0 2 (fontified t)) . -314) (undo-tree-id611 . -2) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) 316) nil (26116 22115 616369 4000) 0 nil])
([nil nil ((318 . 321)) nil (26116 22115 616363 28000) 0 nil])
([nil nil ((319 . 330) (#("is" 0 2 (fontified nil)) . 319) (319 . 321) (#("is_playable" 0 11 (fontified nil)) . -319) (319 . 330) (#("is" 0 2 (fontified t)) . -319) (undo-tree-id604 . -2) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) 321) nil (26116 22115 616361 881000) 0 nil])
([nil nil ((330 . 336)) nil (26116 22115 616356 442000) 0 nil])
([nil nil ((334 . 343) (#("na" 0 2 (fontified nil)) . 334) (334 . 336) (#("self.name" 0 9 (fontified nil)) . -334) (334 . 343) (#("na" 0 2 (fontified t)) . -334) (undo-tree-id596 . -2) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) 336) nil (26116 22115 616355 143000) 0 nil])
([nil nil ((343 . 346)) nil (26116 22115 616349 232000) 0 nil])
([nil nil ((apply yas--snippet-revive 344 354 #s(yas--snippet nil nil #s(yas--exit 354 nil) 108 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 354 nil) 108 nil nil nil nil)) (344 . 354) (#("is_empty()$0" 0 12 (fontified nil)) . 344) (344 . 356) (#("is" 0 2 (fontified nil)) . 344) (344 . 346) (#("is_empty()" 0 10 (fontified nil)) . -344) (344 . 354) (#("is" 0 2 (fontified t)) . -344) (undo-tree-id588 . -2) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) 346) nil (26116 22115 616347 795000) 0 nil])
([nil nil ((354 . 356)) nil (26116 22115 616341 57000) 0 nil])
([nil nil ((356 . 360)) nil (26116 22115 616340 520000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -357) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#("n" 0 1 (fontified t)) . -358) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (#("a" 0 1 (fontified t)) . -359) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) 360) nil (26116 22115 616338 811000) 0 nil])
([nil nil ((357 . 360)) nil (26116 22115 616321 576000) 0 nil])
([nil nil ((358 . 362) (#("se" 0 2 (fontified nil)) . 358) (358 . 360) (#("self" 0 4 (fontified nil)) . -358) (358 . 362) (#("se" 0 2 (fontified t)) . -358) (undo-tree-id553 . -2) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) 360) nil (26116 22115 616320 327000) 0 nil])
([nil nil ((362 . 364)) nil (26116 22115 616313 792000) 0 nil])
([nil nil ((363 . 367) (#("n" 0 1 (fontified nil)) . 363) (363 . 364) (#("name" 0 4 (fontified nil)) . -363) (363 . 367) (#("n" 0 1 (fontified t)) . -363) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 364) nil (26116 22115 616312 625000) 0 nil])
([nil nil ((358 . 359)) nil (26116 22115 616307 125000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . -358) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) 359) nil (26116 22115 616306 83000) 0 nil])
([nil nil ((367 . 369)) nil (26116 22115 616301 164000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -367) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("!" 0 1 (fontified t)) . -368) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) 369) nil (26116 22115 616299 573000) 0 nil])
([nil nil ((367 . 368)) nil (26116 22115 616284 299000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -367) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) 368) nil (26116 22115 616283 530000) 0 nil])
([nil nil ((367 . 368)) nil (26116 22115 616280 995000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -367) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) 368) nil (26116 22115 616279 726000) 0 nil])
([nil nil ((367 . 369)) nil (26116 22115 616275 145000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -368) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) 369) nil (26116 22115 616274 314000) 0 nil])
([nil nil ((368 . 370)) nil (26116 22115 616270 486000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 371 393 nil nil nil t #s(yas--exit 394 nil))) #s(yas--exit 394 nil) 109 nil #s(yas--field 1 371 393 nil nil nil t #s(yas--exit 394 nil)) nil nil)) (368 . 377) (#("ne(${1:other})$0" 0 16 (fontified nil)) . 368) (368 . 384) (#("ne" 0 2 (fontified nil)) . 368) (368 . 370) (#("ne(…) (as PartialEq)" 0 20 (fontified nil)) . -368) (368 . 388) (#("ne" 0 2 (fontified t)) . -368) (undo-tree-id494 . -2) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) 370) nil (26116 22115 616268 967000) 0 nil])
([nil nil ((372 . 373) (#("other" 0 5 (fontified nil)) . 372) (undo-tree-id493 . -5) (371 . 372)) nil (26116 22115 616261 505000) 0 nil])
([nil nil ((372 . 380)) nil (26116 22115 616259 856000) 0 nil])
([nil nil ((381 . 382)) nil (26116 22115 616259 254000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -381) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) 382) nil (26116 22115 616258 60000) 0 nil])
([nil nil ((381 . 385)) nil (26116 22115 616249 321000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -384) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 385) nil (26116 22115 616248 307000) 0 nil])
([nil nil ((apply yas--snippet-revive 382 393 #s(yas--snippet nil nil #s(yas--exit 393 nil) 110 nil nil #s(yas--field 1 371 393 nil nil nil t #s(yas--exit 394 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 393 nil) 110 nil nil #s(yas--field 1 371 393 nil nil nil t #s(yas--exit 394 nil)) nil)) (382 . 393) (#("to_string()$0" 0 13 (fontified nil)) . 382) (undo-tree-id461 . -13) (382 . 395) (#("to" 0 2 (fontified nil)) . 382) (undo-tree-id462 . -2) (382 . 384) (#("to_string() (as ToString)" 0 25 (fontified nil)) . -382) (undo-tree-id463 . -25) (382 . 407) (#("to" 0 2 (fontified t)) . -382) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) 384) nil (26116 22115 616243 212000) 0 nil])
([nil nil ((apply yas--snippet-revive 368 394 #s(yas--snippet nil (#s(yas--field 1 371 393 nil nil nil t #s(yas--exit 394 nil))) #s(yas--exit 394 nil) 109 nil #s(yas--field 1 371 393 nil nil nil t #s(yas--exit 394 nil)) nil nil))) nil (26116 22115 616224 680000) 0 nil])
([nil nil ((394 . 395)) nil (26116 22115 616220 660000) 0 nil])
([nil nil ((#("string()" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t) 7 8 (face (rainbow-delimiters-depth-4-face) fontified t)) . -385) (undo-tree-id638 . -8) (undo-tree-id639 . -8) 393 (t 26116 22115 628769 479000)) nil (26116 22122 973855 155000) 0 nil])
([nil nil ((#("to_" 0 3 (fontified t)) . -382) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) 385) nil (26116 22122 973852 105000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -381) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 382) nil (26116 22122 973844 790000) 0 nil])
([nil nil ((383 . 392) (t 26116 22122 985436 594000)) nil (26116 22151 364115 93000) 0 nil])
([nil nil ((392 . 394)) nil (26116 22151 364114 172000) 0 nil])
([nil nil ((392 . 396) (#("se" 0 2 (fontified nil)) . 392) (392 . 394) (#("self" 0 4 (fontified nil)) . -392) (392 . 396) (#("se" 0 2 (fontified t)) . -392) (undo-tree-id665 . -2) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -2) (undo-tree-id669 . -2) 394) nil (26116 22151 364112 838000) 0 nil])
([nil nil ((396 . 399)) nil (26116 22151 364108 515000) 0 nil])
([nil nil ((397 . 412) (#("is" 0 2 (fontified nil)) . 397) (397 . 399) (#("is_firing_range" 0 15 (fontified nil)) . -397) (397 . 412) (#("is" 0 2 (fontified t)) . -397) (undo-tree-id657 . -2) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) 399) nil (26116 22151 364106 819000) 0 nil])
([nil nil ((412 . 415)) nil (26116 22151 364100 352000) 0 nil])
([nil nil ((415 . 416)) nil (26116 22151 364099 658000) 0 nil])
([nil nil ((415 . 419) (#("s" 0 1 (fontified nil)) . 415) (415 . 416) (#("self" 0 4 (fontified nil)) . -415) (415 . 419) (#("s" 0 1 (fontified t)) . -415) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) 416) nil (26116 22151 364098 265000) 0 nil])
([nil nil ((419 . 420)) nil (26116 22151 364092 250000) 0 nil])
([nil nil ((420 . 424) (#("name" 0 4 (fontified nil)) . -420) (420 . 424)) nil (26116 22151 364091 293000) 0 nil])
([nil nil ((424 . 427)) nil (26116 22151 364090 241000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 428 459 nil nil nil t #s(yas--exit 460 nil))) #s(yas--exit 460 nil) 111 nil #s(yas--field 1 428 459 nil nil nil t #s(yas--exit 460 nil)) nil nil)) (425 . 434) (#("eq(${1:other})$0" 0 16 (fontified nil)) . 425) (425 . 441) (#("eq" 0 2 (fontified nil)) . 425) (425 . 427) (#("eq(…) (as PartialEq)" 0 20 (fontified nil)) . -425) (425 . 445) (#("eq" 0 2 (fontified t)) . -425) (undo-tree-id641 . -2) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) 427) nil (26116 22151 364088 498000) 0 nil])
([nil nil ((429 . 430) (#("other" 0 5 (fontified nil)) . 429) (undo-tree-id640 . -5) (428 . 429)) nil (26116 22151 364078 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 457 . 458) (nil fontified nil 429 . 458) (429 . 458)) nil (26116 22151 364070 527000) 0 nil])
([nil nil ((apply yas--snippet-revive 425 460 #s(yas--snippet nil (#s(yas--field 1 428 459 nil nil nil t #s(yas--exit 460 nil))) #s(yas--exit 460 nil) 111 nil #s(yas--field 1 428 459 nil nil nil t #s(yas--exit 460 nil)) nil nil))) nil (26116 22151 364068 591000) 0 nil])
([nil current ((460 . 461)) nil (26116 22151 364064 89000) 0 nil])
nil
