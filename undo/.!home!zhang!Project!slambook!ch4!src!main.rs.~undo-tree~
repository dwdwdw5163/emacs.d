(undo-tree-save-format-version . 1)
"1c0b4cb3e98eb733a2a76e4e70b202f80c237f82"
[nil nil nil nil (26039 41330 16025 534000) 0 nil]
([nil nil ((1 . 3) (t 26039 41322 872937 869000)) nil (26039 41725 481169 869000) 0 nil])
([nil nil ((1 . 4)) nil (26039 41725 481168 946000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1) (undo-tree-id143 . -1) (#("s" 0 1 (fontified t)) . -2) (undo-tree-id144 . -1) (#("e" 0 1 (fontified t)) . -3) (undo-tree-id145 . -1) 4) nil (26039 41725 481167 782000) 0 nil])
([nil nil ((1 . 6)) nil (26039 41725 480700 274000) 0 nil])
([nil nil ((5 . 13) (#("n" 0 1 (fontified nil)) . 5) (5 . 6) (#("nalgebra" 0 8 (fontified nil)) . -5) (5 . 13) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id142 . -1) 6) nil (26039 41725 480699 245000) 0 nil])
([nil nil ((13 . 19)) nil (26039 41725 480697 223000) 0 nil])
([nil nil ((#("Rota" 0 4 (face font-lock-type-face fontified t)) . -15) (undo-tree-id141 . -4) 19) nil (26039 41725 480696 516000) 0 nil])
([nil nil ((#("nalgebra::" 0 8 (face font-lock-constant-face fontified t) 8 10 (fontified t)) . -5) (undo-tree-id140 . -10) 15) nil (26039 41725 480694 934000) 0 nil])
([nil nil ((5 . 6)) nil (26039 41725 480693 429000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id139 . -1) 6) nil (26039 41725 480692 619000) 0 nil])
([nil nil ((5 . 7)) nil (26039 41725 480691 14000) 0 nil])
([nil nil ((5 . 13) (#("na" 0 2 (fontified nil)) . 5) (5 . 7) (#("nalgebra" 0 8 (fontified nil)) . -5) (5 . 13) (#("na" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id138 . -2) 7) nil (26039 41725 480690 23000) 0 nil])
([nil nil ((13 . 17)) nil (26039 41725 480687 637000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -16) (undo-tree-id137 . -1) 17) nil (26039 41725 480686 871000) 0 nil])
([nil nil ((16 . 19)) nil (26039 41725 480685 483000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -15) (undo-tree-id133 . -1) (#("r" 0 1 (fontified t)) . -16) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t)) . -17) (undo-tree-id135 . -1) (#("l" 0 1 (fontified t)) . -18) (undo-tree-id136 . -1) 19) nil (26039 41725 480684 466000) 0 nil])
([nil nil ((#("use nalgebra::" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 12 (face font-lock-constant-face fontified t) 12 14 (fontified t)) . 1)) nil (26039 41725 480680 803000) 0 nil])
([nil nil ((1 . 8)) nil (26039 41725 480680 43000) 0 nil])
([nil nil ((5 . 9) (#("yak" 0 3 (fontified nil)) . 5) (5 . 8) (#("yakf" 0 4 (fontified nil)) . -5) (5 . 9) (#("yak" 0 3 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id132 . -3) 8) nil (26039 41725 480679 112000) 0 nil])
([nil nil ((9 . 13)) nil (26039 41725 480676 995000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11) (undo-tree-id130 . -1) (#("e" 0 1 (fontified t)) . -12) (undo-tree-id131 . -1) 13) nil (26039 41725 480676 52000) 0 nil])
([nil nil ((11 . 14)) nil (26039 41725 480673 780000) 0 nil])
([nil nil ((11 . 14) (#("lie" 0 3 (fontified nil)) . 11) (11 . 14) (#("lie" 0 3 (fontified t)) . -11) (undo-tree-id129 . -3) 14) nil (26039 41725 480672 877000) 0 nil])
([nil nil ((14 . 17)) nil (26039 41725 480670 979000) 0 nil])
([nil nil ((16 . 19) (#("S" 0 1 (fontified nil)) . 16) (16 . 17) (#("so3" 0 3 (fontified nil)) . -16) (16 . 19) (#("S" 0 1 (face font-lock-type-face fontified t)) . -16) (undo-tree-id128 . -1) 17) nil (26039 41725 480669 919000) 0 nil])
([nil nil ((20 . 21) (16 . 16) (16 . 17)) nil (26039 41725 480667 880000) 0 nil])
([nil nil ((20 . 22)) nil (26039 41725 480667 50000) 0 nil])
([nil nil ((21 . 24) (#("s" 0 1 (fontified nil)) . 21) (21 . 22) (#("se3" 0 3 (fontified nil)) . -21) (21 . 24) (#("s" 0 1 (fontified t)) . -21) (undo-tree-id127 . -1) 22) nil (26039 41725 480665 956000) 0 nil])
([nil nil ((25 . 26)) nil (26039 41725 480663 560000) 0 nil])
([nil nil ((41 . 45) (#("    " 0 4 (fontified nil)) . 40) (undo-tree-id126 . -4) (39 . 45)) nil (26039 41725 480662 659000) 0 nil])
([nil nil ((40 . 44)) nil (26039 41725 480661 52000) 0 nil])
([nil nil ((44 . 46)) nil (26039 41725 480660 461000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -44) (undo-tree-id124 . -1) (#("E" 0 1 (face font-lock-type-face fontified t)) . -45) (undo-tree-id125 . -1) 46) nil (26039 41725 480659 577000) 0 nil])
([nil nil ((#("use yakf::lie::{so3,se3};" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-constant-face fontified t) 8 10 (fontified t) 10 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 20 (fontified t) 20 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 25 (fontified t)) . 1)) nil (26039 41725 480657 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (26039 41725 480656 293000) 0 nil])
([nil nil ((1 . 2)) nil (26039 41725 480655 694000) 0 nil])
([nil nil ((1 . 4)) nil (26039 41725 480655 76000) 0 nil])
([nil nil ((4 . 6)) nil (26039 41725 480654 380000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id123 . -1) 6) nil (26039 41725 480653 623000) 0 nil])
([nil nil ((5 . 7)) nil (26039 41725 480652 223000) 0 nil])
([nil nil ((5 . 9) (#("ya" 0 2 (fontified nil)) . 5) (5 . 7) (#("yakf" 0 4 (fontified nil)) . -5) (5 . 9) (#("ya" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id122 . -2) 7) nil (26039 41725 480651 264000) 0 nil])
([nil nil ((9 . 12)) nil (26039 41725 480648 509000) 0 nil])
([nil nil ((11 . 14) (#("l" 0 1 (fontified nil)) . 11) (11 . 12) (#("lie" 0 3 (fontified nil)) . -11) (11 . 14) (#("l" 0 1 (fontified t)) . -11) (undo-tree-id121 . -1) 12) nil (26039 41725 480647 487000) 0 nil])
([nil nil ((14 . 17)) nil (26039 41725 480645 484000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17) (undo-tree-id120 . -1) 18) nil (26039 41725 480644 756000) 0 nil])
([nil nil ((17 . 18)) nil (26039 41725 480643 331000) 0 nil])
([nil nil ((16 . 19) (#("so" 0 2 (fontified nil)) . 16) (16 . 18) (#("so3" 0 3 (fontified nil)) . -16) (16 . 19) (#("so" 0 2 (fontified t)) . -16) (undo-tree-id119 . -2) 18) nil (26039 41725 480642 226000) 0 nil])
([nil nil ((19 . 22)) nil (26039 41725 480639 881000) 0 nil])
([nil nil ((21 . 24) (#("S" 0 1 (fontified nil)) . 21) (21 . 22) (#("SO3" 0 3 (fontified nil)) . -21) (21 . 24) (#("S" 0 1 (face font-lock-type-face fontified t)) . -21) (undo-tree-id118 . -1) 22) nil (26039 41725 480638 852000) 0 nil])
([nil nil ((24 . 29)) nil (26039 41725 480636 550000) 0 nil])
([nil nil ((24 . 25)) nil (26039 41725 480635 881000) 0 nil])
([nil nil ((47 . 51)) nil (26039 41725 480635 235000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -48) (undo-tree-id115 . -1) (#("e" 0 1 (fontified t)) . -49) (undo-tree-id116 . -1) (#("t" 0 1 (fontified t)) . -50) (undo-tree-id117 . -1) 51) nil (26039 41725 480634 131000) 0 nil])
([nil nil ((48 . 51)) nil (26039 41725 480630 766000) 0 nil])
([nil nil ((51 . 59)) nil (26039 41725 480630 208000) 0 nil])
([nil nil ((57 . 60) (#("SO" 0 2 (fontified nil)) . 57) (57 . 59) (#("SO3" 0 3 (fontified nil)) . -57) (57 . 60) (#("SO" 0 2 (face font-lock-type-face fontified t)) . -57) (undo-tree-id114 . -2) 59) nil (26039 41725 480629 61000) 0 nil])
([nil nil ((60 . 62)) nil (26039 41725 480626 885000) 0 nil])
([nil nil ((62 . 63)) nil (26039 41725 480626 231000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 83 110 nil nil nil t #s(yas--exit 111 nil))) #s(yas--exit 111 nil) 0 nil #s(yas--field 1 83 110 nil nil nil t #s(yas--exit 111 nil)) nil nil)) (62 . 75) (#("from_vec(${1:vec})$0" 0 20 (fontified nil)) . 62) (62 . 82) (#("f" 0 1 (fontified nil)) . 62) (62 . 63) (#("from_vec(â€¦)" 0 11 (fontified nil)) . -62) (62 . 73) (#("f" 0 1 (fontified t)) . -62) (undo-tree-id113 . -1) 63) nil (26039 41725 480625 133000) 0 nil])
([nil nil ((72 . 74) (#("vec" 0 3 (fontified nil)) . 72) (71 . 72)) nil (26039 41725 480622 390000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -71) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("e" 0 1 (fontified t)) . -72) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("c" 0 1 (fontified t)) . -73) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 74) nil (26039 41725 480620 958000) 0 nil])
([nil nil ((71 . 75)) nil (26039 41725 480615 965000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-type-face fontified t)) . -74) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 75) nil (26039 41725 480615 244000) 0 nil])
([nil nil ((74 . 75)) nil (26039 41725 480613 267000) 0 nil])
([nil nil ((11 . 12) (24 . 35) (71 . 71) (71 . 75) (#("Vec6" 0 4 (fontified nil)) . 71) (71 . 75) (#("Vec6 (use yakf::kf::Vec6)" 0 25 (fontified nil)) . -71) (71 . 96) (#("Vec6" 0 4 (face font-lock-type-face fontified t)) . -71) (undo-tree-id103 . -4) (undo-tree-id104 . -4) 75) nil (26039 41725 480612 151000) 0 nil])
([nil nil ((87 . 92)) nil (26039 41725 480609 174000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 93 94 nil nil nil nil #s(yas--field 2 96 97 nil nil nil nil #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))))))) #s(yas--field 2 96 97 nil nil nil nil #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil)))))) #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))))) #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil)))) #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))) #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))) #s(yas--exit 110 nil) 1 nil #s(yas--field 1 93 94 nil nil nil nil #s(yas--field 2 96 97 nil nil nil nil #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))))))) #s(yas--field 1 83 110 nil nil nil t #s(yas--exit 111 nil)) nil)) (89 . 110) (#("new(${1:x}, ${2:y}, ${3:z}, ${4:w}, ${5:a}, ${6:b})$0" 0 53 (fontified nil)) . 89) (89 . 142) (#("new" 0 3 (fontified nil)) . 89) (89 . 92) (#("new(â€¦)" 0 6 (fontified nil)) . -89) (89 . 95) (#("new" 0 3 (fontified t)) . -89) (undo-tree-id101 . -3) (undo-tree-id102 . -3) 92) nil (26039 41725 480607 902000) 0 nil])
([nil nil ((apply yas--snippet-revive 74 111 #s(yas--snippet nil (#s(yas--field 1 83 110 nil nil nil t #s(yas--exit 111 nil))) #s(yas--exit 111 nil) 0 nil #s(yas--field 1 83 110 nil nil nil t #s(yas--exit 111 nil)) nil nil)) (apply yas--snippet-revive 89 110 #s(yas--snippet nil (#s(yas--field 1 93 94 nil nil nil nil #s(yas--field 2 96 97 nil nil nil nil #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))))))) #s(yas--field 2 96 97 nil nil nil nil #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil)))))) #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))))) #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil)))) #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))) #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))) #s(yas--exit 110 nil) 1 nil #s(yas--field 1 93 94 nil nil nil nil #s(yas--field 2 96 97 nil nil nil nil #s(yas--field 3 99 100 nil nil nil nil #s(yas--field 4 102 103 nil nil nil nil #s(yas--field 5 105 106 nil nil nil nil #s(yas--field 6 108 109 nil nil nil nil #s(yas--exit 110 nil))))))) #s(yas--field 1 83 110 nil nil nil t #s(yas--exit 111 nil)) nil))) nil (26039 41725 480604 524000) 0 nil])
([nil nil ((#("b)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-3-face) fontified t)) . -108) (undo-tree-id100 . -2) 110) nil (26039 41725 480603 478000) 0 nil])
([nil nil ((#("a, " 0 3 (fontified t)) . -105) (undo-tree-id99 . -3) 108) nil (26039 41725 480602 12000) 0 nil])
([nil nil ((#("w, " 0 3 (fontified t)) . -102) (undo-tree-id98 . -3) 105) nil (26039 41725 480600 536000) 0 nil])
([nil nil ((#("z, " 0 3 (fontified t)) . -99) (undo-tree-id97 . -3) 102) nil (26039 41725 480598 450000) 0 nil])
([nil nil ((#("y, " 0 3 (fontified t)) . -96) (undo-tree-id96 . -3) 99) nil (26039 41725 480523 792000) 0 nil])
([nil nil ((#("x, " 0 3 (fontified t)) . -93) (undo-tree-id95 . -3) 96) nil (26039 41725 480522 163000) 0 nil])
([nil nil ((#("new(" 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t)) . -89) (undo-tree-id94 . -4) 93) nil (26039 41725 480520 468000) 0 nil])
([nil nil ((#("Vec6::" 0 4 (face font-lock-type-face fontified t) 4 6 (fontified t)) . -83) (undo-tree-id93 . -6) 89) nil (26039 41725 480518 890000) 0 nil])
([nil nil ((83 . 87)) nil (26039 41725 480517 566000) 0 nil])
([nil nil ((31 . 32) (35 . 42) (83 . 83) (83 . 87) (#("Vec3" 0 4 (fontified nil)) . 83) (83 . 87) (#("Vec3 (use yakf::kf::Vec3)" 0 25 (fontified nil)) . -83) (83 . 108) (#("Vec3" 0 4 (face font-lock-type-face fontified t)) . -83) (undo-tree-id91 . -4) (undo-tree-id92 . -4) 87) nil (26039 41725 480516 314000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . -92) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -93) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("3" 0 1 (face font-lock-type-face fontified t)) . -94) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 95) nil (26039 41725 480512 586000) 0 nil])
([nil nil ((92 . 95)) nil (26039 41725 480505 952000) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -92) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -93) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -94) (undo-tree-id81 . -1) 95) nil (26039 41725 480504 999000) 0 nil])
([nil nil ((92 . 94)) nil (26039 41725 480500 860000) 0 nil])
([nil nil ((#("Vec3}" 0 4 (face font-lock-type-face fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t)) . -38) (undo-tree-id73 . -5) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) 43) nil (26039 41725 480499 750000) 0 nil])
([nil nil ((#("Vec6, " 0 4 (face font-lock-type-face fontified t) 4 6 (fontified t)) . -32) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) 38) nil (26039 41725 480496 212000) 0 nil])
([nil nil ((#("kf::{" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t)) . -27) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) 32) nil (26039 41725 480492 468000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -25) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -26) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 27) nil (26039 41725 480486 769000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -25) (undo-tree-id56 . -1) 26) nil (26039 41725 480480 606000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11) (undo-tree-id55 . -1) 12) nil (26039 41725 480479 159000) 0 nil])
([nil nil ((74 . 75)) nil (26039 41725 480477 748000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-type-face fontified t)) . -74) (undo-tree-id54 . -1) 75) nil (26039 41725 480477 10000) 0 nil])
([nil nil ((74 . 75)) nil (26039 41725 480475 661000) 0 nil])
([nil nil ((#("::lie" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t)) . -9) 14 (16 . 19) (#("so3" 0 3 (face font-lock-constant-face fontified t)) . -16) 19 (21 . 27) (24 . 31) (71 . 71) (71 . 75) (#("Vec3" 0 4 (fontified nil)) . 71) (71 . 75) (#("Vec3 (use yakf::lie::so3::Vec3)" 0 31 (fontified nil)) . -71) (71 . 102) (#("Vec3" 0 4 (face font-lock-type-face fontified t)) . -71) (undo-tree-id51 . -3) (undo-tree-id52 . -4) (undo-tree-id53 . -1) 75) nil (26039 41725 480474 132000) 0 nil])
([nil nil ((83 . 88)) nil (26039 41725 480469 582000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 89 92 nil nil nil t #s(yas--field 2 94 95 nil nil nil nil #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil)))) #s(yas--field 2 94 95 nil nil nil nil #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil))) #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil))) #s(yas--exit 99 nil) 2 nil #s(yas--field 1 89 92 nil nil nil t #s(yas--field 2 94 95 nil nil nil nil #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil)))) nil nil)) (85 . 97) (#("new(${1:x}, ${2:y}, ${3:z})$0" 0 29 (fontified nil)) . 85) (85 . 114) (#("new" 0 3 (fontified nil)) . 85) (85 . 88) (#("new(â€¦)" 0 6 (fontified nil)) . -85) (85 . 91) (#("new" 0 3 (fontified t)) . -85) (undo-tree-id49 . -3) (undo-tree-id50 . -3) 88) nil (26039 41725 480468 91000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -89) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 90) nil (26039 41725 480464 646000) 0 nil])
([nil nil ((89 . 92)) nil (26039 41725 480462 726000) 0 nil])
([nil nil ((apply yas--snippet-revive 85 99 #s(yas--snippet nil (#s(yas--field 1 89 92 nil nil nil t #s(yas--field 2 94 95 nil nil nil nil #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil)))) #s(yas--field 2 94 95 nil nil nil nil #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil))) #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil))) #s(yas--exit 99 nil) 2 nil #s(yas--field 1 89 92 nil nil nil t #s(yas--field 2 94 95 nil nil nil nil #s(yas--field 3 97 98 nil nil nil nil #s(yas--exit 99 nil)))) nil nil))) nil (26039 41725 480461 992000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -94) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 95) nil (26039 41725 480461 158000) 0 nil])
([nil nil ((94 . 97)) nil (26039 41725 480459 48000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -99) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 100) nil (26039 41725 480458 301000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -34) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (38 . 39)) nil (26039 41725 480455 404000) 0 nil])
([nil nil ((34 . 37)) nil (26039 41725 480450 431000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -35) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("s" 0 1 (fontified t)) . -36) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 37) nil (26039 41725 480449 185000) 0 nil])
([nil nil ((35 . 39)) nil (26039 41725 480442 271000) 0 nil])
([nil nil ((38 . 42) (#("c" 0 1 (fontified nil)) . 38) (38 . 39) (#("core" 0 4 (fontified nil)) . -38) (38 . 42) (#("c" 0 1 (face font-lock-constant-face fontified t)) . -38) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 39) nil (26039 41725 480441 57000) 0 nil])
([nil nil ((42 . 45)) nil (26039 41725 480436 560000) 0 nil])
([nil nil ((44 . 47) (#("f" 0 1 (fontified nil)) . 44) (44 . 45) (#("f64" 0 3 (fontified nil)) . -44) (44 . 47) (#("f" 0 1 (fontified t)) . -44) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 45) nil (26039 41725 480435 329000) 0 nil])
([nil nil ((47 . 52)) nil (26039 41725 480429 96000) 0 nil])
([nil nil ((49 . 55) (#("con" 0 3 (fontified nil)) . 49) (49 . 52) (#("consts" 0 6 (fontified nil)) . -49) (49 . 55) (#("con" 0 3 (fontified t)) . -49) (undo-tree-id10 . -3) (undo-tree-id11 . -1) (undo-tree-id12 . -2) (undo-tree-id13 . -3) 52) nil (26039 41725 480427 821000) 0 nil])
([nil nil ((55 . 58)) nil (26039 41725 480423 647000) 0 nil])
([nil nil ((57 . 59) (#("P" 0 1 (fontified nil)) . 57) (57 . 58) (#("PI" 0 2 (fontified nil)) . -57) (57 . 59) (#("P" 0 1 (face font-lock-type-face fontified t)) . -57) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 58) nil (26039 41725 480422 330000) 0 nil])
([nil nil ((59 . 60)) nil (26039 41725 480417 860000) 0 nil])
([nil nil ((122 . 123)) nil (26039 41725 480417 205000) 0 nil])
([nil nil ((122 . 124) (#("P" 0 1 (fontified nil)) . 122) (122 . 123) (#("PI" 0 2 (fontified nil)) . -122) (122 . 124) (#("P" 0 1 (face font-lock-type-face fontified t)) . -122) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 123) nil (26039 41725 480414 901000) 0 nil])
([nil nil ((124 . 128)) nil (26039 41725 480390 50000) 0 nil])
([nil nil ((130 . 131)) nil (26039 41725 480386 51000) 0 nil])
([nil nil ((131 . 136) (t 26039 41725 516247 726000)) nil (26039 41758 364488 13000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 136) (undo-tree-id174 . -1)) nil (26039 41758 364487 23000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 136) (undo-tree-id173 . -5)) nil (26039 41758 364485 305000) 0 nil])
([nil nil ((#("    println!(\"Hello, world!\");" 0 4 (fontified t) 4 12 (face rust-builtin-formatting-macro fontified t) 12 13 (face (rainbow-delimiters-depth-2-face) fontified t) 13 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-2-face) fontified t) 29 30 (fontified t)) . 136) (undo-tree-id172 . -30)) nil (26039 41758 364483 572000) 0 nil])
([nil nil ((136 . 140)) nil (26039 41758 364481 944000) 0 nil])
([nil nil ((apply yas--snippet-revive 136 146 #s(yas--snippet nil nil #s(yas--exit 145 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 145 nil) 3 nil nil nil nil)) (136 . 146) (#("println!($0)" 0 12 (fontified nil)) . 136) (136 . 148) (#("prin" 0 4 (fontified nil)) . 136) (136 . 140) (#("println!(â€¦)" 0 11 (fontified nil)) . -136) (136 . 147) (#("prin" 0 4 (fontified t)) . -136) (undo-tree-id160 . -4) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) 140) nil (26039 41758 364480 408000) 0 nil])
([nil nil ((145 . 147)) nil (26039 41758 364469 57000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -145) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#(":" 0 1 (fontified t)) . -146) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 147) nil (26039 41758 364467 825000) 0 nil])
([nil nil ((145 . 147)) nil (26039 41758 364459 488000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 146) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 147) nil (26039 41758 364457 784000) 0 nil])
([nil nil ((146 . 148)) nil (26039 41758 364674 414000) 0 nil])
([nil nil ((148 . 149)) nil (26039 41766 767059 772000) 0 nil] [nil nil ((148 . 149)) ((#("
" 0 1 (face font-lock-string-face fontified t)) . 148) (undo-tree-id175 . -1) (undo-tree-id176 . -1)) (26039 41758 364442 186000) 0 nil])
([nil nil ((147 . 149)) nil (26039 41766 767058 989000) 0 nil])
nil
([nil nil ((151 . 154)) nil (26039 41766 767058 223000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -153) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 154) nil (26039 41766 767057 58000) 0 nil])
([nil nil ((153 . 155)) nil (26039 41766 767050 83000) 0 nil])
([nil nil ((153 . 156) (#("so" 0 2 (fontified nil)) . 153) (153 . 155) (#("so3" 0 3 (fontified nil)) . -153) (153 . 156) (#("so" 0 2 (fontified t)) . -153) (undo-tree-id177 . -2) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -2) (undo-tree-id181 . -2) 155) nil (26039 41766 767047 369000) 0 nil])
([nil nil ((157 . 158)) nil (26039 41766 767031 765000) 0 nil])
([nil nil ((#("use yakf::lie::so3::{SO3, Vec3};" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-constant-face fontified t) 8 10 (fontified t) 10 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 18 (face font-lock-constant-face fontified t) 18 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 24 (face font-lock-type-face fontified t) 24 26 (fontified t) 26 30 (face font-lock-type-face fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t)) . 1) (undo-tree-id203 . -24) (undo-tree-id204 . -26) (undo-tree-id205 . -26) (undo-tree-id206 . -26) (undo-tree-id207 . -26) (undo-tree-id208 . -26) (undo-tree-id209 . -26) (undo-tree-id210 . -32) (t 26039 41766 779578 659000)) nil (26039 42043 487672 375000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id202 . -1)) nil (26039 42043 487665 479000) 0 nil])
([nil nil ((#("    let so3 = SO3::from_vec(Vec3::new(0.0, 0.0, PI/2.0));" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 11 (face font-lock-variable-name-face fontified t) 11 14 (fontified t) 14 17 (face font-lock-type-face fontified t) 17 19 (fontified t) 19 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t) 28 32 (face font-lock-type-face fontified t) 32 34 (fontified t) 34 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-3-face) fontified t) 38 41 (fontified t) 41 48 (fontified t) 48 50 (face font-lock-type-face fontified t) 50 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-3-face) fontified t) 55 56 (face (rainbow-delimiters-depth-2-face) fontified t) 56 57 (fontified t)) . 41) (undo-tree-id191 . -21) (undo-tree-id192 . -28) (undo-tree-id193 . -28) (undo-tree-id194 . -21) (undo-tree-id195 . -26) (undo-tree-id196 . -26) (undo-tree-id197 . -26) (undo-tree-id198 . -26) (undo-tree-id199 . -26) (undo-tree-id200 . -26) (undo-tree-id201 . -57)) nil (26039 42043 487662 990000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 41) (undo-tree-id190 . -1)) nil (26039 42043 487649 764000) 0 nil])
nil
