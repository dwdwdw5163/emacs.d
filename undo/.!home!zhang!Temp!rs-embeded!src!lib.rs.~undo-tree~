(undo-tree-save-format-version . 1)
"0535b4647963bffe65a799dc28755444a5cb3d4e"
[nil nil nil nil (26041 9554 483017 510000) 0 nil]
([nil nil ((#("pub fn add(left: usize, right: usize) -> usize {
    left + right
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn it_works() {
        let result = add(2, 2);
        assert_eq!(result, 4);
    }
}
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 10 (face font-lock-function-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 15 (face font-lock-variable-name-face fontified t) 15 17 (fontified t) 17 22 (face font-lock-type-face fontified t) 22 24 (fontified t) 24 29 (face font-lock-variable-name-face fontified t) 29 31 (fontified t) 31 36 (face font-lock-type-face fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 39 (fontified t) 39 40 (syntax-table (1) fontified t) 40 41 (fontified t) 41 46 (face font-lock-type-face fontified t) 46 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-1-face) fontified t) 48 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 69 (fontified t) 69 70 (face font-lock-preprocessor-face fontified t) 70 71 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 71 74 (face font-lock-preprocessor-face fontified t) 74 75 (face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face) fontified t) 75 79 (face font-lock-preprocessor-face fontified t) 79 80 (face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face) fontified t) 80 81 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 81 82 (fontified t) 82 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 91 (face font-lock-constant-face fontified t) 91 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 98 (fontified t) 98 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 107 (face font-lock-keyword-face fontified t) 107 117 (fontified t) 117 118 (face font-lock-preprocessor-face fontified t) 118 119 (face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face) fontified t) 119 123 (face font-lock-preprocessor-face fontified t) 123 124 (face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face) fontified t) 124 129 (fontified t) 129 131 (face font-lock-keyword-face fontified t) 131 132 (fontified t) 132 140 (face font-lock-function-name-face fontified t) 140 141 (face (rainbow-delimiters-depth-2-face) fontified t) 141 142 (face (rainbow-delimiters-depth-2-face) fontified t) 142 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-2-face) fontified t) 144 153 (fontified t) 153 156 (face font-lock-keyword-face fontified t) 156 157 (fontified t) 157 163 (face font-lock-variable-name-face fontified t) 163 169 (fontified t) 169 170 (face (rainbow-delimiters-depth-3-face) fontified t) 170 174 (fontified t) 174 175 (face (rainbow-delimiters-depth-3-face) fontified t) 175 185 (fontified t) 185 195 (face font-lock-preprocessor-face fontified t) 195 196 (face (rainbow-delimiters-depth-3-face) fontified t) 196 205 (fontified t) 205 206 (face (rainbow-delimiters-depth-3-face) fontified t) 206 212 (fontified t) 212 213 (face (rainbow-delimiters-depth-2-face) fontified t) 213 214 (fontified t) 214 215 (face (rainbow-delimiters-depth-1-face) fontified t) 215 216 (fontified t)) . 1) (undo-tree-id0 . -216) (undo-tree-id1 . -216) (undo-tree-id2 . -216) (undo-tree-id3 . -216) (undo-tree-id4 . -216) (undo-tree-id5 . -216) (undo-tree-id6 . -216) (undo-tree-id7 . -216) (undo-tree-id8 . -216) (undo-tree-id9 . -215) (undo-tree-id10 . -213) (undo-tree-id11 . -181) (undo-tree-id12 . -148) (undo-tree-id13 . -127) (undo-tree-id14 . -114) (undo-tree-id15 . -112) (undo-tree-id16 . -3) (undo-tree-id17 . -2) (undo-tree-id18 . -1) (undo-tree-id19 . -216) (undo-tree-id20 . -216) (undo-tree-id21 . -216) (t 26041 9276 791523 919000)) nil (26041 9554 483015 16000) 0 nil])
([nil nil ((1 . 4)) nil (26041 9554 482984 481000) 0 nil])
([nil nil ((3 . 4)) nil (26041 9554 482983 824000) 0 nil])
([nil nil ((4 . 6)) nil (26041 9554 482982 849000) 0 nil])
([nil nil ((6 . 10)) nil (26041 9554 482981 915000) 0 nil])
([nil nil ((10 . 12)) nil (26041 9554 482980 646000) 0 nil])
([nil nil ((13 . 14) 12) nil (26041 9554 482976 507000) 0 nil])
([nil nil ((13 . 14) (t 26041 9554 494874 292000)) nil (26041 9594 739967 368000) 0 nil])
([nil nil ((14 . 20)) nil (26041 9594 739966 477000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -18) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -19) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 20) nil (26041 9594 739964 250000) 0 nil])
([nil nil ((18 . 27)) nil (26041 9594 739939 720000) 0 nil])
([nil nil ((26 . 27)) nil (26041 9594 739938 805000) 0 nil])
([nil nil ((28 . 32)) nil (26041 9594 739938 99000) 0 nil])
([nil nil ((32 . 38)) nil (26041 9594 739937 439000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -37) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 38) nil (26041 9594 739936 340000) 0 nil])
([nil nil ((37 . 50)) nil (26041 9594 739928 369000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 50) (50 . 54) (49 . 51)) nil (26041 9594 739923 929000) 0 nil])
([nil nil ((50 . 51) (t 26041 9594 751543 432000)) nil (26041 9800 987937 330000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -50) (undo-tree-id0 . -1) 51) nil (26041 9800 987935 440000) 0 nil])
([nil nil ((50 . 54)) nil (26041 9800 987916 370000) 0 nil])
([nil nil ((1 . 3)) nil (26041 9800 987914 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22 . 23) (nil fontified nil 1 . 23) (1 . 23)) nil (26041 9800 987910 710000) 0 nil])
([nil nil ((#("#![no_main]" 0 2 (face font-lock-preprocessor-face fontified t) 2 3 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 3 10 (face font-lock-preprocessor-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) rear-nonsticky t fontified t)) . 12) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (t 26041 9800 998222 751000)) nil (26041 9849 367100 671000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (26041 9849 367093 999000) 0 nil])
([nil nil ((12 . 13)) nil (26041 9849 367081 603000) 0 nil])
([nil nil ((12 . 16)) nil (26041 9849 367080 229000) 0 nil])
([nil nil ((15 . 22)) nil (26041 9849 367076 482000) 0 nil])
([nil nil ((#("#![no_test]" 0 2 (face font-lock-preprocessor-face fontified t) 2 3 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 3 10 (face font-lock-preprocessor-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t)) . 12) (undo-tree-id17 . 1) (undo-tree-id18 . -11) (undo-tree-id19 . -11) (undo-tree-id20 . -11) (undo-tree-id21 . -11) (undo-tree-id22 . -11) (undo-tree-id23 . -11) (undo-tree-id24 . -11) (undo-tree-id25 . -11) (t 26041 9849 411559 54000)) nil (26041 9917 404976 402000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12) (undo-tree-id15 . 1) (undo-tree-id16 . -1)) nil (26041 9917 404966 773000) 0 nil])
([nil nil ((12 . 13) (t 26041 9917 414896 563000)) nil (26041 10010 659144 640000) 0 nil])
([nil nil ((12 . 13)) nil (26041 10010 659143 725000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -12) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 13) nil (26041 10010 659142 642000) 0 nil])
([nil nil ((12 . 18)) nil (26041 10010 659136 288000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -16) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -17) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 18) nil (26041 10010 659134 810000) 0 nil])
([nil nil ((#("#![no_std]" 0 2 (face font-lock-preprocessor-face fontified t) 2 3 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 3 9 (face font-lock-preprocessor-face fontified t) 9 10 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t)) . 1) (undo-tree-id259 . -7) (undo-tree-id260 . -10)) nil (26041 10010 659121 901000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1)) nil (26041 10010 659117 340000) 0 nil])
([nil nil ((#("exte" 0 4 (fontified t)) . 1) (undo-tree-id172 . -1) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -3) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4)) nil (26041 10010 658919 811000) 0 nil])
([nil nil ((1 . 4)) nil (26041 10010 658904 704000) 0 nil])
([nil nil ((apply yas--snippet-revive 1 8 #s(yas--snippet nil nil #s(yas--exit 8 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 8 nil) 0 nil nil nil nil)) (1 . 8) (#("extern $0" 0 9 (fontified nil)) . 1) (1 . 10) (#("ext" 0 3 (fontified nil)) . 1) (1 . 4) (#("extern" 0 6 (fontified nil)) . -1) (1 . 7) (#("ext" 0 3 (fontified t)) . -1) (undo-tree-id162 . -3) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) 4) nil (26041 10010 658903 131000) 0 nil])
([nil nil ((8 . 12)) nil (26041 10010 658894 138000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("a" 0 1 (fontified t)) . -11) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 12) nil (26041 10010 658892 597000) 0 nil])
([nil nil ((10 . 13)) nil (26041 10010 658872 713000) 0 nil])
([nil nil ((13 . 14) (13 . 15) (#("

" 0 1 (fontified t) 1 2 (fontified t)) . 13) (undo-tree-id134 . 2) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . 2)) nil (26041 10010 658871 75000) 0 nil])
([nil nil ((#("crate " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -8) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -1) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -4) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -6) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) 14) nil (26041 10010 658860 842000) 0 nil])
([nil nil ((#("extern " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -1) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) 8) nil (26041 10010 658784 848000) 0 nil])
([nil nil ((1 . 7)) nil (26041 10010 658254 292000) 0 nil])
([nil nil ((5 . 15) (#("pa" 0 2 (fontified nil)) . 5) (5 . 7) (#("panic_halt" 0 10 (fontified nil)) . -5) (5 . 15) (#("pa" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id26 . -2) (undo-tree-id27 . -1) (undo-tree-id28 . -2) 7) nil (26041 10010 658251 739000) 0 nil])
([nil nil ((15 . 21)) nil (26041 10010 658238 944000) 0 nil])
([nil nil ((1 . 2) (t 26041 10010 671568 954000)) nil (26041 10018 392349 596000) 0 nil])
([nil nil ((1 . 2)) nil (26041 10018 392348 714000) 0 nil])
([nil nil ((2 . 5)) nil (26041 10018 392348 57000) 0 nil])
([nil nil ((4 . 5)) nil (26041 10018 392346 848000) 0 nil])
([nil nil ((4 . 10) (#("n" 0 1 (fontified nil)) . 4) (4 . 5) (#("no_std" 0 6 (fontified nil)) . -4) (4 . 10) (#("n" 0 1 (face font-lock-preprocessor-face fontified t)) . -4) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 5) nil (26041 10018 392343 81000) 0 nil])
([nil nil ((87 . 88) (t 26041 10018 434902 764000)) nil (26041 10335 864110 416000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -87) (undo-tree-id3 . -1) 88) nil (26041 10335 864109 465000) 0 nil])
([nil nil ((79 . 85)) nil (26041 10335 864108 145000) 0 nil])
([nil nil ((93 . 94)) nil (26041 10335 864107 346000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -93) (undo-tree-id2 . -1) 94) nil (26041 10335 864106 422000) 0 nil])
([nil nil ((86 . 92)) nil (26041 10335 864104 678000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -90) (undo-tree-id0 . -1) (#("+" 0 1 (fontified t)) . -91) (undo-tree-id1 . -1) 92) nil (26041 10335 864103 17000) 0 nil])
([nil nil ((90 . 93)) nil (26041 10335 864084 370000) 0 nil])
([nil nil ((100 . 102)) nil (26041 10335 864082 788000) 0 nil])
([nil nil ((102 . 103)) nil (26041 10335 864078 124000) 0 nil])
([nil current ((101 . 102) (102 . 103) (t 26041 10335 878255 590000)) nil (26041 10341 963131 569000) 0 nil])
nil
