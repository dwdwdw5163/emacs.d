(undo-tree-save-format-version . 1)
"f18762e68333da0e25c02a018a0eedf7844b2a42"
[nil nil nil nil (26025 13517 320886 0) 0 nil]
([nil nil ((#("8" 0 1 (fontified t)) . -5085) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 5086 (t 26025 13492 53000 0)) nil (26025 13517 320884 0) 0 nil])
([nil nil ((5085 . 5086)) nil (26025 13517 320857 0) 0 nil])
([nil nil ((5082 . 5086) (#("TIM5" 0 4 (fontified nil)) . 5082) (5082 . 5086) (#("TIM5" 0 3 (fontified t) 3 4 (fontified t)) . -5082) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) 5086) nil (26025 13517 320851 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -3077) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 3078 (t 26025 13517 323822 372000)) nil (26025 13523 244114 0) 0 nil])
([nil nil ((3077 . 3078)) nil (26025 13523 244086 0) 0 nil])
([nil nil ((3084 . 3086) (#("  " 0 2 (fontified nil)) . 3083) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (3083 . 3086) (#("  " 0 2 (fontified nil)) . 3082) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (3084 . 3085) (t 26025 13523 247964 201000)) nil (26025 17422 701555 0) 0 nil])
([nil nil ((nil fontified nil 3577 . 3578) (nil fontified nil 3576 . 3577) (nil fontified nil 3575 . 3576) (nil fontified nil 3537 . 3575) (nil fontified nil 3536 . 3537) (nil fontified nil 3517 . 3536) (nil fontified nil 3515 . 3517) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3475 . 3513) (nil fontified nil 3474 . 3475) (nil fontified nil 3455 . 3474) (nil fontified nil 3453 . 3455) (nil fontified nil 3452 . 3453) (nil fontified nil 3413 . 3452) (nil fontified nil 3412 . 3413) (nil fontified nil 3393 . 3412) (nil fontified nil 3391 . 3393) (nil fontified nil 3390 . 3391) (nil fontified nil 3389 . 3390) (nil fontified nil 3351 . 3389) (nil fontified nil 3350 . 3351) (nil fontified nil 3331 . 3350) (nil fontified nil 3329 . 3331) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3289 . 3327) (nil fontified nil 3288 . 3289) (nil fontified nil 3269 . 3288) (nil fontified nil 3267 . 3269) (nil fontified nil 3266 . 3267) (nil fontified nil 3265 . 3266) (nil fontified nil 3227 . 3265) (nil fontified nil 3226 . 3227) (nil fontified nil 3207 . 3226) (nil fontified nil 3205 . 3207) (nil fontified nil 3204 . 3205) (nil fontified nil 3203 . 3204) (nil fontified nil 3165 . 3203) (nil fontified nil 3164 . 3165) (nil fontified nil 3145 . 3164) (nil fontified nil 3144 . 3145) (nil fontified nil 3143 . 3144) (nil fontified nil 3142 . 3143) (nil fontified nil 3141 . 3142) (nil fontified nil 3124 . 3141) (nil fontified nil 3123 . 3124) (nil fontified nil 3103 . 3123) (nil fontified nil 3102 . 3103) (nil fontified nil 3086 . 3102) (nil fontified nil 3085 . 3086) (nil fontified nil 3083 . 3085) (3083 . 3578)) nil (26025 17422 701534 0) 0 nil])
([nil nil ((3578 . 3581)) nil (26025 17422 701520 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3629 . 3630) (nil fontified nil 3629 . 3630) (nil fontified nil 3628 . 3629) (nil fontified nil 3627 . 3628) (nil fontified nil 3612 . 3627) (nil fontified nil 3604 . 3612) (nil fontified nil 3603 . 3604) (nil fontified nil 3587 . 3603) (nil fontified nil 3586 . 3587) (nil fontified nil 3584 . 3586) (3584 . 3630)) nil (26025 17422 701519 0) 0 nil])
([nil nil ((3582 . 3584) (#("    " 0 2 (fontified t) 2 4 (fontified t)) . 3582) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2)) nil (26025 17422 701514 0) 0 nil])
([nil nil ((3628 . 3631)) nil (26025 17422 701493 0) 0 nil])
([nil nil ((3628 . 3630)) nil (26025 17422 701492 0) 0 nil])
([nil nil ((3630 . 3634)) nil (26025 17422 701491 0) 0 nil])
([nil nil ((#("—" 0 1 (fontified t)) . -3630) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("—" 0 1 (fontified t)) . -3631) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("—" 0 1 (fontified t)) . -3632) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("—" 0 1 (fontified t)) . -3633) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) 3634) nil (26025 17422 701486 0) 0 nil])
([nil nil ((3630 . 3635)) nil (26025 17422 701388 0) 0 nil])
([nil nil ((3635 . 3636)) nil (26025 17422 701387 0) 0 nil])
([nil nil ((3636 . 3639)) nil (26025 17422 701386 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -3635) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("R" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -3636) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#("I" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -3637) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#("M" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -3638) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 3639) nil (26025 17422 701381 0) 0 nil])
([nil nil ((3635 . 3636)) nil (26025 17422 701292 0) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -3635) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 3636) nil (26025 17422 701290 0) 0 nil])
([nil nil ((3635 . 3641)) nil (26025 17422 701280 0) 0 nil])
([nil nil ((3641 . 3642)) nil (26025 17422 701279 0) 0 nil])
([nil nil ((796 . 827) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3683 3689 nil nil nil t #s(yas--field 2 3691 3702 nil nil nil nil #s(yas--field 3 3704 3715 nil nil nil nil nil))) #s(yas--field 2 3691 3702 nil nil nil nil #s(yas--field 3 3704 3715 nil nil nil nil nil)) #s(yas--field 3 3704 3715 nil nil nil nil nil)) nil 2 nil #s(yas--field 1 3683 3689 nil nil nil t #s(yas--field 2 3691 3702 nil nil nil nil #s(yas--field 3 3704 3715 nil nil nil nil nil))) nil nil)) (3630 . 3689) (#("__HAL_TIM_SET_COMPARE(${1:__HANDLE__}, ${2:__CHANNEL__}, ${3:__COMPARE__})" 0 74 (fontified nil)) . 3630) (3630 . 3704) (#("__HAL_T" 0 7 (fontified nil)) . 3630) (3630 . 3637) (#("__HAL_TIM_SET_COMPARE(__HANDLE__, __CHANNEL__, __COMPARE__)" 0 59 (fontified nil)) . -3630) (3630 . 3689) (#("__HAL_TIM_SE" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -3630) (undo-tree-id104 . -12) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -5) (undo-tree-id174 . -5) (undo-tree-id175 . -5) (undo-tree-id176 . -5) (undo-tree-id177 . -5) (undo-tree-id178 . -5) (undo-tree-id179 . -5) (undo-tree-id180 . -5) (undo-tree-id181 . -5) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -5) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -7) (undo-tree-id215 . -7) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (undo-tree-id227 . -9) (undo-tree-id228 . -9) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (undo-tree-id231 . -9) (undo-tree-id232 . -10) (undo-tree-id233 . -10) (undo-tree-id234 . -10) (undo-tree-id235 . -10) (undo-tree-id236 . -10) (undo-tree-id237 . -11) (undo-tree-id238 . -11) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -11) (undo-tree-id242 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) (undo-tree-id246 . -12) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) 3642) nil (26025 17422 701271 0) 0 nil])
([nil nil ((3684 . 3685) (#("__HANDLE__" 0 10 (fontified nil)) . 3684) (undo-tree-id103 . -10) (3683 . 3684)) nil (26025 17422 701118 0) 0 nil])
([nil nil ((3684 . 3689) (#("h" 0 1 (fontified nil)) . 3684) (undo-tree-id88 . -1) (3684 . 3685) (#("htim1" 0 5 (fontified nil)) . -3684) (undo-tree-id89 . -5) (3684 . 3689) (#("h" 0 1 (fontified t)) . -3684) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 3685) nil (26025 17422 701115 0) 0 nil])
([nil nil ((apply yas--snippet-revive 3661 3716 #s(yas--snippet nil (#s(yas--field 1 3683 3689 nil nil nil t #s(yas--field 2 3691 3702 nil nil nil nil #s(yas--field 3 3704 3715 nil nil nil nil nil))) #s(yas--field 2 3691 3702 nil nil nil nil #s(yas--field 3 3704 3715 nil nil nil nil nil)) #s(yas--field 3 3704 3715 nil nil nil nil nil)) nil 2 nil #s(yas--field 1 3683 3689 nil nil nil t #s(yas--field 2 3691 3702 nil nil nil nil #s(yas--field 3 3704 3715 nil nil nil nil nil))) nil nil))) nil (26025 17422 701098 0) 0 nil])
([nil nil ((#("__CHANNEL" 0 9 (fontified t)) . 3691) (undo-tree-id87 . -9)) nil (26025 17422 704690 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3691) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("_" 0 1 (fontified t)) . -3692) (undo-tree-id506 . -1) (undo-tree-id507 . -1) 3693) nil (26025 17432 139150 0) 0 nil] [nil nil ((#("__, __COMPARE" 0 13 (fontified t)) . 3691) (undo-tree-id86 . -13)) ((3691 . 3704)) (26025 17422 701092 0) 0 nil])
([nil nil ((3691 . 3694)) nil (26025 17432 139138 0) 0 nil])
nil
([nil nil ((3691 . 3706) (#("TIM" 0 3 (fontified nil)) . 3691) (3691 . 3694) (#("TIM_CHANNEL_ALL" 0 15 (fontified nil)) . -3691) (3691 . 3706) (#("TIM" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3691) (undo-tree-id470 . -3) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) 3694) nil (26025 17432 139135 0) 0 nil])
([nil nil ((#("__COMPARE" 0 9 (fontified t)) . 3708) (undo-tree-id469 . -9)) nil (26025 17432 139107 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 3708) (#("_" 0 1 (fontified t)) . 3708)) nil (26025 17432 139098 0) 0 nil])
([nil nil ((3708 . 3711)) nil (26025 17432 139097 0) 0 nil])
([nil nil ((3712 . 3713)) nil (26025 17435 761816 0) 0 nil])
([nil nil ((3717 . 3719) (3717 . 3719) (t 26025 17432 174891 183000)) nil (26025 17438 642118 0) 0 nil] [nil nil ((3717 . 3719) (3717 . 3719) (t 26025 17432 174891 183000)) ((#("//" 0 1 (face font-lock-comment-delimiter-face c-is-sws t fontified nil) 1 2 (face font-lock-comment-delimiter-face fontified nil)) . 3717) (undo-tree-id508 . -2) (#("  " 0 2 (fontified t)) . 3717)) (26025 17435 756972 0) 0 nil])
([nil nil ((3738 . 3740) (3738 . 3740)) nil (26025 17438 642114 0) 0 nil])
nil
([nil nil ((#("
  HAL_GPIO_WritePin(MotorA_IN1_GPIO_Port, MotorA_IN1_Pin, 1);
  HAL_GPIO_WritePin(MotorB_IN1_GPIO_Port, MotorB_IN1_Pin, 1);
  HAL_GPIO_WritePin(MotorC_IN1_GPIO_Port, MotorC_IN1_Pin, 1);
  HAL_GPIO_WritePin(MotorD_IN1_GPIO_Port, MotorD_IN1_Pin, 1);
  HAL_GPIO_WritePin(MotorA_IN2_GPIO_Port, MotorA_IN2_Pin, 0);
  HAL_GPIO_WritePin(MotorB_IN2_GPIO_Port, MotorB_IN2_Pin, 0);
  HAL_GPIO_WritePin(MotorC_IN2_GPIO_Port, MotorC_IN2_Pin, 0);
  HAL_GPIO_WritePin(MotorD_IN2_GPIO_Port, MotorD_IN2_Pin, 0);
  
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_ALL);
  __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_ALL, 200);" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-2-face) fontified t) 21 41 (fontified t) 41 42 (fontified t) 42 59 (fontified t) 59 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-2-face) fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-2-face) fontified t) 83 121 (fontified t) 121 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-2-face) fontified t) 123 125 (fontified t) 125 144 (fontified t) 144 145 (face (rainbow-delimiters-depth-2-face) fontified t) 145 183 (fontified t) 183 184 (fontified t) 184 185 (face (rainbow-delimiters-depth-2-face) fontified t) 185 187 (fontified t) 187 206 (fontified t) 206 207 (face (rainbow-delimiters-depth-2-face) fontified t) 207 245 (fontified t) 245 246 (fontified t) 246 247 (face (rainbow-delimiters-depth-2-face) fontified t) 247 249 (fontified t) 249 268 (fontified t) 268 269 (face (rainbow-delimiters-depth-2-face) fontified t) 269 307 (fontified t) 307 308 (fontified t) 308 309 (face (rainbow-delimiters-depth-2-face) fontified t) 309 311 (fontified t) 311 330 (fontified t) 330 331 (face (rainbow-delimiters-depth-2-face) fontified t) 331 370 (fontified t) 370 371 (face (rainbow-delimiters-depth-2-face) fontified t) 371 373 (fontified t) 373 392 (fontified t) 392 393 (face (rainbow-delimiters-depth-2-face) fontified t) 393 431 (fontified t) 431 432 (fontified t) 432 433 (face (rainbow-delimiters-depth-2-face) fontified t) 433 435 (fontified t) 435 454 (fontified t) 454 455 (face (rainbow-delimiters-depth-2-face) fontified t) 455 493 (fontified t) 493 494 (fontified t) 494 495 (face (rainbow-delimiters-depth-2-face) fontified t) 495 496 (fontified t rear-nonsticky t) 496 499 (fontified t) 499 500 (fontified t) 500 502 (fontified t) 502 503 (fontified t) 503 519 (fontified t) 519 520 (face (rainbow-delimiters-depth-2-face) fontified t) 520 528 (fontified t) 528 543 (fontified t) 543 544 (face (rainbow-delimiters-depth-2-face) fontified t) 544 545 (fontified t) 545 546 (fontified t rear-nonsticky t) 546 548 (fontified t) 548 569 (fontified t) 569 570 (face (rainbow-delimiters-depth-2-face) fontified t) 570 571 (fontified t) 571 576 (fontified t) 576 577 (fontified t) 577 578 (fontified t) 578 593 (fontified t) 593 594 (fontified t) 594 595 (fontified t) 595 596 (fontified t) 596 597 (fontified t) 597 598 (fontified t) 598 599 (face (rainbow-delimiters-depth-2-face) fontified t) 599 600 (fontified t)) . 3113) (undo-tree-id563 . -600) (undo-tree-id564 . -1) (undo-tree-id565 . -500) (undo-tree-id566 . -500) (undo-tree-id567 . -600) (undo-tree-id568 . -600) (undo-tree-id569 . -600) (undo-tree-id570 . -545) (undo-tree-id571 . -499) (undo-tree-id572 . -473) (undo-tree-id573 . -471) (undo-tree-id574 . -467) (undo-tree-id575 . -465) (undo-tree-id576 . -463) (undo-tree-id577 . -397) (undo-tree-id578 . -395) (undo-tree-id579 . -392) (undo-tree-id580 . -328) (undo-tree-id581 . -326) (undo-tree-id582 . -325) (undo-tree-id583 . -260) (undo-tree-id584 . -258) (undo-tree-id585 . -195) (undo-tree-id586 . -194) (undo-tree-id587 . -193) (undo-tree-id588 . -192) (undo-tree-id589 . -129) (undo-tree-id590 . -128) (undo-tree-id591 . -127) (undo-tree-id592 . -64) (undo-tree-id593 . -1) (undo-tree-id594 . -600) (undo-tree-id595 . -500) (undo-tree-id596 . -600) (t 26025 17438 648565 323000)) nil (26025 17469 156247 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3112) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) 3113) nil (26025 17469 156207 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3112) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) 3113) nil (26025 17469 156159 0) 0 nil])
([nil nil ((apply 6 3115 3160 undo--wrap-and-run-primitive-undo 3115 3160 ((#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -3135) (#<marker (moves after insertion) at 3134 in main.c> . 1) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#<marker at 3132 in main.c> . -2) (#("// " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -3117) 3115))) nil (26025 17469 156141 0) 0 nil])
([nil current ((3132 . 3134) (#("   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 3132) (undo-tree-id597 . 1) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (3115 . 3117) (#("   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 3115) (undo-tree-id610 . -2) 3112 (t 26025 17469 163000 599000)) nil (26025 17472 594126 0) 0 nil])
nil
