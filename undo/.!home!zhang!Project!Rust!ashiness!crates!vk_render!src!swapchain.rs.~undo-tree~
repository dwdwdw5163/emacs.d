(undo-tree-save-format-version . 1)
"0a0735724ad51914345f9888a5701c1d80b95286"
[nil nil nil nil (26051 44525 554367 466000) 0 nil]
([nil nil ((1 . 3) (t 26051 43311 749046 604000)) nil (26051 44525 554366 391000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("t" 0 1 (fontified t)) . -2) (undo-tree-id104 . -1) 3) nil (26051 44525 554365 197000) 0 nil])
([nil nil ((1 . 7)) nil (26051 44525 554361 707000) 0 nil])
([nil nil ((apply yas--snippet-revive 5 12 #s(yas--snippet nil nil #s(yas--exit 12 nil) 70 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 12 nil) 70 nil nil nil nil)) (5 . 12) (#("struct $0" 0 9 (fontified nil)) . 5) (5 . 14) (#("st" 0 2 (fontified nil)) . 5) (5 . 7) (#("struct" 0 6 (fontified nil)) . -5) (5 . 11) (#("st" 0 2 (fontified t)) . -5) (undo-tree-id97 . -2) (undo-tree-id98 . -1) (undo-tree-id99 . -2) (undo-tree-id100 . -2) 7) nil (26051 44525 554360 48000) 0 nil])
([nil nil ((12 . 18)) nil (26051 44525 554110 202000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . -14) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("p" 0 1 (face font-lock-type-face fontified t)) . -15) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("C" 0 1 (face font-lock-type-face fontified t)) . -16) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("h" 0 1 (face font-lock-type-face fontified t)) . -17) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 18) nil (26051 44525 554107 182000) 0 nil])
([nil nil ((14 . 16)) nil (26051 44525 554071 351000) 0 nil])
([nil nil ((16 . 24)) nil (26051 44525 554070 725000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 24) (24 . 28) (23 . 25)) nil (26051 44525 554069 922000) 0 nil])
([nil nil ((24 . 28)) nil (26051 44525 554069 44000) 0 nil])
([nil nil ((28 . 31)) nil (26051 44525 554068 449000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -30) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 31) nil (26051 44525 554067 524000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-type-face fontified t)) . -15) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 16) nil (26051 44525 554062 493000) 0 nil])
([nil nil ((15 . 16)) nil (26051 44525 554054 831000) 0 nil])
([nil nil ((30 . 39)) nil (26051 44525 554053 931000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -38) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 39) nil (26051 44525 554053 75000) 0 nil])
([nil nil ((38 . 46)) nil (26051 44525 554050 481000) 0 nil])
([nil nil ((44 . 47) (#("as" 0 2 (fontified nil)) . 44) (44 . 46) (#("ash" 0 3 (fontified nil)) . -44) (44 . 47) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -44) (undo-tree-id15 . -2) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) 46) nil (26051 44525 554049 41000) 0 nil])
([nil nil ((47 . 50)) nil (26051 44525 554042 339000) 0 nil])
([nil nil ((49 . 59) (#("e" 0 1 (fontified nil)) . 49) (49 . 50) (#("extensions" 0 10 (fontified nil)) . -49) (49 . 59) (#("e" 0 1 (fontified t)) . -49) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 50) nil (26051 44525 554040 925000) 0 nil])
([nil nil ((59 . 61)) nil (26051 44525 554035 764000) 0 nil])
([nil nil ((61 . 64) (#("khr" 0 3 (fontified nil)) . -61) (61 . 64)) nil (26051 44525 554034 912000) 0 nil])
([nil nil ((64 . 67)) nil (26051 44525 554033 997000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -66) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 67) nil (26051 44525 554032 982000) 0 nil])
([nil nil ((66 . 67)) nil (26051 44525 554029 126000) 0 nil])
([nil nil ((66 . 75) (#("S" 0 1 (fontified nil)) . 66) (66 . 67) (#("Swapchain" 0 9 (fontified nil)) . -66) (66 . 75) (#("S" 0 1 (face font-lock-type-face fontified t)) . -66) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 67) nil (26051 44525 554026 838000) 0 nil])
([nil nil ((75 . 76)) nil (26051 44525 554005 774000) 0 nil])
([nil nil ((78 . 79) 76) nil (26051 44525 554001 858000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -75) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 76 (t 26051 44525 565787 509000)) nil (26051 44529 498136 632000) 0 nil])
([nil nil ((75 . 76)) nil (26051 44529 498119 654000) 0 nil])
([nil nil ((79 . 80) (t 26051 44529 509121 84000)) nil (26052 59177 726430 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 242 . 243) (nil fontified nil 80 . 243) (80 . 243)) nil (26052 59177 726428 213000) 0 nil])
([nil nil ((243 . 244)) nil (26052 59177 726422 879000) 0 nil])
([nil nil ((1 . 3) (t 26052 59177 736849 528000)) nil (26052 59188 73336 296000) 0 nil])
([nil nil ((1 . 7)) nil (26052 59188 73335 242000) 0 nil])
([nil nil ((5 . 8) (#("as" 0 2 (fontified nil)) . 5) (5 . 7) (#("ash" 0 3 (fontified nil)) . -5) (5 . 8) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -5) (undo-tree-id5 . -2) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) 7) nil (26052 59188 73333 865000) 0 nil])
([nil nil ((8 . 11)) nil (26052 59188 73325 929000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -10) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 11) nil (26052 59188 73324 922000) 0 nil])
([nil nil ((10 . 11)) nil (26052 59188 73320 832000) 0 nil])
([nil nil ((10 . 12) (#("v" 0 1 (fontified nil)) . 10) (10 . 11) (#("vk" 0 2 (fontified nil)) . -10) (10 . 12) (#("v" 0 1 (fontified t)) . -10) (undo-tree-id0 . -1) 11) nil (26052 59188 73318 679000) 0 nil])
([nil nil ((12 . 13)) nil (26052 59188 73299 27000) 0 nil])
([nil nil ((13 . 14) (t 26052 59188 86850 164000)) nil (26052 59213 565204 525000) 0 nil])
([nil nil ((14 . 19)) nil (26052 59213 565203 818000) 0 nil])
([nil nil ((18 . 23) (#("a" 0 1 (fontified nil)) . 18) (18 . 19) (#("alloc" 0 5 (fontified nil)) . -18) (18 . 23) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -18) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 19) nil (26052 59213 565202 472000) 0 nil])
([nil nil ((#("use alloc" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-constant-face fontified t)) . 14) (undo-tree-id16 . -7) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -9) (undo-tree-id31 . -9) (undo-tree-id32 . -9) (undo-tree-id33 . -9) (undo-tree-id34 . -9) (undo-tree-id35 . -9) (undo-tree-id36 . -9) (undo-tree-id37 . -9) (undo-tree-id38 . -9) (undo-tree-id39 . -9) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -9)) nil (26052 59213 565195 272000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14) (undo-tree-id15 . -1)) nil (26052 59213 565161 426000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14) (undo-tree-id14 . -1)) nil (26052 59213 565158 809000) 0 nil])
([nil nil ((14 . 15)) nil (26052 59213 565150 92000) 0 nil])
([nil nil ((94 . 98) (t 26052 59213 576851 729000)) nil (26052 59227 842182 377000) 0 nil])
([nil nil ((#("pub " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -94) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -4) 98 (t 26052 59227 853519 272000)) nil (26052 59230 820539 366000) 0 nil])
([nil nil ((258 . 259) (t 26052 59230 833519 455000)) nil (26052 60209 180255 10000) 0 nil])
([nil nil ((93 . 95)) nil (26052 60209 180254 280000) 0 nil])
([nil nil ((94 . 99)) nil (26052 60209 180253 651000) 0 nil])
([nil nil ((#("impl " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . -94) (undo-tree-id198 . -5) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) 99) nil (26052 60209 180252 137000) 0 nil])
([nil nil ((94 . 95)) nil (26052 60209 180229 816000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -94) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 95) nil (26052 60209 180228 973000) 0 nil])
([nil nil ((94 . 96)) nil (26052 60209 180224 703000) 0 nil])
([nil nil ((96 . 97)) nil (26052 60209 180224 27000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -96) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 97) nil (26052 60209 180222 721000) 0 nil])
([nil nil ((96 . 98)) nil (26052 60209 179558 649000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -97) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 98) nil (26052 60209 179557 841000) 0 nil])
([nil nil ((97 . 100)) nil (26052 60209 179554 726000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -99) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 100) nil (26052 60209 179553 935000) 0 nil])
([nil nil ((99 . 100)) nil (26052 60209 179550 592000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . -99) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 100) nil (26052 60209 179549 689000) 0 nil])
([nil nil ((99 . 110)) nil (26052 60209 179544 429000) 0 nil])
([nil nil ((13 . 42) (99 . 99) (99 . 114) (#("DeviceExten" 0 11 (fontified nil)) . 99) (99 . 110) (#("DeviceExtension (use crate::DeviceExtension)" 0 44 (fontified nil)) . -99) (99 . 143) (#("DeviceExten" 0 11 (face font-lock-type-face fontified t)) . -99) (undo-tree-id133 . -11) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -9) (undo-tree-id159 . -9) (undo-tree-id160 . -10) (undo-tree-id161 . -10) (undo-tree-id162 . -10) (undo-tree-id163 . -11) (undo-tree-id164 . -11) (undo-tree-id165 . -11) (undo-tree-id166 . -11) (undo-tree-id167 . -11) 110) nil (26052 60209 179542 192000) 0 nil])
([nil nil ((143 . 144)) nil (26052 60209 179517 369000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -143) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 144) nil (26052 60209 179516 361000) 0 nil])
([nil nil ((143 . 146)) nil (26052 60209 179511 765000) 0 nil])
([nil nil ((apply yas--snippet-revive 144 147 #s(yas--snippet nil nil nil 16 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 16 nil nil nil nil)) (144 . 147) (#("for" 0 3 (fontified nil)) . 144) (144 . 147) (#("fo" 0 2 (fontified nil)) . 144) (144 . 146) (#("for" 0 3 (fontified nil)) . -144) (144 . 147) (#("fo" 0 2 (fontified t)) . -144) (undo-tree-id119 . -2) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) 146) nil (26052 60209 179510 333000) 0 nil])
([nil nil ((147 . 150)) nil (26052 60209 179503 325000) 0 nil])
([nil nil ((148 . 157) (#("Sw" 0 2 (fontified nil)) . 148) (148 . 150) (#("SwapChain" 0 9 (fontified nil)) . -148) (148 . 157) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -148) (undo-tree-id108 . -2) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) 150) nil (26052 60209 179501 871000) 0 nil])
([nil nil ((157 . 160)) nil (26052 60209 179492 651000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 160) (160 . 164) (159 . 161)) nil (26052 60209 179491 967000) 0 nil])
([nil nil ((160 . 161)) nil (26052 60209 179490 945000) 0 nil])
([nil nil ((apply yas--snippet-revive 160 198 #s(yas--snippet nil nil #s(yas--exit 196 nil) 17 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 196 nil) 17 nil nil nil nil)) (160 . 198) (#("fn is_suitable(&self) -> bool {
    $0
}" 0 23 (fontified nil) 23 24 (syntax-table (1) fontified nil) 24 40 (fontified nil)) . 160) (160 . 200) (#("f" 0 1 (fontified nil)) . 160) (160 . 161) (#("fn is_suitable(..)" 0 18 (fontified nil)) . -160) (160 . 178) (#("f" 0 1 (fontified t)) . -160) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 161) nil (26052 60209 179488 529000) 0 nil])
([nil nil ((205 . 209) (196 . 204) (#("    " 0 4 (fontified t)) . 196) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (160 . 164) 122) nil (26052 60209 179479 430000) 0 nil])
([nil nil ((#("impl DeviceExtension for SwapChain {
    fn is_suitable(&self) -> bool {
        
    }
}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 20 (face font-lock-type-face fontified t) 20 21 (fontified t) 21 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 34 (face font-lock-type-face fontified t) 34 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 37 (fontified t) 37 41 (fontified t) 41 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 55 (face font-lock-function-name-face fontified t) 55 56 (face (rainbow-delimiters-depth-2-face) fontified t) 56 57 (face rust-ampersand-face fontified t) 57 61 (face font-lock-keyword-face fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 64 (fontified t) 64 65 (syntax-table (1) fontified t) 65 66 (fontified t) 66 70 (face font-lock-type-face fontified t) 70 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 81 (fontified t) 81 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t) 87 88 (fontified t) 88 89 (face (rainbow-delimiters-depth-1-face) fontified t)) . 123) (undo-tree-id229 . -89) (t 26052 60209 180246 153000)) nil (26052 60292 384730 362000) 0 nil])
([nil nil ((#("use crate::DeviceExtension;
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 11 (fontified t) 11 26 (face font-lock-type-face fontified t) 26 27 (fontified t) 27 28 (fontified t)) . 15) (undo-tree-id223 . -28) (undo-tree-id224 . -21) (undo-tree-id225 . -28) (undo-tree-id226 . -21) (undo-tree-id227 . -28) (undo-tree-id228 . -28)) nil (26052 60292 384725 963000) 0 nil])
([nil nil ((95 . 102) (t 26052 60292 426917 931000)) nil (26052 60355 166325 797000) 0 nil])
([nil nil ((100 . 109) (#("Sw" 0 2 (fontified nil)) . 100) (100 . 102) (#("SwapChain" 0 9 (fontified nil)) . -100) (100 . 109) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -100) (undo-tree-id372 . -2) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) 102) nil (26052 60355 166324 386000) 0 nil])
([nil nil ((109 . 112)) nil (26052 60355 166317 298000) 0 nil])
([nil nil ((#("impl SwapChain {}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 14 (face font-lock-type-face fontified t) 14 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t)) . 95) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -14) (undo-tree-id355 . -14) (undo-tree-id356 . -14) (undo-tree-id357 . -15) (undo-tree-id358 . -15) (undo-tree-id359 . -16) (undo-tree-id360 . -16) (undo-tree-id361 . -17) (undo-tree-id362 . -17) (undo-tree-id363 . -16) (undo-tree-id364 . -16) (undo-tree-id365 . -16) (undo-tree-id366 . -16) (undo-tree-id367 . -16) (undo-tree-id368 . -16) (undo-tree-id369 . -16) (undo-tree-id370 . -16) (undo-tree-id371 . -17)) nil (26052 60355 166314 809000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 95) (undo-tree-id326 . -1) (undo-tree-id327 . -1)) nil (26052 60355 165882 905000) 0 nil])
([nil nil ((261 . 262)) nil (26052 60355 165881 154000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -261) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . 1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) 262) nil (26052 60355 165880 91000) 0 nil])
([nil nil ((261 . 263)) nil (26052 60355 165871 900000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 272 279 nil nil nil nil #s(yas--exit 288 nil))) #s(yas--exit 288 nil) 18 nil #s(yas--field 1 272 279 nil nil nil nil #s(yas--exit 288 nil)) nil nil)) (261 . 290) (#("#[test]
fn ${1:feature}() {
    $0
}" 0 36 (fontified nil)) . 261) (261 . 297) (#("fn" 0 2 (fontified nil)) . 261) (261 . 263) (#("tfn (Test function)" 0 19 (fontified nil)) . -261) (261 . 280) (#("fn" 0 2 (face font-lock-keyword-face fontified t)) . -261) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) 263) nil (26052 60355 165870 221000) 0 nil])
([nil nil ((apply yas--snippet-revive 261 290 #s(yas--snippet nil (#s(yas--field 1 272 279 nil nil nil nil #s(yas--exit 288 nil))) #s(yas--exit 288 nil) 18 nil #s(yas--field 1 272 279 nil nil nil nil #s(yas--exit 288 nil)) nil nil))) nil (26052 60355 165858 209000) 0 nil])
([nil nil ((#("[test]
fn feature() {
    
}" 0 1 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 1 5 (face font-lock-preprocessor-face fontified t) 5 6 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 6 7 (fontified t) 7 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 17 (face font-lock-function-name-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t)) . 262) (undo-tree-id270 . -28) (undo-tree-id271 . -28) (undo-tree-id272 . -28) (undo-tree-id273 . -10) (undo-tree-id274 . -10) (undo-tree-id275 . -10) (undo-tree-id276 . -10) (undo-tree-id277 . -10) (undo-tree-id278 . -28) (undo-tree-id279 . -28) (undo-tree-id280 . -28) (undo-tree-id281 . -28) (undo-tree-id282 . -28) (undo-tree-id283 . -28) (undo-tree-id284 . -28) (undo-tree-id285 . -28) (undo-tree-id286 . -28) (undo-tree-id287 . -28) (undo-tree-id288 . -28) (undo-tree-id289 . -28) (undo-tree-id290 . -28) (undo-tree-id291 . -28) (undo-tree-id292 . -26) (undo-tree-id293 . -2) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -28) (undo-tree-id297 . -28)) nil (26052 60355 165856 548000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t)) . -261) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) 262) nil (26052 60355 165837 97000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1301 . 1302) (nil fontified nil 261 . 1302) (261 . 1302)) nil (26052 60355 165567 645000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1205) (#("    " 0 4 (fontified t)) . -1203) (#("    " 0 4 (fontified t)) . -1197) (#("    " 0 4 (fontified t)) . -1174) (#("    " 0 4 (fontified t)) . -1153) (#("    " 0 4 (fontified t)) . -1127) (#("    " 0 4 (fontified t)) . -1090) (#("    " 0 4 (fontified t)) . -1027) (#("    " 0 4 (fontified t)) . -932) (#("    " 0 4 (fontified t)) . -904) (#("    " 0 4 (fontified t)) . -858) (#("    " 0 4 (fontified t)) . -801) (#("    " 0 4 (fontified t)) . -712) (#("    " 0 4 (fontified t)) . -684) (#("    " 0 4 (fontified t)) . -644) (#("    " 0 4 (fontified t)) . -582) (#("    " 0 4 (fontified t)) . -488) (#("    " 0 4 (fontified t)) . -460) (#("    " 0 4 (fontified t)) . -415) (#("    " 0 4 (fontified t)) . -398) (#("    " 0 4 (fontified t)) . -364) (#("    " 0 4 (fontified t)) . -334) (#("    " 0 4 (fontified t)) . -293) (#("    " 0 4 (fontified t)) . -261) 260) nil (26052 60355 165563 477000) 0 nil])
([nil nil ((1206 . 1207) 260) nil (26052 60355 165556 660000) 0 nil])
([nil nil ((260 . 261) (t 26052 60355 210255 115000)) nil (26052 60365 276760 410000) 0 nil])
([nil nil ((#("SurfaceStuff" 0 12 (face font-lock-type-face fontified t)) . -351) (undo-tree-id425 . -12) (undo-tree-id426 . -12) (undo-tree-id427 . -12) (undo-tree-id428 . -12) (undo-tree-id429 . -12) (undo-tree-id430 . -12) (undo-tree-id431 . -12) 363) nil (26052 60365 276759 271000) 0 nil])
([nil nil ((351 . 358)) nil (26052 60365 276753 379000) 0 nil])
([nil nil ((13 . 34) (351 . 351) (351 . 358) (#("Surface" 0 7 (fontified nil)) . 351) (351 . 358) (#("Surface (use crate::Surface)" 0 28 (fontified nil)) . -351) (351 . 379) (#("Surface" 0 7 (face font-lock-type-face fontified t)) . -351) (undo-tree-id399 . -7) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -5) (undo-tree-id415 . -5) (undo-tree-id416 . -5) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -7) 358) nil (26052 60365 276750 908000) 0 nil])
([nil nil ((#("stuff" 0 5 (face font-lock-variable-name-face fontified t)) . -364) (undo-tree-id396 . -5) (undo-tree-id397 . -5) (undo-tree-id398 . -5) 369) nil (26052 60365 276486 342000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -363) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) 364) nil (26052 60365 276480 385000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 5) (#("_" 0 1 (fontified t)) . -980) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (#("_" 0 1 (fontified t)) . -872) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (#("_" 0 1 (fontified t)) . -766) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 2) (#("_" 0 1 (fontified t)) . -664) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (apply deactivate-cursor-after-undo 2) (apply activate-cursor-for-undo 1) (#("_" 0 1 (fontified t)) . -559) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (apply deactivate-cursor-after-undo 1) (#("_" 0 1 (fontified t)) . -452) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (apply activate-cursor-for-undo 5) (#("s" 0 1 (fontified t)) . -986) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (#("s" 0 1 (fontified t)) . -877) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (#("s" 0 1 (fontified t)) . -770) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 2) (#("s" 0 1 (fontified t)) . -667) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (apply deactivate-cursor-after-undo 2) (apply activate-cursor-for-undo 1) (#("s" 0 1 (fontified t)) . -561) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (apply deactivate-cursor-after-undo 1) (#("s" 0 1 (fontified t)) . -453) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (apply activate-cursor-for-undo 5) (#("t" 0 1 (fontified t)) . -992) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (#("t" 0 1 (fontified t)) . -882) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (#("t" 0 1 (fontified t)) . -774) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 2) (#("t" 0 1 (fontified t)) . -670) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (apply deactivate-cursor-after-undo 2) (apply activate-cursor-for-undo 1) (#("t" 0 1 (fontified t)) . -563) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (apply deactivate-cursor-after-undo 1) (#("t" 0 1 (fontified t)) . -454) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (apply activate-cursor-for-undo 5) (#("u" 0 1 (fontified t)) . -998) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (#("u" 0 1 (fontified t)) . -887) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (#("u" 0 1 (fontified t)) . -778) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 2) (#("u" 0 1 (fontified t)) . -673) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (apply deactivate-cursor-after-undo 2) (apply activate-cursor-for-undo 1) (#("u" 0 1 (fontified t)) . -565) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (apply deactivate-cursor-after-undo 1) (#("u" 0 1 (fontified t)) . -455) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (apply activate-cursor-for-undo 5) (#("f" 0 1 (fontified t)) . -1004) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (#("f" 0 1 (fontified t)) . -892) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (#("f" 0 1 (fontified t)) . -782) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 2) (#("f" 0 1 (fontified t)) . -676) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (apply deactivate-cursor-after-undo 2) (apply activate-cursor-for-undo 1) (#("f" 0 1 (fontified t)) . -567) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (apply deactivate-cursor-after-undo 1) (#("f" 0 1 (fontified t)) . -456) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (apply activate-cursor-for-undo 5) (#("f" 0 1 (fontified t)) . -1010) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (apply deactivate-cursor-after-undo 5) (apply activate-cursor-for-undo 4) (#("f" 0 1 (fontified t)) . -897) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (apply deactivate-cursor-after-undo 4) (apply activate-cursor-for-undo 3) (#("f" 0 1 (fontified t)) . -786) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (apply deactivate-cursor-after-undo 3) (apply activate-cursor-for-undo 2) (#("f" 0 1 (fontified t)) . -679) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (apply deactivate-cursor-after-undo 2) (apply activate-cursor-for-undo 1) (#("f" 0 1 (fontified t)) . -569) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (apply deactivate-cursor-after-undo 1) (#("f" 0 1 (fontified t)) . -457) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 458 (t 26052 60365 290255 736000)) nil (26052 60376 430023 619000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 12) (#("l" 0 1 (fontified t)) . -882) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (#("l" 0 1 (fontified t)) . -680) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (apply deactivate-cursor-after-undo 11) (#("l" 0 1 (fontified t)) . -474) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (apply activate-cursor-for-undo 12) (#("o" 0 1 (fontified t)) . -885) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (#("o" 0 1 (fontified t)) . -682) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (apply deactivate-cursor-after-undo 11) (#("o" 0 1 (fontified t)) . -475) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (apply activate-cursor-for-undo 12) (#("a" 0 1 (fontified t)) . -888) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (#("a" 0 1 (fontified t)) . -684) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (apply deactivate-cursor-after-undo 11) (#("a" 0 1 (fontified t)) . -476) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (apply activate-cursor-for-undo 12) (#("d" 0 1 (fontified t)) . -891) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (#("d" 0 1 (fontified t)) . -686) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (apply deactivate-cursor-after-undo 11) (#("d" 0 1 (fontified t)) . -477) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (apply activate-cursor-for-undo 12) (#("e" 0 1 (fontified t)) . -894) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (#("e" 0 1 (fontified t)) . -688) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (apply deactivate-cursor-after-undo 11) (#("e" 0 1 (fontified t)) . -478) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (apply activate-cursor-for-undo 12) (#("r" 0 1 (fontified t)) . -897) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (#("r" 0 1 (fontified t)) . -690) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (apply deactivate-cursor-after-undo 11) (#("r" 0 1 (fontified t)) . -479) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 480 (t 26052 60376 440256 419000)) nil (26052 60406 340105 564000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 12) (890 . 891) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (685 . 686) (apply deactivate-cursor-after-undo 11) (476 . 477) (apply activate-cursor-for-undo 12) (887 . 888) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (683 . 684) (apply deactivate-cursor-after-undo 11) (475 . 476) (apply activate-cursor-for-undo 12) (884 . 885) (apply deactivate-cursor-after-undo 12) (apply activate-cursor-for-undo 11) (681 . 682) (apply deactivate-cursor-after-undo 11) (474 . 475)) nil (26052 60406 339959 16000) 0 nil])
([nil nil ((283 . 284) (t 26052 60406 353591 590000)) nil (26052 60437 474728 317000) 0 nil])
([nil nil ((283 . 284)) nil (26052 60437 474726 870000) 0 nil])
([nil nil ((apply yas--snippet-revive 283 293 #s(yas--snippet nil nil nil 19 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 19 nil nil nil nil)) (283 . 293) (#("pub(crate)" 0 10 (fontified nil)) . 283) (283 . 293) (#("p" 0 1 (fontified nil)) . 283) (283 . 284) (#("pub(crate)" 0 10 (fontified nil)) . -283) (283 . 293) (#("p" 0 1 (fontified t)) . -283) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) 284) nil (26052 60437 474722 149000) 0 nil])
([nil nil ((117 . 119) (t 26052 60437 486926 834000)) nil (26052 60452 253023 366000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -118) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) 119) nil (26052 60452 253020 828000) 0 nil])
([nil nil ((118 . 121)) nil (26052 60452 253003 144000) 0 nil])
([nil nil ((120 . 122) (t 26052 60452 296927 744000)) nil (26052 60462 27814 213000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -121) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) 122) nil (26052 60462 27813 12000) 0 nil])
([nil nil ((#("pub(" 0 3 (face font-lock-keyword-face fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t)) . -117) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -3) (undo-tree-id901 . -3) (undo-tree-id902 . -3) (undo-tree-id903 . -3) (undo-tree-id904 . -3) (undo-tree-id905 . -4) (undo-tree-id906 . -4) (undo-tree-id907 . -4) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) (undo-tree-id918 . -4) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -4) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -4) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) 121) nil (26052 60462 27804 594000) 0 nil])
([nil nil ((117 . 118)) nil (26052 60462 27774 683000) 0 nil])
([nil nil ((apply yas--snippet-revive 117 127 #s(yas--snippet nil nil nil 20 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 20 nil nil nil nil)) (117 . 127) (#("pub(crate)" 0 10 (fontified nil)) . 117) (117 . 127) (#("p" 0 1 (fontified nil)) . 117) (117 . 118) (#("pub(crate)" 0 10 (fontified nil)) . -117) (117 . 127) (#("p" 0 1 (fontified t)) . -117) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) 118) nil (26052 60462 27769 716000) 0 nil])
([nil nil ((292 . 293) (t 26052 60462 40261 674000)) nil (26052 60586 980675 0) 0 nil])
([nil nil ((293 . 295)) nil (26052 60586 980674 278000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 298 320 nil nil nil t #s(yas--exit 327 nil))) #s(yas--exit 327 nil) 21 nil #s(yas--field 1 298 320 nil nil nil t #s(yas--exit 327 nil)) nil nil)) (293 . 307) (#("impl $1 {
    $0
}" 0 18 (fontified nil)) . 293) (293 . 311) (#("im" 0 2 (fontified nil)) . 293) (293 . 295) (#("impl" 0 4 (fontified nil)) . -293) (293 . 297) (#("im" 0 2 (fontified t)) . -293) (undo-tree-id1052 . -2) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) (undo-tree-id1057 . -2) (undo-tree-id1058 . -2) (undo-tree-id1059 . -2) (undo-tree-id1060 . -2) 295) nil (26052 60586 980672 663000) 0 nil])
([nil nil ((298 . 299)) nil (26052 60586 980595 272000) 0 nil])
([nil nil ((298 . 320) (#("S" 0 1 (fontified nil)) . 298) (undo-tree-id1043 . -1) (298 . 299) (#("SwapChainSupportDetail" 0 22 (fontified nil)) . -298) (undo-tree-id1044 . -22) (298 . 320) (#("S" 0 1 (face font-lock-type-face fontified t)) . -298) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) 299) nil (26052 60586 980593 948000) 0 nil])
([nil nil ((apply yas--snippet-revive 293 329 #s(yas--snippet nil (#s(yas--field 1 298 320 nil nil nil t #s(yas--exit 327 nil))) #s(yas--exit 327 nil) 21 nil #s(yas--field 1 298 320 nil nil nil t #s(yas--exit 327 nil)) nil nil))) nil (26052 60586 980586 483000) 0 nil])
([nil nil ((327 . 330)) nil (26052 60586 980585 825000) 0 nil])
([nil nil ((apply yas--snippet-revive 327 337 #s(yas--snippet nil nil nil 22 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 22 nil nil nil nil)) (327 . 337) (#("pub(crate)" 0 10 (fontified nil)) . 327) (327 . 337) (#("pub" 0 3 (fontified nil)) . 327) (327 . 330) (#("pub(crate)" 0 10 (fontified nil)) . -327) (327 . 337) (#("pub" 0 3 (face font-lock-keyword-face fontified t)) . -327) (undo-tree-id1030 . -3) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -3) (undo-tree-id1038 . -3) (undo-tree-id1039 . -3) (undo-tree-id1040 . -3) (undo-tree-id1041 . -3) (undo-tree-id1042 . -3) 330) nil (26052 60586 980584 63000) 0 nil])
([nil nil ((337 . 351)) nil (26052 60586 980574 439000) 0 nil])
([nil nil ((351 . 353)) nil (26052 60586 980573 898000) 0 nil])
([nil nil ((352 . 356)) nil (26052 60586 980573 341000) 0 nil])
([nil nil ((352 . 357) (#("&sel" 0 1 (face rust-ampersand-face fontified nil) 1 4 (fontified nil)) . 352) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (353 . 356) (#("&self" 0 5 (fontified nil)) . -353) (353 . 358) (#("sel" 0 3 (fontified t)) . -353) (undo-tree-id1014 . -3) (undo-tree-id1015 . -3) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -2) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -3) (undo-tree-id1022 . -3) (undo-tree-id1023 . -3) (undo-tree-id1024 . -3) (undo-tree-id1025 . -3) (undo-tree-id1026 . -3) (undo-tree-id1027 . -3) (undo-tree-id1028 . -3) (undo-tree-id1029 . -3) 356) nil (26052 60586 980571 383000) 0 nil])
([nil nil ((358 . 363)) nil (26052 60586 980547 805000) 0 nil])
([nil nil ((362 . 366) (#("b" 0 1 (fontified nil)) . 362) (362 . 363) (#("bool" 0 4 (fontified nil)) . -362) (362 . 366) (#("b" 0 1 (fontified t)) . -362) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) 363) nil (26052 60586 980546 631000) 0 nil])
([nil nil ((366 . 369)) nil (26052 60586 980541 828000) 0 nil])
([nil nil ((370 . 374) (#("        " 0 8 (fontified nil)) . 369) (369 . 377) (#("    " 0 4 (fontified nil)) . 369) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (368 . 374)) nil (26052 60586 980540 887000) 0 nil])
([nil nil ((369 . 377)) nil (26052 60586 980537 434000) 0 nil])
([nil nil ((377 . 378)) nil (26052 60586 980536 847000) 0 nil])
([nil nil ((377 . 381) (#("s" 0 1 (fontified nil)) . 377) (377 . 378) (#("self" 0 4 (fontified nil)) . -377) (377 . 381) (#("s" 0 1 (fontified t)) . -377) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) 378) nil (26052 60586 980535 796000) 0 nil])
([nil nil ((381 . 383)) nil (26052 60586 980531 270000) 0 nil])
([nil nil ((382 . 389) (#("f" 0 1 (fontified nil)) . 382) (382 . 383) (#("formats" 0 7 (fontified nil)) . -382) (382 . 389) (#("f" 0 1 (fontified t)) . -382) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) 383) nil (26052 60586 980530 207000) 0 nil])
([nil nil ((389 . 392)) nil (26052 60586 980525 611000) 0 nil])
([nil nil ((apply yas--snippet-revive 390 400 #s(yas--snippet nil nil #s(yas--exit 400 nil) 23 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 400 nil) 23 nil nil nil nil)) (390 . 400) (#("is_empty()$0" 0 12 (fontified nil)) . 390) (390 . 402) (#("is" 0 2 (fontified nil)) . 390) (390 . 392) (#("is_empty()" 0 10 (fontified nil)) . -390) (390 . 400) (#("is" 0 2 (fontified t)) . -390) (undo-tree-id967 . -2) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -2) (undo-tree-id972 . -2) (undo-tree-id973 . -2) (undo-tree-id974 . -2) (undo-tree-id975 . -2) 392) nil (26052 60586 980523 976000) 0 nil])
([nil nil ((400 . 405)) nil (26052 60586 980516 458000) 0 nil])
([nil nil ((404 . 408) (#("s" 0 1 (fontified nil)) . 404) (404 . 405) (#("self" 0 4 (fontified nil)) . -404) (404 . 408) (#("s" 0 1 (fontified t)) . -404) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) 405) nil (26052 60586 980515 339000) 0 nil])
([nil nil ((408 . 409)) nil (26052 60586 980509 539000) 0 nil])
([nil nil ((409 . 410)) nil (26052 60586 980508 933000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 410) (undo-tree-id959 . 1) (undo-tree-id960 . 1)) nil (26052 60586 980508 39000) 0 nil])
([nil nil ((409 . 422) (#("p" 0 1 (fontified nil)) . 409) (409 . 410) (#("present_modes" 0 13 (fontified nil)) . -409) (409 . 422) (#("p" 0 1 (fontified t)) . -409) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) 410) nil (26052 60586 980505 156000) 0 nil])
([nil nil ((422 . 425)) nil (26052 60586 980497 522000) 0 nil])
([nil nil ((apply yas--snippet-revive 423 433 #s(yas--snippet nil nil #s(yas--exit 433 nil) 24 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 433 nil) 24 nil nil nil nil)) (423 . 433) (#("is_empty()$0" 0 12 (fontified nil)) . 423) (423 . 435) (#("is" 0 2 (fontified nil)) . 423) (423 . 425) (#("is_empty()" 0 10 (fontified nil)) . -423) (423 . 433) (#("is" 0 2 (fontified t)) . -423) (undo-tree-id941 . -2) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) 425) nil (26052 60586 980494 703000) 0 nil])
([nil nil ((433 . 434)) nil (26052 60586 980478 203000) 0 nil])
([nil nil ((377 . 378) (t 26052 60586 993602 680000)) nil (26052 60595 122327 154000) 0 nil])
([nil nil ((405 . 406)) nil (26052 60595 122322 33000) 0 nil])
([nil nil ((115 . 116) (t 26052 60595 133603 181000)) nil (26052 60930 320993 687000) 0 nil])
([nil nil ((116 . 118)) nil (26052 60930 320992 562000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 121 130 nil nil nil t #s(yas--exit 137 nil))) #s(yas--exit 137 nil) 28 nil #s(yas--field 1 121 130 nil nil nil t #s(yas--exit 137 nil)) nil nil)) (116 . 130) (#("impl $1 {
    $0
}" 0 18 (fontified nil)) . 116) (116 . 134) (#("im" 0 2 (fontified nil)) . 116) (116 . 118) (#("impl" 0 4 (fontified nil)) . -116) (116 . 120) (#("im" 0 2 (fontified t)) . -116) (undo-tree-id1074 . -2) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) 118) nil (26052 60930 320990 446000) 0 nil])
([nil nil ((121 . 123)) nil (26052 60930 320982 155000) 0 nil])
([nil nil ((121 . 130) (#("Sw" 0 2 (fontified nil)) . 121) (undo-tree-id1061 . -2) (121 . 123) (#("SwapChain" 0 9 (fontified nil)) . -121) (undo-tree-id1062 . -9) (121 . 130) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -121) (undo-tree-id1063 . -2) (undo-tree-id1064 . -2) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -2) (undo-tree-id1070 . -2) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) 123) nil (26052 60930 320979 968000) 0 nil])
([nil nil ((apply yas--snippet-revive 116 139 #s(yas--snippet nil (#s(yas--field 1 121 130 nil nil nil t #s(yas--exit 137 nil))) #s(yas--exit 137 nil) 28 nil #s(yas--field 1 121 130 nil nil nil t #s(yas--exit 137 nil)) nil nil))) nil (26052 60930 320962 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4938 . 4939) (nil fontified nil 137 . 4939) (137 . 4939)) nil (26052 60930 320960 442000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -137) 116) nil (26052 60930 320954 364000) 0 nil])
([nil nil ((#("Instance" 0 8 (face font-lock-type-face fontified t)) . -182) (undo-tree-id1137 . -8) (undo-tree-id1138 . -8) (undo-tree-id1139 . -8) (undo-tree-id1140 . -8) (undo-tree-id1141 . -8) (undo-tree-id1142 . -8) (undo-tree-id1143 . -8) (undo-tree-id1144 . -8) (undo-tree-id1145 . -8) (undo-tree-id1146 . -8) (undo-tree-id1147 . -8) (undo-tree-id1148 . -8) 190 (t 26052 60930 333623 748000)) nil (26052 60956 38292 620000) 0 nil])
([nil nil ((#("ash::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -177) (undo-tree-id1123 . -5) (undo-tree-id1124 . -5) (undo-tree-id1125 . -5) (undo-tree-id1126 . -5) (undo-tree-id1127 . -5) (undo-tree-id1128 . -5) (undo-tree-id1129 . -5) (undo-tree-id1130 . -5) (undo-tree-id1131 . -5) (undo-tree-id1132 . -5) (undo-tree-id1133 . -5) (undo-tree-id1134 . -5) (undo-tree-id1135 . -5) (undo-tree-id1136 . -5) 182) nil (26052 60956 38282 609000) 0 nil])
([nil nil ((177 . 180)) nil (26052 60956 38272 695000) 0 nil])
([nil nil ((177 . 184) (#("cra" 0 3 (fontified nil)) . 177) (177 . 180) (#("crate::" 0 7 (fontified nil)) . -177) (177 . 184) (#("cra" 0 3 (fontified t)) . -177) (undo-tree-id1112 . -3) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -3) (undo-tree-id1119 . -3) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) 180) nil (26052 60956 38271 245000) 0 nil])
([nil nil ((184 . 186)) nil (26052 60956 38262 358000) 0 nil])
([nil nil ((184 . 192) (#("in" 0 2 (fontified nil)) . 184) (184 . 186) (#("instance" 0 8 (fontified nil)) . -184) (184 . 192) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -184) (undo-tree-id1105 . -2) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) 186) nil (26052 60956 38260 998000) 0 nil])
([nil nil ((192 . 193)) nil (26052 60956 38255 235000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -192) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) 193) nil (26052 60956 38254 480000) 0 nil])
([nil nil ((192 . 195)) nil (26052 60956 38251 643000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-type-face fontified t)) . -194) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) 195) nil (26052 60956 38250 731000) 0 nil])
([nil nil ((194 . 195)) nil (26052 60956 38247 140000) 0 nil])
([nil nil ((194 . 202) (#("I" 0 1 (fontified nil)) . 194) (194 . 195) (#("Instance" 0 8 (fontified nil)) . -194) (194 . 202) (#("I" 0 1 (face font-lock-type-face fontified t)) . -194) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) 195) nil (26052 60956 38245 912000) 0 nil])
([nil nil ((385 . 394)) nil (26052 60956 38241 662000) 0 nil])
([nil nil ((394 . 404)) nil (26052 60956 38241 152000) 0 nil])
([nil nil ((404 . 410)) nil (26052 60956 38240 504000) 0 nil])
([nil nil ((409 . 417) (#("i" 0 1 (fontified nil)) . 409) (409 . 410) (#("instance" 0 8 (fontified nil)) . -409) (409 . 417) (#("i" 0 1 (fontified t)) . -409) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) 410) nil (26052 60956 38239 67000) 0 nil])
([nil nil ((417 . 419)) nil (26052 60956 38233 76000) 0 nil])
([nil nil ((418 . 426) (#("i" 0 1 (fontified nil)) . 418) (418 . 419) (#("instance" 0 8 (fontified nil)) . -418) (418 . 426) (#("i" 0 1 (fontified t)) . -418) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) 419) nil (26052 60956 38230 324000) 0 nil])
([nil nil ((426 . 427)) nil (26052 60956 38215 95000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -310) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -311) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -312) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -313) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -314) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) 315 (t 26052 60956 83625 327000)) nil (26052 60964 721127 898000) 0 nil])
([nil nil ((#("QueueFamilyIndices" 0 18 (face font-lock-type-face fontified t)) . -335) (undo-tree-id1220 . -8) (undo-tree-id1221 . -18) (undo-tree-id1222 . -8) (undo-tree-id1223 . -8) (undo-tree-id1224 . -8) (undo-tree-id1225 . -8) (undo-tree-id1226 . -18) (undo-tree-id1227 . -18) (undo-tree-id1228 . -18) (undo-tree-id1229 . -18) (undo-tree-id1230 . -18) (undo-tree-id1231 . -18) (undo-tree-id1232 . -18) 353 (t 26052 60964 730292 521000)) nil (26052 60978 869033 943000) 0 nil])
([nil nil ((335 . 337)) nil (26052 60978 869023 359000) 0 nil])
([nil nil ((335 . 342) (#("cr" 0 2 (fontified nil)) . 335) (335 . 337) (#("crate::" 0 7 (fontified nil)) . -335) (335 . 342) (#("cr" 0 2 (fontified t)) . -335) (undo-tree-id1211 . -2) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) 337) nil (26052 60978 869021 995000) 0 nil])
([nil nil ((342 . 343)) nil (26052 60978 869014 441000) 0 nil])
([nil nil ((342 . 348) (#("d" 0 1 (fontified nil)) . 342) (342 . 343) (#("device" 0 6 (fontified nil)) . -342) (342 . 348) (#("d" 0 1 (fontified t)) . -342) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) 343) nil (26052 60978 869012 836000) 0 nil])
([nil nil ((348 . 351)) nil (26052 60978 869005 380000) 0 nil])
([nil nil ((350 . 368) (#("Q" 0 1 (fontified nil)) . 350) (350 . 351) (#("QueueFamilyIndices" 0 18 (fontified nil)) . -350) (350 . 368) (#("Q" 0 1 (face font-lock-type-face fontified t)) . -350) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) 351) nil (26052 60978 869001 239000) 0 nil])
([nil nil (("surface_stuff" . -1892) (1905 . 1912) (#("surface_stuff" 0 13 (fontified t)) . -516) (529 . 536) (nil fontified t 287 . 294) (t 26052 60978 880293 389000) (nil face font-lock-variable-name-face 287 . 294) (t 26052 60978 880293 389000) (#("surface_stuff" 0 13 (face font-lock-variable-name-face fontified t)) . -287) (t 26052 60978 880293 389000) (300 . 307) 287 (t 26052 60978 880293 389000)) nil (26052 61021 583998 278000) 0 nil])
([nil nil ((112 . 117) (t 26052 61021 596962 674000)) nil (26052 61048 441833 521000) 0 nil])
([nil nil ((nil rear-nonsticky nil 256 . 257) (nil fontified nil 117 . 257) (117 . 257)) nil (26052 61048 441831 814000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -117) 39) nil (26052 61048 441827 20000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -523) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -524) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -525) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -526) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -527) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) 528 (t 26052 61048 453630 992000)) nil (26052 61054 204821 380000) 0 nil])
([nil nil ((#("VulkanApp" 0 9 (face font-lock-type-face fontified t)) . -600) (undo-tree-id1343 . -9) (undo-tree-id1344 . -9) (undo-tree-id1345 . -9) (undo-tree-id1346 . -9) (undo-tree-id1347 . -9) (undo-tree-id1348 . -9) (undo-tree-id1349 . -9) (undo-tree-id1350 . -9) (undo-tree-id1351 . -9) (undo-tree-id1352 . -9) (undo-tree-id1353 . -9) (undo-tree-id1354 . -9) (undo-tree-id1355 . -9) (undo-tree-id1356 . -9) 609 (t 26052 61054 216964 679000)) nil (26052 61066 242088 77000) 0 nil])
([nil nil ((600 . 601)) nil (26052 61066 242073 336000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -600) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) 601) nil (26052 61066 242071 906000) 0 nil])
([nil nil ((600 . 601)) nil (26052 61066 242066 169000) 0 nil])
([nil nil ((600 . 606) (#("s" 0 1 (fontified nil)) . 600) (600 . 601) (#("self::" 0 6 (fontified nil)) . -600) (600 . 606) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -600) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) 601) nil (26052 61066 242063 687000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -604) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#(":" 0 1 (fontified t)) . -605) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 606) nil (26052 61066 242051 58000) 0 nil])
([nil nil ((#("VulkanApp" 0 9 (face font-lock-type-face fontified t)) . -687) (undo-tree-id1363 . -9) (undo-tree-id1364 . -9) (undo-tree-id1365 . -9) (undo-tree-id1366 . -9) (undo-tree-id1367 . -9) (undo-tree-id1368 . -9) (undo-tree-id1369 . -9) (undo-tree-id1370 . -9) (undo-tree-id1371 . -9) (undo-tree-id1372 . -9) 696 (t 26052 61066 243632 85000)) nil (26052 61074 880855 569000) 0 nil])
([nil nil ((687 . 688)) nil (26052 61074 880846 728000) 0 nil])
([nil nil ((687 . 693) (#("s" 0 1 (fontified nil)) . 687) (687 . 688) (#("self::" 0 6 (fontified nil)) . -687) (687 . 693) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -687) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) 688) nil (26052 61074 880841 795000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -691) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (#(":" 0 1 (fontified t)) . -692) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) 693 (t 26052 61074 893632 615000)) nil (26052 61075 749351 393000) 0 nil])
([nil nil ((#("VulkanApp" 0 9 (face font-lock-type-face fontified t)) . -785) (undo-tree-id1430 . -9) (undo-tree-id1431 . -9) 794 (t 26052 61075 760299 335000)) nil (26052 61085 890276 63000) 0 nil])
([nil nil ((785 . 787)) nil (26052 61085 890274 106000) 0 nil])
([nil nil ((785 . 791) (#("se" 0 2 (fontified nil)) . 785) (785 . 787) (#("self::" 0 6 (fontified nil)) . -785) (785 . 791) (#("se" 0 2 (face font-lock-constant-face fontified t)) . -785) (undo-tree-id1422 . -2) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -2) (undo-tree-id1426 . -2) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) 787) nil (26052 61088 331344 142000) 0 nil])
([nil nil ((791 . 792)) nil (26052 61090 914827 780000) 0 nil] [nil nil ((#(":" 0 1 (fontified t)) . -789) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (#(":" 0 1 (fontified t)) . -790) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) 791) ((789 . 791)) (26052 61087 451221 972000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -790) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -791) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) 792) nil (26052 61090 914822 921000) 0 nil])
([nil nil ((#("VulkanApp::" 0 9 (face font-lock-type-face fontified t) 9 11 (fontified t)) . -877) (undo-tree-id1395 . -11) (undo-tree-id1396 . -9) (undo-tree-id1397 . -9) (undo-tree-id1398 . -9) (undo-tree-id1399 . -9) (undo-tree-id1400 . -9) (undo-tree-id1401 . -10) (undo-tree-id1402 . -11) 888) ((877 . 888)) (26052 61087 35626 981000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -789) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) 790 (t 26052 61090 923633 599000)) nil (26052 61091 970182 347000) 0 nil])
([nil nil ((877 . 878)) ((#("s" 0 1 (fontified t)) . 877) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1)) (26052 61086 437237 217000) 0 nil])
([nil nil ((#("VulkanApp" 0 9 (face font-lock-type-face fontified t)) . -877) (undo-tree-id1538 . -9) (undo-tree-id1539 . -9) (undo-tree-id1540 . -9) (undo-tree-id1541 . -9) (undo-tree-id1542 . -9) (undo-tree-id1543 . -9) 886 (t 26052 61091 983633 664000)) nil (26052 61099 134027 217000) 0 nil])
([nil nil ((877 . 883) (#("schoose_swapchain_extent" 0 1 (fontified nil) 1 24 (fontified nil)) . 877) (undo-tree-id1388 . 23) (877 . 878) (#("self::" 0 6 (fontified nil)) . -877) (877 . 883) (#("s" 0 1 (fontified t)) . -877) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) 878) ((877 . 878) (#("self::" 0 6 (fontified nil)) . 877) (877 . 883) (#("s" 0 1 (fontified nil)) . 877) (877 . 901) (#("self::" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 877) (undo-tree-id1432 . -6) (undo-tree-id1433 . -6) (undo-tree-id1434 . -6) (undo-tree-id1435 . -6) (undo-tree-id1436 . -6) (undo-tree-id1437 . -6) (undo-tree-id1438 . -6) (undo-tree-id1439 . -6) (undo-tree-id1440 . -6) (t 26052 61085 903633 291000)) (26052 61085 890240 424000) 0 nil])
([nil nil ((877 . 879)) nil (26052 61099 134022 272000) 0 nil])
nil
([nil nil ((877 . 883) (#("se" 0 2 (fontified nil)) . 877) (877 . 879) (#("self::" 0 6 (fontified nil)) . -877) (877 . 883) (#("se" 0 2 (face font-lock-constant-face fontified t)) . -877) (undo-tree-id1530 . -2) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) 879) nil (26052 61099 134020 374000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -881) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#(":" 0 1 (fontified t)) . -882) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) 883) nil (26052 61099 134009 898000) 0 nil])
([nil nil ((693 . 694) (t 26052 61099 176967 438000)) nil (26052 61129 155840 132000) 0 nil])
([nil nil ((693 . 694)) nil (26052 61129 155839 389000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -693) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) 694) nil (26052 61129 155838 155000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -693) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . 1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) 694) nil (26052 61129 155831 287000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . -687) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -4) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) 691) nil (26052 61129 155825 672000) 0 nil])
([nil nil ((687 . 689)) nil (26052 61129 155817 801000) 0 nil])
([nil nil ((687 . 696) (#("Sw" 0 2 (fontified nil)) . 687) (687 . 689) (#("SwapChain" 0 9 (fontified nil)) . -687) (687 . 696) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -687) (undo-tree-id1544 . -2) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -2) (undo-tree-id1553 . -2) (undo-tree-id1554 . -2) (undo-tree-id1555 . -2) (undo-tree-id1556 . -2) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) 689) nil (26052 61129 155813 197000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . -790) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) 794 (t 26052 61129 170302 607000)) nil (26052 61138 103546 216000) 0 nil])
([nil nil ((790 . 791)) nil (26052 61138 103544 225000) 0 nil])
([nil nil ((791 . 792)) nil (26052 61138 103543 689000) 0 nil])
([nil nil ((790 . 799) (#("Sw" 0 2 (fontified nil)) . 790) (790 . 792) (#("SwapChain" 0 9 (fontified nil)) . -790) (790 . 799) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -790) (undo-tree-id1595 . -2) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) 792) nil (26052 61138 103542 99000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . -887) (undo-tree-id1593 . -4) (undo-tree-id1594 . -4) 891) nil (26052 61138 103532 983000) 0 nil])
([nil nil ((887 . 889)) nil (26052 61138 103530 123000) 0 nil])
([nil nil ((887 . 896) (#("Sw" 0 2 (fontified nil)) . 887) (887 . 889) (#("SwapChain" 0 9 (fontified nil)) . -887) (887 . 896) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -887) (undo-tree-id1583 . -2) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) 889) nil (26052 61138 103525 951000) 0 nil])
([nil nil ((1932 . 1937) (t 26052 61138 146969 824000)) nil (26052 61144 766235 25000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1936) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) 1937) nil (26052 61144 766232 562000) 0 nil])
([nil nil ((1936 . 1937)) nil (26052 61144 766216 567000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -3215) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -3216) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -3217) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -3218) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -3219) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) 3220 (t 26052 61144 780303 564000)) nil (26052 61151 467507 773000) 0 nil])
([nil nil ((549 . 550) (t 26052 61151 480303 976000)) nil (26052 61161 854881 358000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3241) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (#("o" 0 1 (fontified t)) . -3242) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (#("a" 0 1 (fontified t)) . -3243) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (#("d" 0 1 (fontified t)) . -3244) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (#("e" 0 1 (fontified t)) . -3245) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("r" 0 1 (fontified t)) . -3246) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) 3247 (t 26052 61161 866971 280000)) nil (26052 61171 824503 268000) 0 nil])
([nil nil ((3241 . 3244)) nil (26052 61171 824087 432000) 0 nil])
([nil nil ((3231 . 3245) (#("swapchain_ext" 0 13 (fontified nil)) . 3231) (3231 . 3244) (#("swap_chain_ext" 0 14 (fontified nil)) . -3231) (3231 . 3245) (#("swapchain_ext" 0 13 (fontified t)) . -3231) (undo-tree-id1682 . -10) (undo-tree-id1683 . -13) (undo-tree-id1684 . -10) (undo-tree-id1685 . -10) (undo-tree-id1686 . -10) (undo-tree-id1687 . -10) (undo-tree-id1688 . -10) (undo-tree-id1689 . -10) (undo-tree-id1690 . -10) (undo-tree-id1691 . -10) (undo-tree-id1692 . -10) (undo-tree-id1693 . -10) (undo-tree-id1694 . -10) (undo-tree-id1695 . -10) (undo-tree-id1696 . -10) (undo-tree-id1697 . -10) (undo-tree-id1698 . -10) (undo-tree-id1699 . -10) (undo-tree-id1700 . -10) (undo-tree-id1701 . -10) (undo-tree-id1702 . -10) (undo-tree-id1703 . -10) (undo-tree-id1704 . -10) (undo-tree-id1705 . -10) (undo-tree-id1706 . -10) (undo-tree-id1707 . -10) (undo-tree-id1708 . -10) (undo-tree-id1709 . -11) (undo-tree-id1710 . -11) (undo-tree-id1711 . -12) (undo-tree-id1712 . -12) (undo-tree-id1713 . -12) (undo-tree-id1714 . -13) (undo-tree-id1715 . -13) 3244) nil (26052 61171 824082 407000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -2752) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2753) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2754) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -2755) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2756) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2757) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) 2758 (t 26052 61171 866971 893000)) nil (26052 61182 248029 359000) 0 nil])
([nil nil ((2752 . 2755)) nil (26052 61182 247624 657000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -68) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) 69 (t 26052 61182 260305 865000)) nil (26052 61194 353533 507000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3231) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) 3232 (t 26052 61194 366973 276000)) nil (26052 61211 788108 124000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 14) (#("l" 0 1 (fontified t)) . -3062) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (apply deactivate-cursor-after-undo 14) (#("l" 0 1 (fontified t)) . -2868) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (apply activate-cursor-for-undo 14) (#("o" 0 1 (fontified t)) . -3064) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (apply deactivate-cursor-after-undo 14) (#("o" 0 1 (fontified t)) . -2869) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (apply activate-cursor-for-undo 14) (#("a" 0 1 (fontified t)) . -3066) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (apply deactivate-cursor-after-undo 14) (#("a" 0 1 (fontified t)) . -2870) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (apply activate-cursor-for-undo 14) (#("d" 0 1 (fontified t)) . -3068) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (apply deactivate-cursor-after-undo 14) (#("d" 0 1 (fontified t)) . -2871) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (apply activate-cursor-for-undo 14) (#("e" 0 1 (fontified t)) . -3070) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (apply deactivate-cursor-after-undo 14) (#("e" 0 1 (fontified t)) . -2872) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (apply activate-cursor-for-undo 14) (#("r" 0 1 (fontified t)) . -3072) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (apply deactivate-cursor-after-undo 14) (#("r" 0 1 (fontified t)) . -2873) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) 2874) nil (26052 61211 788100 515000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 14) (3067 . 3068) (apply deactivate-cursor-after-undo 14) (2870 . 2871) (apply activate-cursor-for-undo 14) (3065 . 3066) (apply deactivate-cursor-after-undo 14) (2869 . 2870) (apply activate-cursor-for-undo 14) (3063 . 3064) (apply deactivate-cursor-after-undo 14) (2868 . 2869)) nil (26052 61211 788033 897000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -36) (#("
" 0 1 (fontified t)) . -3516) (undo-tree-id2036 . -1) 4644 (t 26052 61211 790307 678000)) nil (26052 61234 607788 372000) 0 nil])
([nil nil ((#("WIDTH" 0 5 (face font-lock-type-face fontified t)) . -4728) (undo-tree-id2107 . -5) (undo-tree-id2108 . -3) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -2) (undo-tree-id2112 . -3) (undo-tree-id2113 . -4) (undo-tree-id2114 . -5) (undo-tree-id2115 . -5) (undo-tree-id2116 . -4) (undo-tree-id2117 . -3) (undo-tree-id2118 . -5) (undo-tree-id2119 . -5) (undo-tree-id2120 . -5) (undo-tree-id2121 . -5) (undo-tree-id2122 . -5) (undo-tree-id2123 . -5) (undo-tree-id2124 . -5) (undo-tree-id2125 . -5) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (undo-tree-id2128 . -5) (undo-tree-id2129 . -5) (undo-tree-id2130 . -5) (undo-tree-id2131 . -5) 4733 (t 26052 61235 290309 121000)) nil (26052 61510 147030 511000) 0 nil] [nil nil ((4631 . 4636) (t 26052 61228 776975 389000)) ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . 4631) (undo-tree-id2037 . -5) (undo-tree-id2038 . -5) (undo-tree-id2039 . -5) (undo-tree-id2040 . -5) (undo-tree-id2041 . -5) (undo-tree-id2042 . -5) (undo-tree-id2043 . -5) (undo-tree-id2044 . -5) (undo-tree-id2045 . -5) (undo-tree-id2046 . -5) (undo-tree-id2047 . -5) (undo-tree-id2048 . -5) (t 26052 61232 616975 623000)) (26052 61232 570698 588000) 0 nil])
([nil nil ((#("WINDOW_" 0 7 (face font-lock-type-face fontified t)) . -4721) (undo-tree-id2064 . -7) (undo-tree-id2065 . -7) (undo-tree-id2066 . -7) (undo-tree-id2067 . -7) (undo-tree-id2068 . -6) (undo-tree-id2069 . -5) (undo-tree-id2070 . -1) (undo-tree-id2071 . -2) (undo-tree-id2072 . -3) (undo-tree-id2073 . -4) (undo-tree-id2074 . -5) (undo-tree-id2075 . -6) (undo-tree-id2076 . -7) (undo-tree-id2077 . -7) (undo-tree-id2078 . -7) (undo-tree-id2079 . -7) (undo-tree-id2080 . -7) (undo-tree-id2081 . -7) (undo-tree-id2082 . -7) (undo-tree-id2083 . -7) (undo-tree-id2084 . -7) (undo-tree-id2085 . -7) (undo-tree-id2086 . -6) (undo-tree-id2087 . -5) (undo-tree-id2088 . -3) (undo-tree-id2089 . -2) (undo-tree-id2090 . -1) (undo-tree-id2091 . -7) (undo-tree-id2092 . -7) (undo-tree-id2093 . -7) (undo-tree-id2094 . -7) (undo-tree-id2095 . -7) (undo-tree-id2096 . -7) (undo-tree-id2097 . -7) (undo-tree-id2098 . -7) (undo-tree-id2099 . -7) (undo-tree-id2100 . -7) (undo-tree-id2101 . -7) (undo-tree-id2102 . -7) (undo-tree-id2103 . -7) (undo-tree-id2104 . -7) (undo-tree-id2105 . -7) (undo-tree-id2106 . -7) 4728) nil (26052 61510 147012 648000) 0 nil])
nil
([nil nil ((4721 . 4724)) nil (26052 61510 146983 125000) 0 nil])
([nil nil ((#("HEIGHT" 0 6 (face font-lock-type-face fontified t)) . -4917) (undo-tree-id2058 . -6) (undo-tree-id2059 . -6) (undo-tree-id2060 . -6) (undo-tree-id2061 . -6) (undo-tree-id2062 . -6) (undo-tree-id2063 . -6) 4923) nil (26052 61510 146982 44000) 0 nil])
([nil nil ((#("WINDOW_" 0 7 (face font-lock-type-face fontified t)) . -4910) (undo-tree-id2049 . -7) (undo-tree-id2050 . -6) (undo-tree-id2051 . -7) (undo-tree-id2052 . -7) (undo-tree-id2053 . -7) (undo-tree-id2054 . -7) (undo-tree-id2055 . -7) (undo-tree-id2056 . -7) (undo-tree-id2057 . -7) 4917) nil (26052 61510 146975 402000) 0 nil])
([nil nil ((4910 . 4913)) nil (26052 61510 146959 899000) 0 nil])
([nil nil ((4644 . 4656) (#("            " 0 12 (fontified nil)) . 4643) (4643 . 4655) (4643 . 4644) (t 26052 61510 160326 4000)) nil (26052 61742 789011 617000) 0 nil])
([nil nil ((4644 . 4656) (#("            " 0 12 (fontified nil)) . 4643) (4643 . 4655) (4643 . 4644)) nil (26052 61742 789010 493000) 0 nil])
([nil nil ((4656 . 4660)) nil (26052 61742 789009 624000) 0 nil])
([nil nil ((4656 . 4661) (#("wini" 0 4 (fontified nil)) . 4656) (4656 . 4660) (#("winit" 0 5 (fontified nil)) . -4656) (4656 . 4661) (#("wini" 0 4 (fontified t)) . -4656) (undo-tree-id2287 . -4) (undo-tree-id2288 . -1) (undo-tree-id2289 . -2) (undo-tree-id2290 . -2) (undo-tree-id2291 . -3) (undo-tree-id2292 . -3) (undo-tree-id2293 . -4) (undo-tree-id2294 . -4) 4660) nil (26052 61742 789008 485000) 0 nil])
([nil nil ((4661 . 4664)) nil (26052 61742 789002 605000) 0 nil])
([nil nil ((4663 . 4669) (#("W" 0 1 (fontified nil)) . 4663) (4663 . 4664) (#("window" 0 6 (fontified nil)) . -4663) (4663 . 4669) (#("W" 0 1 (face font-lock-type-face fontified t)) . -4663) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) 4664) nil (26052 61742 789001 435000) 0 nil])
([nil nil ((4669 . 4672)) nil (26052 61742 788995 269000) 0 nil])
([nil nil ((4671 . 4677) (#("w" 0 1 (fontified nil)) . 4671) (4671 . 4672) (#("Window" 0 6 (fontified nil)) . -4671) (4671 . 4677) (#("w" 0 1 (fontified t)) . -4671) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) 4672) nil (26052 61742 788994 127000) 0 nil])
([nil nil ((4677 . 4680)) nil (26052 61742 788989 800000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4679) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) 4680) nil (26052 61742 788989 19000) 0 nil])
([nil nil ((4679 . 4680)) nil (26052 61742 788985 169000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4679) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) 4680) nil (26052 61742 788984 440000) 0 nil])
([nil nil ((4679 . 4680)) nil (26052 61742 788981 938000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -4679) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) 4680) nil (26052 61742 788981 174000) 0 nil])
([nil nil ((4679 . 4683)) nil (26052 61742 788977 727000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4690 4695 nil nil nil nil #s(yas--exit 4696 nil))) #s(yas--exit 4696 nil) 29 nil #s(yas--field 1 4690 4695 nil nil nil nil #s(yas--exit 4696 nil)) nil nil)) (4679 . 4696) (#("inner_size(${1:&self})$0" 0 24 (fontified nil)) . 4679) (4679 . 4703) (#("size" 0 4 (fontified nil)) . 4679) (4679 . 4683) (#("inner_size(…)" 0 13 (fontified nil)) . -4679) (4679 . 4692) (#("size" 0 4 (fontified t)) . -4679) (undo-tree-id2242 . -4) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -2) (undo-tree-id2246 . -2) (undo-tree-id2247 . -2) (undo-tree-id2248 . -2) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -4) (undo-tree-id2255 . -4) (undo-tree-id2256 . -4) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) (undo-tree-id2259 . -4) 4683) nil (26052 61742 788975 939000) 0 nil])
([nil nil ((apply yas--snippet-revive 4679 4696 #s(yas--snippet nil (#s(yas--field 1 4690 4695 nil nil nil nil #s(yas--exit 4696 nil))) #s(yas--exit 4696 nil) 29 nil #s(yas--field 1 4690 4695 nil nil nil nil #s(yas--exit 4696 nil)) nil nil))) nil (26052 61742 788964 319000) 0 nil])
([nil nil ((#("winit::window::Window::inner_size(&self)" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-4-face) fontified t) 34 35 (face rust-ampersand-face fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 40 (face (rainbow-delimiters-depth-4-face) fontified t)) . 4656) (undo-tree-id2134 . -5) (undo-tree-id2135 . -5) (undo-tree-id2136 . -6) (undo-tree-id2137 . -7) (undo-tree-id2138 . -7) (undo-tree-id2139 . -7) (undo-tree-id2140 . -7) (undo-tree-id2141 . -7) (undo-tree-id2142 . -7) (undo-tree-id2143 . -7) (undo-tree-id2144 . -7) (undo-tree-id2145 . -7) (undo-tree-id2146 . -13) (undo-tree-id2147 . -13) (undo-tree-id2148 . -14) (undo-tree-id2149 . -15) (undo-tree-id2150 . -15) (undo-tree-id2151 . -15) (undo-tree-id2152 . -15) (undo-tree-id2153 . -15) (undo-tree-id2154 . -15) (undo-tree-id2155 . -15) (undo-tree-id2156 . -21) (undo-tree-id2157 . -21) (undo-tree-id2158 . -22) (undo-tree-id2159 . -23) (undo-tree-id2160 . -23) (undo-tree-id2161 . -23) (undo-tree-id2162 . -23) (undo-tree-id2163 . -23) (undo-tree-id2164 . -23) (undo-tree-id2165 . -23) (undo-tree-id2166 . -23) (undo-tree-id2167 . -23) (undo-tree-id2168 . -23) (undo-tree-id2169 . -23) (undo-tree-id2170 . -23) (undo-tree-id2171 . -23) (undo-tree-id2172 . -23) (undo-tree-id2173 . -23) (undo-tree-id2174 . -23) (undo-tree-id2175 . -23) (undo-tree-id2176 . -23) (undo-tree-id2177 . -23) (undo-tree-id2178 . -23) (undo-tree-id2179 . -23) (undo-tree-id2180 . -23) (undo-tree-id2181 . -23) (undo-tree-id2182 . -23) (undo-tree-id2183 . -23) (undo-tree-id2184 . -23) (undo-tree-id2185 . -23) (undo-tree-id2186 . -23) (undo-tree-id2187 . -23) (undo-tree-id2188 . -23) (undo-tree-id2189 . -23) (undo-tree-id2190 . -23) (undo-tree-id2191 . -23) (undo-tree-id2192 . -23) (undo-tree-id2193 . -23) (undo-tree-id2194 . -23) (undo-tree-id2195 . -23) (undo-tree-id2196 . -23) (undo-tree-id2197 . -40) (undo-tree-id2198 . -40) (undo-tree-id2199 . -34) (undo-tree-id2200 . -34) (undo-tree-id2201 . -34) (undo-tree-id2202 . -34) (undo-tree-id2203 . -34) (undo-tree-id2204 . -34) (undo-tree-id2205 . -34) (undo-tree-id2206 . -34) (undo-tree-id2207 . -34) (undo-tree-id2208 . -34) (undo-tree-id2209 . -34) (undo-tree-id2210 . -34) (undo-tree-id2211 . -34) (undo-tree-id2212 . -34) (undo-tree-id2213 . -34) (undo-tree-id2214 . -34) (undo-tree-id2215 . -34) (undo-tree-id2216 . -34) (undo-tree-id2217 . -34) (undo-tree-id2218 . -34) (undo-tree-id2219 . -34) (undo-tree-id2220 . -34) (undo-tree-id2221 . -34) (undo-tree-id2222 . -34) (undo-tree-id2223 . -34) (undo-tree-id2224 . -34) (undo-tree-id2225 . -34) (undo-tree-id2226 . -34) (undo-tree-id2227 . -34) (undo-tree-id2228 . -34) (undo-tree-id2229 . -34) (undo-tree-id2230 . -34) (undo-tree-id2231 . -34) (undo-tree-id2232 . -34) (undo-tree-id2233 . -34) (undo-tree-id2234 . -34) (undo-tree-id2235 . -34) (undo-tree-id2236 . -40) (undo-tree-id2237 . -40) (undo-tree-id2238 . -40) (undo-tree-id2239 . -40) (undo-tree-id2240 . -40) (undo-tree-id2241 . -40)) nil (26052 61742 788957 958000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4656) (undo-tree-id2132 . 1) (undo-tree-id2133 . -1)) nil (26052 61742 787876 622000) 0 nil])
([nil nil ((4471 . 4479) (t 26052 61742 833673 620000)) nil (26052 61763 719362 290000) 0 nil])
([nil nil ((4479 . 4482)) nil (26052 61763 719361 575000) 0 nil])
([nil nil ((4481 . 4486) (#("w" 0 1 (fontified nil)) . 4481) (4481 . 4482) (#("winit" 0 5 (fontified nil)) . -4481) (4481 . 4486) (#("w" 0 1 (fontified t)) . -4481) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) 4482) nil (26052 61763 719360 159000) 0 nil])
([nil nil ((4486 . 4489)) nil (26052 61763 719352 67000) 0 nil])
([nil nil ((4488 . 4494) (#("w" 0 1 (fontified nil)) . 4488) (4488 . 4489) (#("window" 0 6 (fontified nil)) . -4488) (4488 . 4494) (#("w" 0 1 (fontified t)) . -4488) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) 4489) nil (26052 61763 719350 704000) 0 nil])
([nil nil ((4494 . 4497)) nil (26052 61763 719345 932000) 0 nil])
([nil nil ((4496 . 4502) (#("W" 0 1 (fontified nil)) . 4496) (4496 . 4497) (#("Window" 0 6 (fontified nil)) . -4496) (4496 . 4502) (#("W" 0 1 (face font-lock-type-face fontified t)) . -4496) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) 4497) nil (26052 61763 719341 628000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -4687) (undo-tree-id2441 . -12) (undo-tree-id2442 . -12) (undo-tree-id2443 . -12) (undo-tree-id2444 . -12) (undo-tree-id2445 . -12) (undo-tree-id2446 . -12) (undo-tree-id2447 . -12) (undo-tree-id2448 . -12) 4699 (t 26052 61763 733674 905000)) nil (26052 61801 692071 24000) 0 nil])
([nil nil ((4687 . 4688)) nil (26052 61801 692061 161000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -4687) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) 4688) nil (26052 61801 692059 805000) 0 nil])
([nil nil ((4687 . 4693)) nil (26052 61801 692054 485000) 0 nil])
([nil nil ((4692 . 4701)) nil (26052 61801 692053 484000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -4700) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) 4701) nil (26052 61801 692051 979000) 0 nil])
([nil nil ((#("height, " 0 8 (fontified t)) . -4692) (undo-tree-id2394 . -8) (undo-tree-id2395 . -8) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -2) (undo-tree-id2405 . -2) (undo-tree-id2406 . -2) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -5) (undo-tree-id2412 . -5) (undo-tree-id2413 . -6) (undo-tree-id2414 . -6) (undo-tree-id2415 . -6) (undo-tree-id2416 . -6) (undo-tree-id2417 . -7) (undo-tree-id2418 . -7) (undo-tree-id2419 . -7) (undo-tree-id2420 . -7) (undo-tree-id2421 . -7) (undo-tree-id2422 . -7) (undo-tree-id2423 . -7) (undo-tree-id2424 . -8) (undo-tree-id2425 . -8) (undo-tree-id2426 . -8) (undo-tree-id2427 . -8) (undo-tree-id2428 . -8) (undo-tree-id2429 . -8) (undo-tree-id2430 . -8) 4700) nil (26052 61801 692042 378000) 0 nil])
([nil nil ((4692 . 4695)) nil (26052 61801 691999 245000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4694) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) 4695) nil (26052 61801 691997 541000) 0 nil])
([nil nil ((4694 . 4695)) nil (26052 61801 691989 193000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -4694) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) 4695) nil (26052 61801 691987 881000) 0 nil])
([nil nil ((4694 . 4698)) nil (26052 61801 691981 205000) 0 nil])
([nil nil ((#("weight" 0 6 (fontified t)) . -4692) (undo-tree-id2335 . -6) (undo-tree-id2336 . -6) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -2) (undo-tree-id2346 . -2) (undo-tree-id2347 . -2) (undo-tree-id2348 . -2) (undo-tree-id2349 . -2) (undo-tree-id2350 . -2) (undo-tree-id2351 . -2) (undo-tree-id2352 . -2) (undo-tree-id2353 . -2) (undo-tree-id2354 . -2) (undo-tree-id2355 . -2) (undo-tree-id2356 . -2) (undo-tree-id2357 . -2) (undo-tree-id2358 . -2) (undo-tree-id2359 . -2) (undo-tree-id2360 . -2) (undo-tree-id2361 . -2) (undo-tree-id2362 . -2) (undo-tree-id2363 . -2) (undo-tree-id2364 . -2) (undo-tree-id2365 . -3) (undo-tree-id2366 . -3) (undo-tree-id2367 . -3) (undo-tree-id2368 . -3) (undo-tree-id2369 . -3) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -5) (undo-tree-id2374 . -5) (undo-tree-id2375 . -6) (undo-tree-id2376 . -6) (undo-tree-id2377 . -6) (undo-tree-id2378 . -6) (undo-tree-id2379 . -6) (undo-tree-id2380 . -6) (undo-tree-id2381 . -6) (undo-tree-id2382 . -6) 4698) nil (26052 61801 691977 476000) 0 nil])
([nil nil ((4692 . 4700)) nil (26052 61801 691751 895000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -4699) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) 4700) nil (26052 61801 691750 360000) 0 nil])
([nil nil ((4699 . 4705)) nil (26052 61801 691744 556000) 0 nil])
([nil nil ((4706 . 4710)) nil (26052 61801 691743 641000) 0 nil])
([nil nil ((4709 . 4715) (#("w" 0 1 (fontified nil)) . 4709) (4709 . 4710) (#("window" 0 6 (fontified nil)) . -4709) (4709 . 4715) (#("w" 0 1 (fontified t)) . -4709) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) 4710) nil (26052 61801 691741 879000) 0 nil])
([nil nil ((4715 . 4717)) nil (26052 61801 691737 215000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -4716) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) 4717) nil (26052 61801 691735 797000) 0 nil])
([nil nil ((4716 . 4718)) nil (26052 61801 691731 209000) 0 nil])
([nil nil ((apply yas--snippet-revive 4716 4728 #s(yas--snippet nil nil #s(yas--exit 4728 nil) 30 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 4728 nil) 30 nil nil nil nil)) (4716 . 4728) (#("inner_size()$0" 0 14 (fontified nil)) . 4716) (4716 . 4730) (#("in" 0 2 (fontified nil)) . 4716) (4716 . 4718) (#("inner_size()" 0 12 (fontified nil)) . -4716) (4716 . 4728) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -4716) (undo-tree-id2318 . -2) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -2) (undo-tree-id2322 . -2) (undo-tree-id2323 . -2) (undo-tree-id2324 . -2) (undo-tree-id2325 . -2) 4718) nil (26052 61801 691728 252000) 0 nil])
([nil nil ((4728 . 4730)) nil (26052 61801 691714 811000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -4729) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) 4730) nil (26052 61801 691704 987000) 0 nil])
([nil nil ((#("height)" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t)) . -4699) (undo-tree-id2605 . -7) (undo-tree-id2606 . -7) 4706 (t 26052 61801 697010 565000)) nil (26052 61831 628797 271000) 0 nil])
([nil nil ((#("width, " 0 7 (fontified t)) . -4692) (undo-tree-id2599 . -6) (undo-tree-id2600 . -7) (undo-tree-id2601 . -7) (undo-tree-id2602 . -7) (undo-tree-id2603 . -7) (undo-tree-id2604 . -7) 4699) nil (26052 61831 628794 727000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -4691) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) 4692) nil (26052 61831 628787 4000) 0 nil])
([nil nil ((4691 . 4695)) nil (26052 61831 627957 83000) 0 nil])
([nil nil ((4691 . 4698)) nil (26052 61831 627956 513000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -4697) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) 4698) nil (26052 61831 627955 192000) 0 nil])
([nil nil ((4697 . 4698)) nil (26052 61831 627948 748000) 0 nil])
([nil nil ((#("800" 0 3 (fontified t)) . -4803) (undo-tree-id2502 . -3) 4806) nil (26052 61831 627947 786000) 0 nil])
([nil nil ((4803 . 4804)) nil (26052 61831 627946 364000) 0 nil])
([nil nil ((4803 . 4809) (#("w" 0 1 (fontified nil)) . 4803) (4803 . 4804) (#("window" 0 6 (fontified nil)) . -4803) (4803 . 4809) (#("w" 0 1 (fontified t)) . -4803) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) 4804) nil (26052 61831 627945 40000) 0 nil])
([nil nil ((4809 . 4810)) nil (26052 61831 627937 175000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4809) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) 4810) nil (26052 61831 627936 149000) 0 nil])
([nil nil ((4809 . 4810)) nil (26052 61831 627932 388000) 0 nil])
([nil nil ((4803 . 4814) (#("window_" 0 7 (fontified nil)) . 4803) (4803 . 4810) (#("window_size" 0 11 (fontified nil)) . -4803) (4803 . 4814) (#("window_" 0 7 (fontified t)) . -4803) (undo-tree-id2471 . -6) (undo-tree-id2472 . -7) (undo-tree-id2473 . -6) (undo-tree-id2474 . -6) (undo-tree-id2475 . -6) (undo-tree-id2476 . -6) (undo-tree-id2477 . -6) (undo-tree-id2478 . -6) (undo-tree-id2479 . -6) (undo-tree-id2480 . -6) (undo-tree-id2481 . -6) (undo-tree-id2482 . -6) (undo-tree-id2483 . -6) (undo-tree-id2484 . -6) (undo-tree-id2485 . -6) (undo-tree-id2486 . -7) (undo-tree-id2487 . -7) (undo-tree-id2488 . -7) 4810) nil (26052 61831 627928 734000) 0 nil])
([nil nil ((4814 . 4815)) nil (26052 61831 627481 527000) 0 nil])
([nil nil ((4815 . 4820) (#("width" 0 5 (fontified nil)) . -4815) (4815 . 4820)) nil (26052 61831 627480 750000) 0 nil])
([nil nil ((#("600" 0 3 (fontified t)) . -5006) (undo-tree-id2461 . -3) (undo-tree-id2462 . -3) (undo-tree-id2463 . -3) (undo-tree-id2464 . -3) (undo-tree-id2465 . -3) (undo-tree-id2466 . -3) (undo-tree-id2467 . -3) (undo-tree-id2468 . -3) (undo-tree-id2469 . -3) (undo-tree-id2470 . -3) 5009) nil (26052 61831 627479 399000) 0 nil])
([nil nil ((5006 . 5007)) nil (26052 61831 627471 149000) 0 nil])
([nil nil ((5006 . 5017) (#("w" 0 1 (fontified nil)) . 5006) (5006 . 5007) (#("window_size" 0 11 (fontified nil)) . -5006) (5006 . 5017) (#("w" 0 1 (fontified t)) . -5006) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) 5007) nil (26052 61831 627469 820000) 0 nil])
([nil nil ((5017 . 5018)) nil (26052 61831 627465 911000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -5017) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) 5018) nil (26052 61831 627464 454000) 0 nil])
([nil nil ((5017 . 5018)) nil (26052 61831 627450 785000) 0 nil])
([nil nil ((5018 . 5024) (#("height" 0 6 (fontified nil)) . -5018) (5018 . 5024)) nil (26052 61831 627445 618000) 0 nil])
([nil nil ((296 . 305) (t 26052 61831 643679 70000)) nil (26052 61844 744798 869000) 0 nil])
([nil nil ((305 . 308)) nil (26052 61844 744796 721000) 0 nil])
([nil nil ((305 . 335) (#("win" 0 3 (fontified nil)) . 305) (305 . 308) (#("window: winit::window::Window," 0 30 (fontified nil)) . -305) (305 . 335) (#("win" 0 3 (fontified t)) . -305) (undo-tree-id2607 . -3) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -2) (undo-tree-id2611 . -2) (undo-tree-id2612 . -2) (undo-tree-id2613 . -3) (undo-tree-id2614 . -3) (undo-tree-id2615 . -3) (undo-tree-id2616 . -3) (undo-tree-id2617 . -3) 308) nil (26052 61844 744791 321000) 0 nil])
([nil nil ((991 . 994) (t 26052 61844 747013 206000)) nil (26052 61848 547133 208000) 0 nil])
([nil nil ((993 . 999) (#("w" 0 1 (fontified nil)) . 993) (993 . 994) (#("window" 0 6 (fontified nil)) . -993) (993 . 999) (#("w" 0 1 (fontified t)) . -993) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) 994) nil (26052 61848 547127 814000) 0 nil])
([nil nil ((4528 . 4529) (t 26052 61848 593680 108000)) nil (26052 61862 610674 940000) 0 nil])
([nil nil ((313 . 314) (t 26052 61862 627014 303000)) nil (26052 61869 327557 415000) 0 nil])
([nil nil ((5241 . 5245) (#("    " 0 4 (fontified nil)) . 5240) (undo-tree-id2754 . -4) (undo-tree-id2755 . -4) (undo-tree-id2756 . -4) (undo-tree-id2757 . -4) (5239 . 5245) (t 26052 61869 343681 381000)) nil (26052 61977 297517 249000) 0 nil])
([nil nil ((5245 . 5250)) nil (26052 61977 297513 388000) 0 nil])
([nil nil ((#("dr" 0 2 (face font-lock-function-name-face fontified t)) . -5248) (undo-tree-id2746 . -2) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -2) (undo-tree-id2750 . -2) (undo-tree-id2751 . -2) (undo-tree-id2752 . -2) (undo-tree-id2753 . -2) 5250) nil (26052 61977 297512 74000) 0 nil])
([nil nil ((#("fn " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -5245) (undo-tree-id2726 . -3) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -2) (undo-tree-id2730 . -2) (undo-tree-id2731 . -2) (undo-tree-id2732 . -2) (undo-tree-id2733 . -2) (undo-tree-id2734 . -3) (undo-tree-id2735 . -3) (undo-tree-id2736 . -3) (undo-tree-id2737 . -3) (undo-tree-id2738 . -3) (undo-tree-id2739 . -3) (undo-tree-id2740 . -3) (undo-tree-id2741 . -3) (undo-tree-id2742 . -3) (undo-tree-id2743 . -3) (undo-tree-id2744 . -3) (undo-tree-id2745 . -3) 5248) nil (26052 61977 297505 772000) 0 nil])
([nil nil ((5245 . 5258)) nil (26052 61977 297492 12000) 0 nil])
([nil nil ((5257 . 5262)) nil (26052 61977 297491 468000) 0 nil])
([nil nil ((5262 . 5264)) nil (26052 61977 297490 903000) 0 nil])
([nil nil ((5257 . 5266) (#("&mut se" 0 1 (face rust-ampersand-face fontified nil) 1 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil) 5 7 (fontified nil)) . 5257) (undo-tree-id2688 . -5) (undo-tree-id2689 . -5) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -2) (undo-tree-id2693 . -2) (undo-tree-id2694 . -2) (undo-tree-id2695 . -3) (undo-tree-id2696 . -3) (undo-tree-id2697 . -4) (undo-tree-id2698 . -4) (undo-tree-id2699 . -5) (undo-tree-id2700 . -5) (undo-tree-id2701 . -5) (undo-tree-id2702 . -5) (undo-tree-id2703 . -5) (undo-tree-id2704 . -5) (undo-tree-id2705 . -5) (undo-tree-id2706 . -5) (undo-tree-id2707 . -5) (undo-tree-id2708 . -5) (undo-tree-id2709 . -5) (undo-tree-id2710 . -5) (undo-tree-id2711 . -5) (undo-tree-id2712 . -5) (5262 . 5264) (#("&mut self" 0 9 (fontified nil)) . -5262) (5262 . 5271) (#("se" 0 2 (fontified t)) . -5262) (undo-tree-id2713 . -2) (undo-tree-id2714 . -2) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -2) (undo-tree-id2718 . -2) (undo-tree-id2719 . -2) (undo-tree-id2720 . -2) (undo-tree-id2721 . -2) (undo-tree-id2722 . -2) (undo-tree-id2723 . -2) (undo-tree-id2724 . -2) (undo-tree-id2725 . -2) 5264) nil (26052 61977 297488 686000) 0 nil])
([nil nil ((5267 . 5270)) nil (26052 61977 297461 724000) 0 nil])
([nil nil ((5271 . 5275) (#("        " 0 8 (fontified nil)) . 5270) (5270 . 5278) (#("    " 0 4 (fontified nil)) . 5270) (undo-tree-id2684 . -4) (undo-tree-id2685 . -4) (undo-tree-id2686 . -4) (undo-tree-id2687 . -4) (5269 . 5275)) nil (26052 61977 297460 667000) 0 nil])
([nil nil ((5270 . 5278)) nil (26052 61977 297456 856000) 0 nil])
([nil nil ((5278 . 5279)) nil (26052 61977 297456 230000) 0 nil])
([nil nil ((5278 . 5282) (#("s" 0 1 (fontified nil)) . 5278) (5278 . 5279) (#("self" 0 4 (fontified nil)) . -5278) (5278 . 5282) (#("s" 0 1 (fontified t)) . -5278) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) 5279) nil (26052 61977 297454 839000) 0 nil])
([nil nil ((5282 . 5283)) nil (26052 61977 297450 842000) 0 nil])
([nil nil ((5283 . 5296) (#("swapchain_ext" 0 13 (fontified nil)) . -5283) (5283 . 5296)) nil (26052 61977 297450 124000) 0 nil])
([nil nil ((5296 . 5299)) nil (26052 61977 297448 935000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5315 5329 nil nil nil t #s(yas--field 2 5331 5351 nil nil nil nil #s(yas--exit 5352 nil))) #s(yas--field 2 5331 5351 nil nil nil nil #s(yas--exit 5352 nil))) #s(yas--exit 5352 nil) 31 nil #s(yas--field 1 5315 5329 nil nil nil t #s(yas--field 2 5331 5351 nil nil nil nil #s(yas--exit 5352 nil))) nil nil)) (5297 . 5347) (#("destroy_swapchain(${1:swapchain}, ${2:allocation_callbacks})$0" 0 62 (fontified nil)) . 5297) (5297 . 5359) (#("de" 0 2 (fontified nil)) . 5297) (5297 . 5299) (#("destroy_swapchain(…)" 0 20 (fontified nil)) . -5297) (5297 . 5317) (#("de" 0 2 (fontified t)) . -5297) (undo-tree-id2671 . -2) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -2) (undo-tree-id2676 . -2) (undo-tree-id2677 . -2) (undo-tree-id2678 . -2) (undo-tree-id2679 . -2) 5299) nil (26052 61977 297447 296000) 0 nil])
([nil nil ((#("swapchain" 0 9 (fontified nil)) . 5316) (undo-tree-id2670 . -9) (5315 . 5316)) nil (26052 61977 297438 981000) 0 nil])
([nil nil ((5315 . 5329) (#("s" 0 1 (fontified nil)) . 5315) (undo-tree-id2658 . -1) (5315 . 5316) (#("self.swapchain" 0 14 (fontified nil)) . -5315) (undo-tree-id2659 . -14) (5315 . 5329) (#("s" 0 1 (fontified t)) . -5315) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) 5316) nil (26052 61977 297436 422000) 0 nil])
([nil nil ((apply yas--snippet-revive 5297 5352 #s(yas--snippet nil (#s(yas--field 1 5315 5329 nil nil nil t #s(yas--field 2 5331 5351 nil nil nil nil #s(yas--exit 5352 nil))) #s(yas--field 2 5331 5351 nil nil nil nil #s(yas--exit 5352 nil))) #s(yas--exit 5352 nil) 31 nil #s(yas--field 1 5315 5329 nil nil nil t #s(yas--field 2 5331 5351 nil nil nil nil #s(yas--exit 5352 nil))) nil nil))) nil (26052 61977 296643 500000) 0 nil])
([nil nil ((#("callbacks" 0 9 (fontified t)) . -5342) (undo-tree-id2650 . -9) (undo-tree-id2651 . -9) (undo-tree-id2652 . -9) (undo-tree-id2653 . -9) (undo-tree-id2654 . -9) (undo-tree-id2655 . -9) (undo-tree-id2656 . -9) (undo-tree-id2657 . -9) 5351) nil (26052 61977 296642 429000) 0 nil])
([nil nil ((#("allocation_" 0 11 (fontified t)) . -5331) (undo-tree-id2637 . -11) (undo-tree-id2638 . -11) (undo-tree-id2639 . -10) (undo-tree-id2640 . -10) (undo-tree-id2641 . -10) (undo-tree-id2642 . -11) (undo-tree-id2643 . -11) (undo-tree-id2644 . -11) (undo-tree-id2645 . -11) (undo-tree-id2646 . -11) (undo-tree-id2647 . -11) (undo-tree-id2648 . -11) (undo-tree-id2649 . -11) 5342) nil (26052 61977 296635 639000) 0 nil])
([nil nil ((5331 . 5332)) nil (26052 61977 296625 256000) 0 nil])
([nil nil ((apply yas--snippet-revive 5331 5335 #s(yas--snippet nil nil #s(yas--exit 5335 nil) 32 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 5335 nil) 32 nil nil nil nil)) (5331 . 5335) (#("None$0" 0 6 (fontified nil)) . 5331) (5331 . 5337) (#("N" 0 1 (fontified nil)) . 5331) (5331 . 5332) (#("None" 0 4 (fontified nil)) . -5331) (5331 . 5335) (#("N" 0 1 (face font-lock-type-face fontified t)) . -5331) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) 5332) nil (26052 61977 296622 199000) 0 nil])
([nil nil ((5336 . 5337)) nil (26052 61977 296604 282000) 0 nil])
([nil nil ((5271 . 5279) (#("        " 0 8 (fontified nil)) . 5270) (undo-tree-id2804 . -8) (undo-tree-id2805 . -8) (undo-tree-id2806 . -8) (undo-tree-id2807 . -8) (undo-tree-id2808 . -8) (undo-tree-id2809 . -8) (undo-tree-id2810 . -8) (undo-tree-id2811 . -8) (undo-tree-id2812 . -8) (undo-tree-id2813 . -8) (5278 . 5279) (t 26052 61977 313688 10000)) nil (26052 61989 382051 176000) 0 nil])
([nil nil ((5270 . 5271)) nil (26052 61989 382039 731000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5270) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) 5271) nil (26052 61989 382038 401000) 0 nil])
([nil nil ((5270 . 5278)) nil (26052 61989 382031 237000) 0 nil])
([nil nil ((5278 . 5280)) nil (26052 61989 382030 465000) 0 nil])
([nil nil ((5280 . 5284)) nil (26052 61989 382029 577000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -5281) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (#("g" 0 1 (fontified t)) . -5282) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (#("e" 0 1 (fontified t)) . -5283) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) 5284) nil (26052 61989 382026 935000) 0 nil])
([nil nil ((5281 . 5284)) nil (26052 61989 382005 238000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -5282) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (#("e" 0 1 (fontified t)) . -5283) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) 5284) nil (26052 61989 382003 836000) 0 nil])
([nil nil ((5282 . 5286)) nil (26052 61989 381995 848000) 0 nil])
([nil nil ((5359 . 5371) (5295 . 5299) (5354 . 5355)) nil (26052 61989 381994 607000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -5367) (undo-tree-id2758 . -4) (undo-tree-id2759 . -4) (undo-tree-id2760 . -4) (5371 . 5372)) nil (26052 61989 381990 583000) 0 nil])
([nil nil ((#("swapchain" 0 9 (face font-lock-function-name-face fontified t)) . -286) (undo-tree-id2826 . -9) (undo-tree-id2827 . -9) (undo-tree-id2828 . -9) (undo-tree-id2829 . -9) (undo-tree-id2830 . -9) (undo-tree-id2831 . -9) (undo-tree-id2832 . -9) (undo-tree-id2833 . -9) (undo-tree-id2834 . -9) (undo-tree-id2835 . -9) 295 (t 26052 61989 390355 417000)) nil (26052 62071 718576 578000) 0 nil])
([nil nil ((#("create_" 0 7 (face font-lock-function-name-face fontified t)) . -279) (undo-tree-id2814 . -7) (undo-tree-id2815 . -7) (undo-tree-id2816 . -7) (undo-tree-id2817 . -7) (undo-tree-id2818 . -7) (undo-tree-id2819 . -7) (undo-tree-id2820 . -7) (undo-tree-id2821 . -7) (undo-tree-id2822 . -7) (undo-tree-id2823 . -7) (undo-tree-id2824 . -7) (undo-tree-id2825 . -7) 286) nil (26052 62071 718567 959000) 0 nil])
([nil nil ((279 . 282)) nil (26052 62071 718551 578000) 0 nil])
([nil nil ((276 . 280)) nil (26052 62071 718547 595000) 0 nil])
([nil nil ((599 . 607) (#("        " 0 8 (fontified nil)) . 598) (undo-tree-id2931 . -8) (undo-tree-id2932 . -8) (undo-tree-id2933 . -8) (undo-tree-id2934 . -8) (597 . 607) (t 26052 62071 733693 801000)) nil (26052 62148 332151 358000) 0 nil])
([nil nil ((598 . 606)) nil (26052 62148 332147 199000) 0 nil])
([nil nil ((606 . 608)) nil (26052 62148 332146 530000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -606) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (#("e" 0 1 (fontified t)) . -607) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) 608) nil (26052 62148 332145 10000) 0 nil])
([nil nil ((#("        device: &ash::Device,
        physical_device: vk::PhysicalDevice," 0 8 (fontified t) 8 14 (face font-lock-variable-name-face fontified t) 14 16 (fontified t) 16 17 (face rust-ampersand-face fontified t) 17 20 (face font-lock-constant-face fontified t) 20 22 (fontified t) 22 28 (face font-lock-type-face fontified t) 28 38 (fontified t) 38 53 (face font-lock-variable-name-face fontified t) 53 55 (fontified t) 55 57 (face font-lock-constant-face fontified t) 57 59 (fontified t) 59 73 (face font-lock-type-face fontified t) 73 74 (fontified t)) . 374) (undo-tree-id2867 . -74) (undo-tree-id2868 . -74) (undo-tree-id2869 . -74) (undo-tree-id2870 . -74) (undo-tree-id2871 . -74) (undo-tree-id2872 . -74) (undo-tree-id2873 . -74) (undo-tree-id2874 . -74) (undo-tree-id2875 . -74) (undo-tree-id2876 . -74) (undo-tree-id2877 . -74) (undo-tree-id2878 . -74) (undo-tree-id2879 . -74) (undo-tree-id2880 . -74) (undo-tree-id2881 . -73) (undo-tree-id2882 . -70) (undo-tree-id2883 . -67) (undo-tree-id2884 . -65) (undo-tree-id2885 . -63) (undo-tree-id2886 . -62) (undo-tree-id2887 . -60) (undo-tree-id2888 . -58) (undo-tree-id2889 . -56) (undo-tree-id2890 . -55) (undo-tree-id2891 . -53) (undo-tree-id2892 . -52) (undo-tree-id2893 . -50) (undo-tree-id2894 . -49) (undo-tree-id2895 . -48) (undo-tree-id2896 . -46) (undo-tree-id2897 . -45) (undo-tree-id2898 . -44) (undo-tree-id2899 . -43) (undo-tree-id2900 . -42) (undo-tree-id2901 . -41) (undo-tree-id2902 . -40) (undo-tree-id2903 . -39) (undo-tree-id2904 . -38) (undo-tree-id2905 . -37) (undo-tree-id2906 . -36) (undo-tree-id2907 . -35) (undo-tree-id2908 . -34) (undo-tree-id2909 . -33) (undo-tree-id2910 . -32) (undo-tree-id2911 . -31) (undo-tree-id2912 . -30) (undo-tree-id2913 . -74)) nil (26052 62148 332130 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 605 . 606) (nil fontified nil 605 . 606) (nil fontified nil 591 . 605) (nil fontified nil 589 . 591) (nil fontified nil 587 . 589) (nil fontified nil 585 . 587) (nil fontified nil 570 . 585) (nil fontified nil 560 . 570) (nil fontified nil 554 . 560) (nil fontified nil 552 . 554) (nil fontified nil 549 . 552) (nil fontified nil 548 . 549) (nil fontified nil 546 . 548) (nil fontified nil 540 . 546) (nil fontified nil 532 . 540) (532 . 606)) nil (26052 62148 332095 63000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -532) 561) nil (26052 62148 332092 392000) 0 nil])
([nil nil ((374 . 381)) nil (26052 62148 332091 580000) 0 nil])
([nil nil ((374 . 382) 381) nil (26052 62148 332090 830000) 0 nil])
([nil nil ((389 . 391)) nil (26052 62148 332090 23000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -390) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) 391) nil (26052 62148 332089 166000) 0 nil])
([nil nil ((390 . 393)) nil (26052 62148 332086 238000) 0 nil])
([nil nil ((391 . 398) (#("cr" 0 2 (fontified nil)) . 391) (391 . 393) (#("crate::" 0 7 (fontified nil)) . -391) (391 . 398) (#("cr" 0 2 (fontified t)) . -391) (undo-tree-id2854 . -2) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -2) (undo-tree-id2860 . -2) (undo-tree-id2861 . -2) (undo-tree-id2862 . -2) (undo-tree-id2863 . -2) 393) nil (26052 62148 332084 736000) 0 nil])
([nil nil ((398 . 399)) nil (26052 62148 332076 388000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -398) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) 399) nil (26052 62148 332075 447000) 0 nil])
([nil nil ((398 . 400)) nil (26052 62148 332071 99000) 0 nil])
([nil nil ((398 . 404) (#("de" 0 2 (fontified nil)) . 398) (398 . 400) (#("device" 0 6 (fontified nil)) . -398) (398 . 404) (#("de" 0 2 (fontified t)) . -398) (undo-tree-id2840 . -2) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -2) (undo-tree-id2845 . -2) (undo-tree-id2846 . -2) (undo-tree-id2847 . -2) (undo-tree-id2848 . -2) 400) nil (26052 62148 332069 429000) 0 nil])
([nil nil ((404 . 407)) nil (26052 62148 332060 420000) 0 nil])
([nil nil ((406 . 412) (#("D" 0 1 (fontified nil)) . 406) (406 . 407) (#("Device" 0 6 (fontified nil)) . -406) (406 . 412) (#("D" 0 1 (face font-lock-type-face fontified t)) . -406) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) 407) nil (26052 62148 332057 326000) 0 nil])
([nil nil ((412 . 413)) nil (26052 62148 331404 309000) 0 nil])
([nil nil ((#("Device," 0 6 (face font-lock-type-face fontified t) 6 7 (fontified t)) . -585) (undo-tree-id3365 . -7) (undo-tree-id3366 . -7) 592 (t 26052 62148 347031 840000)) nil (26052 62199 231557 534000) 0 nil])
([nil nil ((#("ash::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -580) (undo-tree-id3361 . -5) (undo-tree-id3362 . -5) (undo-tree-id3363 . -5) (undo-tree-id3364 . -5) 585) nil (26052 62199 231555 198000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -577) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (#(" " 0 1 (fontified t)) . -578) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (#("&" 0 1 (fontified t)) . -579) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) 580) nil (26052 62199 231549 472000) 0 nil])
([nil nil ((571 . 575)) nil (26052 62199 231526 879000) 0 nil])
([nil nil ((581 . 585)) nil (26052 62199 231526 289000) 0 nil])
([nil nil ((584 . 590) (#("d" 0 1 (fontified nil)) . 584) (584 . 585) (#("device" 0 6 (fontified nil)) . -584) (584 . 590) (#("d" 0 1 (fontified t)) . -584) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) 585) nil (26052 62199 231524 958000) 0 nil])
([nil nil ((590 . 591)) nil (26052 62199 231520 255000) 0 nil])
([nil nil ((591 . 605) (#("logical_device" 0 14 (fontified nil)) . -591) (591 . 605)) nil (26052 62199 231519 497000) 0 nil])
([nil nil ((605 . 606)) nil (26052 62199 231518 397000) 0 nil])
([nil nil ((#("PhysicalDevice," 0 14 (face font-lock-type-face fontified t) 14 15 (fontified t rear-nonsticky t)) . -636) (undo-tree-id3307 . -14) (undo-tree-id3308 . -15) (undo-tree-id3309 . -14) (undo-tree-id3310 . -14) (undo-tree-id3311 . -14) (undo-tree-id3312 . -14) (undo-tree-id3313 . -14) (undo-tree-id3314 . -14) (undo-tree-id3315 . -14) (undo-tree-id3316 . -14) (undo-tree-id3317 . -14) (undo-tree-id3318 . -14) (undo-tree-id3319 . -15) 651) nil (26052 62199 231515 620000) 0 nil])
([nil nil ((#("vk::" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t)) . -632) (undo-tree-id3292 . -4) (undo-tree-id3293 . -4) (undo-tree-id3294 . -4) (undo-tree-id3295 . -4) (undo-tree-id3296 . -4) (undo-tree-id3297 . -4) (undo-tree-id3298 . -4) (undo-tree-id3299 . -4) (undo-tree-id3300 . -4) (undo-tree-id3301 . -4) (undo-tree-id3302 . -4) (undo-tree-id3303 . -4) (undo-tree-id3304 . -4) (undo-tree-id3305 . -4) (undo-tree-id3306 . -4) 636) nil (26052 62199 230682 648000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -630) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (#(" " 0 1 (fontified t)) . -631) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) 632) nil (26052 62199 230671 72000) 0 nil])
([nil nil ((615 . 619)) nil (26052 62199 230648 233000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -617) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (#("t" 0 1 (fontified t)) . -618) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) 619) nil (26052 62199 230647 177000) 0 nil])
([nil nil ((617 . 619)) nil (26052 62199 230639 939000) 0 nil])
([nil nil ((634 . 638)) nil (26052 62199 230639 322000) 0 nil])
([nil nil ((637 . 643) (#("d" 0 1 (fontified nil)) . 637) (637 . 638) (#("device" 0 6 (fontified nil)) . -637) (637 . 643) (#("d" 0 1 (fontified t)) . -637) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) 638) nil (26052 62199 230637 985000) 0 nil])
([nil nil ((643 . 645)) nil (26052 62199 230634 670000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -644) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) 645) nil (26052 62199 230633 852000) 0 nil])
([nil nil ((644 . 647)) nil (26052 62199 230629 514000) 0 nil])
([nil nil ((584 . 585)) nil (26052 62199 230628 915000) 0 nil])
([nil nil ((638 . 639)) nil (26052 62199 230628 329000) 0 nil])
([nil nil ((649 . 650)) nil (26052 62199 230627 735000) 0 nil])
([nil nil ((#("phys" 0 4 (fontified t)) . -646) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -2) (undo-tree-id3181 . -2) (undo-tree-id3182 . -2) (undo-tree-id3183 . -2) (undo-tree-id3184 . -2) (undo-tree-id3185 . -3) (undo-tree-id3186 . -3) (undo-tree-id3187 . -3) (undo-tree-id3188 . -3) (undo-tree-id3189 . -3) (undo-tree-id3190 . -3) (undo-tree-id3191 . -3) (undo-tree-id3192 . -4) (undo-tree-id3193 . -3) (undo-tree-id3194 . -3) (undo-tree-id3195 . -3) (undo-tree-id3196 . -3) (undo-tree-id3197 . -3) (undo-tree-id3198 . -3) (undo-tree-id3199 . -3) (undo-tree-id3200 . -3) (undo-tree-id3201 . -3) (undo-tree-id3202 . -3) (undo-tree-id3203 . -3) (undo-tree-id3204 . -3) (undo-tree-id3205 . -3) (undo-tree-id3206 . -3) (undo-tree-id3207 . -3) (undo-tree-id3208 . -3) (undo-tree-id3209 . -3) (undo-tree-id3210 . -3) (undo-tree-id3211 . -3) (undo-tree-id3212 . -3) (undo-tree-id3213 . -3) (undo-tree-id3214 . -3) (undo-tree-id3215 . -3) (undo-tree-id3216 . -3) (undo-tree-id3217 . -3) (undo-tree-id3218 . -3) (undo-tree-id3219 . -3) (undo-tree-id3220 . -3) (undo-tree-id3221 . -3) (undo-tree-id3222 . -3) (undo-tree-id3223 . -3) (undo-tree-id3224 . -3) (undo-tree-id3225 . -3) (undo-tree-id3226 . -3) (undo-tree-id3227 . -4) (undo-tree-id3228 . -4) (undo-tree-id3229 . -4) (undo-tree-id3230 . -4) (undo-tree-id3231 . -4) (undo-tree-id3232 . -4) (undo-tree-id3233 . -4) (undo-tree-id3234 . -4) (undo-tree-id3235 . -4) 650) nil (26052 62199 230625 44000) 0 nil])
([nil nil ((#("device." 0 7 (fontified t)) . -639) (undo-tree-id3098 . -6) (undo-tree-id3099 . -6) (undo-tree-id3100 . -6) (undo-tree-id3101 . -7) (undo-tree-id3102 . -7) (undo-tree-id3103 . -7) (undo-tree-id3104 . -7) (undo-tree-id3105 . -7) (undo-tree-id3106 . -7) (undo-tree-id3107 . -7) (undo-tree-id3108 . -7) (undo-tree-id3109 . -7) (undo-tree-id3110 . -7) (undo-tree-id3111 . -7) (undo-tree-id3112 . -7) (undo-tree-id3113 . -7) (undo-tree-id3114 . -7) (undo-tree-id3115 . -7) (undo-tree-id3116 . -7) (undo-tree-id3117 . -7) (undo-tree-id3118 . -7) (undo-tree-id3119 . -7) (undo-tree-id3120 . -7) (undo-tree-id3121 . -7) (undo-tree-id3122 . -7) (undo-tree-id3123 . -7) (undo-tree-id3124 . -7) (undo-tree-id3125 . -7) (undo-tree-id3126 . -7) (undo-tree-id3127 . -7) (undo-tree-id3128 . -7) (undo-tree-id3129 . -7) (undo-tree-id3130 . -7) (undo-tree-id3131 . -7) (undo-tree-id3132 . -7) (undo-tree-id3133 . -7) (undo-tree-id3134 . -7) (undo-tree-id3135 . -7) (undo-tree-id3136 . -7) (undo-tree-id3137 . -7) (undo-tree-id3138 . -7) (undo-tree-id3139 . -7) (undo-tree-id3140 . -7) (undo-tree-id3141 . -7) (undo-tree-id3142 . -7) (undo-tree-id3143 . -7) (undo-tree-id3144 . -7) (undo-tree-id3145 . -7) (undo-tree-id3146 . -7) (undo-tree-id3147 . -7) (undo-tree-id3148 . -7) (undo-tree-id3149 . -7) (undo-tree-id3150 . -7) (undo-tree-id3151 . -7) (undo-tree-id3152 . -7) (undo-tree-id3153 . -7) (undo-tree-id3154 . -7) (undo-tree-id3155 . -7) (undo-tree-id3156 . -7) (undo-tree-id3157 . -7) (undo-tree-id3158 . -7) (undo-tree-id3159 . -7) (undo-tree-id3160 . -7) (undo-tree-id3161 . -7) (undo-tree-id3162 . -7) (undo-tree-id3163 . -7) (undo-tree-id3164 . -7) (undo-tree-id3165 . -7) (undo-tree-id3166 . -7) (undo-tree-id3167 . -7) (undo-tree-id3168 . -7) (undo-tree-id3169 . -7) (undo-tree-id3170 . -7) (undo-tree-id3171 . -7) (undo-tree-id3172 . -7) (undo-tree-id3173 . -7) (undo-tree-id3174 . -7) (undo-tree-id3175 . -7) (undo-tree-id3176 . -7) 646) nil (26052 62199 230385 727000) 0 nil])
([nil nil ((#("let physical_device = &" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 19 (face font-lock-variable-name-face fontified t) 19 22 (fontified t) 22 23 (fontified t)) . 616) (undo-tree-id2941 . -19) (undo-tree-id2942 . -19) (undo-tree-id2943 . -19) (undo-tree-id2944 . -19) (undo-tree-id2945 . -19) (undo-tree-id2946 . -19) (undo-tree-id2947 . -19) (undo-tree-id2948 . -19) (undo-tree-id2949 . -19) (undo-tree-id2950 . -19) (undo-tree-id2951 . -19) (undo-tree-id2952 . -19) (undo-tree-id2953 . -19) (undo-tree-id2954 . -19) (undo-tree-id2955 . -19) (undo-tree-id2956 . -19) (undo-tree-id2957 . -19) (undo-tree-id2958 . -19) (undo-tree-id2959 . -19) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -2) (undo-tree-id2964 . -2) (undo-tree-id2965 . -2) (undo-tree-id2966 . -2) (undo-tree-id2967 . -2) (undo-tree-id2968 . -2) (undo-tree-id2969 . -2) (undo-tree-id2970 . -2) (undo-tree-id2971 . -2) (undo-tree-id2972 . -2) (undo-tree-id2973 . -2) (undo-tree-id2974 . -2) (undo-tree-id2975 . -2) (undo-tree-id2976 . -2) (undo-tree-id2977 . -2) (undo-tree-id2978 . -3) (undo-tree-id2979 . -3) (undo-tree-id2980 . -3) (undo-tree-id2981 . -4) (undo-tree-id2982 . -4) (undo-tree-id2983 . -4) (undo-tree-id2984 . -19) (undo-tree-id2985 . -19) (undo-tree-id2986 . -19) (undo-tree-id2987 . -19) (undo-tree-id2988 . -19) (undo-tree-id2989 . -19) (undo-tree-id2990 . -19) (undo-tree-id2991 . -19) (undo-tree-id2992 . -20) (undo-tree-id2993 . -20) (undo-tree-id2994 . -21) (undo-tree-id2995 . -22) (undo-tree-id2996 . -22) (undo-tree-id2997 . -22) (undo-tree-id2998 . -22) (undo-tree-id2999 . -22) (undo-tree-id3000 . -22) (undo-tree-id3001 . -22) (undo-tree-id3002 . -22) (undo-tree-id3003 . -23) (undo-tree-id3004 . -23) (undo-tree-id3005 . -23) (undo-tree-id3006 . -23) (undo-tree-id3007 . -23) (undo-tree-id3008 . -23) (undo-tree-id3009 . -23) (undo-tree-id3010 . -23) (undo-tree-id3011 . -23) (undo-tree-id3012 . -23) (undo-tree-id3013 . -23) (undo-tree-id3014 . -23) (undo-tree-id3015 . -23) (undo-tree-id3016 . -23) (undo-tree-id3017 . -23) (undo-tree-id3018 . -23) (undo-tree-id3019 . -23) (undo-tree-id3020 . -23) (undo-tree-id3021 . -23) (undo-tree-id3022 . -23) (undo-tree-id3023 . -23) (undo-tree-id3024 . -23) (undo-tree-id3025 . -23) (undo-tree-id3026 . -23) (undo-tree-id3027 . -23) (undo-tree-id3028 . -23) (undo-tree-id3029 . -23) (undo-tree-id3030 . -23) (undo-tree-id3031 . -23) (undo-tree-id3032 . -23) (undo-tree-id3033 . -23) (undo-tree-id3034 . -23) (undo-tree-id3035 . -23) (undo-tree-id3036 . -23) (undo-tree-id3037 . -23) (undo-tree-id3038 . -23) (undo-tree-id3039 . -23) (undo-tree-id3040 . -23) (undo-tree-id3041 . -23) (undo-tree-id3042 . -23) (undo-tree-id3043 . -23) (undo-tree-id3044 . -23) (undo-tree-id3045 . -23) (undo-tree-id3046 . -23) (undo-tree-id3047 . -23) (undo-tree-id3048 . -23) (undo-tree-id3049 . -23) (undo-tree-id3050 . -23) (undo-tree-id3051 . -23) (undo-tree-id3052 . -23) (undo-tree-id3053 . -23) (undo-tree-id3054 . -23) (undo-tree-id3055 . -14) (undo-tree-id3056 . -14) (undo-tree-id3057 . -14) (undo-tree-id3058 . -14) (undo-tree-id3059 . -23) (undo-tree-id3060 . -23) (undo-tree-id3061 . -23) (undo-tree-id3062 . -23) (undo-tree-id3063 . -23) (undo-tree-id3064 . -23) (undo-tree-id3065 . -22) (undo-tree-id3066 . -22) (undo-tree-id3067 . -22) (undo-tree-id3068 . -22) (undo-tree-id3069 . -22) (undo-tree-id3070 . -22) (undo-tree-id3071 . -22) (undo-tree-id3072 . -23) (undo-tree-id3073 . -23) (undo-tree-id3074 . -23) (undo-tree-id3075 . -23) (undo-tree-id3076 . -23) (undo-tree-id3077 . -23) (undo-tree-id3078 . -23) (undo-tree-id3079 . -23) (undo-tree-id3080 . -23) (undo-tree-id3081 . -23) (undo-tree-id3082 . -23) (undo-tree-id3083 . -23) (undo-tree-id3084 . -23) (undo-tree-id3085 . -23) (undo-tree-id3086 . -23) (undo-tree-id3087 . -23) (undo-tree-id3088 . -23) (undo-tree-id3089 . -23) (undo-tree-id3090 . -23) (undo-tree-id3091 . -23) (undo-tree-id3092 . -23) (undo-tree-id3093 . -23) (undo-tree-id3094 . -23) (undo-tree-id3095 . -23) (undo-tree-id3096 . -23) (undo-tree-id3097 . -23)) nil (26052 62199 230281 408000) 0 nil])
([nil nil ((562 . 571)) nil (26052 62199 229697 244000) 0 nil])
([nil nil ((nil rear-nonsticky nil 593 . 594) (nil fontified nil 593 . 594) (nil fontified nil 590 . 593) (nil fontified nil 575 . 590) (nil fontified nil 574 . 575) (nil fontified nil 571 . 574) (571 . 594)) nil (26052 62199 229696 362000) 0 nil])
([nil nil ((594 . 595)) nil (26052 62199 229695 36000) 0 nil])
([nil nil ((594 . 600) (#("d" 0 1 (fontified nil)) . 594) (594 . 595) (#("device" 0 6 (fontified nil)) . -594) (594 . 600) (#("d" 0 1 (fontified t)) . -594) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) 595) nil (26052 62199 229693 468000) 0 nil])
([nil nil ((600 . 601)) nil (26052 62199 229682 565000) 0 nil])
([nil nil ((601 . 616) (#("physical_device" 0 15 (fontified nil)) . -601) (601 . 616)) nil (26052 62199 229680 514000) 0 nil])
([nil nil ((616 . 617)) nil (26052 62199 229676 30000) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face rear-nonsticky t fontified t)) . -593) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) 594 (t 26052 62199 247034 964000)) nil (26052 62209 171176 949000) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -638) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) 639 (t 26052 62209 187035 574000)) nil (26052 62217 315010 118000) 0 nil])
([nil nil ((#(" queue_family: &crate::device::QueueFamilyIndices," 0 1 (fontified t) 1 13 (face font-lock-variable-name-face fontified t) 13 15 (fontified t) 15 16 (face rust-ampersand-face fontified t) 16 21 (face font-lock-keyword-face fontified t) 21 23 (fontified t) 23 29 (face font-lock-constant-face fontified t) 29 31 (fontified t) 31 49 (face font-lock-type-face fontified t) 49 50 (fontified t)) . 448) (undo-tree-id3599 . -50) (undo-tree-id3600 . -8) (undo-tree-id3601 . -8) (undo-tree-id3602 . -8) (undo-tree-id3603 . -8) (undo-tree-id3604 . -8) (undo-tree-id3605 . -8) (undo-tree-id3606 . -8) (undo-tree-id3607 . -8) (undo-tree-id3608 . -8) (undo-tree-id3609 . -8) (undo-tree-id3610 . -8) (undo-tree-id3611 . -8) (undo-tree-id3612 . -8) (undo-tree-id3613 . -8) (undo-tree-id3614 . -8) (undo-tree-id3615 . -8) (undo-tree-id3616 . -8) (undo-tree-id3617 . -8) (undo-tree-id3618 . -8) (undo-tree-id3619 . -8) (undo-tree-id3620 . -8) (undo-tree-id3621 . -8) (undo-tree-id3622 . -8) (undo-tree-id3623 . -8) (undo-tree-id3624 . -8) (undo-tree-id3625 . -8) (undo-tree-id3626 . -8) (undo-tree-id3627 . -8) (undo-tree-id3628 . -8) (undo-tree-id3629 . -8) (undo-tree-id3630 . -8) (undo-tree-id3631 . -8) (undo-tree-id3632 . -8) (undo-tree-id3633 . -8) (undo-tree-id3634 . -8) (undo-tree-id3635 . -8) (undo-tree-id3636 . -8) (undo-tree-id3637 . -8) (undo-tree-id3638 . -8) (undo-tree-id3639 . -8) (undo-tree-id3640 . -8) (undo-tree-id3641 . -8) (undo-tree-id3642 . -50) (undo-tree-id3643 . -50) (undo-tree-id3644 . -50) (undo-tree-id3645 . -49) (undo-tree-id3646 . -47) (undo-tree-id3647 . -45) (undo-tree-id3648 . -44) (undo-tree-id3649 . -42) (undo-tree-id3650 . -41) (undo-tree-id3651 . -39) (undo-tree-id3652 . -38) (undo-tree-id3653 . -36) (undo-tree-id3654 . -35) (undo-tree-id3655 . -33) (undo-tree-id3656 . -32) (undo-tree-id3657 . -31) (undo-tree-id3658 . -29) (undo-tree-id3659 . -28) (undo-tree-id3660 . -27) (undo-tree-id3661 . -26) (undo-tree-id3662 . -25) (undo-tree-id3663 . -24) (undo-tree-id3664 . -23) (undo-tree-id3665 . -22) (undo-tree-id3666 . -21) (undo-tree-id3667 . -20) (undo-tree-id3668 . -19) (undo-tree-id3669 . -18) (undo-tree-id3670 . -17) (undo-tree-id3671 . -16) (undo-tree-id3672 . -15) (undo-tree-id3673 . -14) (undo-tree-id3674 . -13) (undo-tree-id3675 . -12) (undo-tree-id3676 . -11) (undo-tree-id3677 . -10) (undo-tree-id3678 . -9) (undo-tree-id3679 . -8) (undo-tree-id3680 . -7) (undo-tree-id3681 . -6) (undo-tree-id3682 . -5) (undo-tree-id3683 . -4) (undo-tree-id3684 . -3) (undo-tree-id3685 . -2) (undo-tree-id3686 . -1) (undo-tree-id3687 . -50) (t 26052 62217 363702 743000)) nil (26052 62347 681150 1000) 0 nil])
([nil nil ((nil rear-nonsticky nil 668 . 669) (nil fontified nil 668 . 669) (nil fontified nil 650 . 668) (nil fontified nil 648 . 650) (nil fontified nil 642 . 648) (nil fontified nil 640 . 642) (nil fontified nil 635 . 640) (nil fontified nil 634 . 635) (nil fontified nil 632 . 634) (nil fontified nil 620 . 632) (nil fontified nil 619 . 620) (619 . 669)) nil (26052 62347 680986 444000) 0 nil])
([nil nil ((#("let device = device.logical_device;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 13 (fontified t) 13 20 (fontified t) 20 35 (fontified t)) . 575) (undo-tree-id3570 . -13) (undo-tree-id3571 . -13) (undo-tree-id3572 . -13) (undo-tree-id3573 . -13) (undo-tree-id3574 . -13) (undo-tree-id3575 . -13) (undo-tree-id3576 . -13) (undo-tree-id3577 . -13) (undo-tree-id3578 . -13) (undo-tree-id3579 . -13) (undo-tree-id3580 . -13) (undo-tree-id3581 . -13) (undo-tree-id3582 . -13) (undo-tree-id3583 . -13) (undo-tree-id3584 . -13) (undo-tree-id3585 . -13) (undo-tree-id3586 . -13) (undo-tree-id3587 . -35) (undo-tree-id3588 . -35) (undo-tree-id3589 . -35) (undo-tree-id3590 . -35) (undo-tree-id3591 . -35) (undo-tree-id3592 . -35) (undo-tree-id3593 . -35) (undo-tree-id3594 . -35) (undo-tree-id3595 . -35) (undo-tree-id3596 . -31) (undo-tree-id3597 . -1) (undo-tree-id3598 . -35)) nil (26052 62347 680983 474000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 643) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (642 . 643) (#(" " 0 1 (fontified nil)) . 641) (642 . 643) 643) nil (26052 62347 680961 822000) 0 nil])
([nil nil ((nil rear-nonsticky nil 677 . 678) (nil fontified nil 663 . 678) (nil fontified nil 656 . 663) (nil fontified nil 653 . 656) (nil fontified nil 647 . 653) (nil fontified nil 646 . 647) (nil fontified nil 643 . 646) (643 . 678)) nil (26052 62347 680953 228000) 0 nil])
([nil nil ((680 . 688) (#("        " 0 8 (fontified nil)) . 679) (undo-tree-id3555 . -8) (undo-tree-id3556 . -8) (undo-tree-id3557 . -8) (678 . 688)) nil (26052 62347 680951 200000) 0 nil])
([nil nil ((584 . 588)) nil (26052 62347 680948 365000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -587) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) 588) nil (26052 62347 680947 341000) 0 nil])
([nil nil ((#("QueueFamilyIndices," 0 18 (face font-lock-type-face fontified t) 18 19 (fontified t rear-nonsticky t)) . -618) (undo-tree-id3535 . -19) (undo-tree-id3536 . -19) (undo-tree-id3537 . -19) (undo-tree-id3538 . -19) (undo-tree-id3539 . -19) (undo-tree-id3540 . -19) (undo-tree-id3541 . -19) (undo-tree-id3542 . -19) (undo-tree-id3543 . -19) (undo-tree-id3544 . -19) (undo-tree-id3545 . -19) (undo-tree-id3546 . -19) (undo-tree-id3547 . -19) (undo-tree-id3548 . -19) (undo-tree-id3549 . -19) 637) nil (26052 62347 680942 742000) 0 nil])
([nil nil ((#("device::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -610) (undo-tree-id3512 . -8) (undo-tree-id3513 . -8) (undo-tree-id3514 . -8) (undo-tree-id3515 . -8) (undo-tree-id3516 . -8) (undo-tree-id3517 . -8) (undo-tree-id3518 . -8) (undo-tree-id3519 . -8) (undo-tree-id3520 . -8) (undo-tree-id3521 . -8) (undo-tree-id3522 . -8) (undo-tree-id3523 . -8) (undo-tree-id3524 . -8) (undo-tree-id3525 . -8) (undo-tree-id3526 . -8) (undo-tree-id3527 . -8) (undo-tree-id3528 . -8) (undo-tree-id3529 . -8) (undo-tree-id3530 . -8) (undo-tree-id3531 . -8) (undo-tree-id3532 . -8) (undo-tree-id3533 . -8) (undo-tree-id3534 . -8) 618) nil (26052 62347 680931 442000) 0 nil])
([nil nil ((#("crate::" 0 5 (face font-lock-keyword-face fontified t) 5 7 (fontified t)) . -603) (undo-tree-id3487 . -7) (undo-tree-id3488 . -7) (undo-tree-id3489 . -7) (undo-tree-id3490 . -7) (undo-tree-id3491 . -7) (undo-tree-id3492 . -7) (undo-tree-id3493 . -7) (undo-tree-id3494 . -7) (undo-tree-id3495 . -7) (undo-tree-id3496 . -7) (undo-tree-id3497 . -7) (undo-tree-id3498 . -7) (undo-tree-id3499 . -7) (undo-tree-id3500 . -7) (undo-tree-id3501 . -7) (undo-tree-id3502 . -7) (undo-tree-id3503 . -7) (undo-tree-id3504 . -7) (undo-tree-id3505 . -7) (undo-tree-id3506 . -7) (undo-tree-id3507 . -7) (undo-tree-id3508 . -7) (undo-tree-id3509 . -7) (undo-tree-id3510 . -7) (undo-tree-id3511 . -7) 610) nil (26052 62347 680915 11000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -600) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (#(" " 0 1 (fontified t)) . -601) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (#("&" 0 1 (fontified t)) . -602) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) 603) nil (26052 62347 680788 80000) 0 nil])
([nil nil ((600 . 604)) nil (26052 62347 679407 299000) 0 nil])
([nil nil ((603 . 609) (#("d" 0 1 (fontified nil)) . 603) (603 . 604) (#("device" 0 6 (fontified nil)) . -603) (603 . 609) (#("d" 0 1 (fontified t)) . -603) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) 604) nil (26052 62347 679406 21000) 0 nil])
([nil nil ((609 . 610)) nil (26052 62347 679401 402000) 0 nil])
([nil nil ((610 . 611)) nil (26052 62347 679400 637000) 0 nil])
([nil nil ((610 . 630) (#("q" 0 1 (fontified nil)) . 610) (610 . 611) (#("queue_family_indices" 0 20 (fontified nil)) . -610) (610 . 630) (#("q" 0 1 (fontified t)) . -610) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) 611) nil (26052 62347 679398 145000) 0 nil])
([nil nil ((630 . 631)) nil (26052 62347 679386 97000) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (fontified t)) . 567) (undo-tree-id3688 . -8) (undo-tree-id3689 . -8) (undo-tree-id3690 . -8) (undo-tree-id3691 . -8) (undo-tree-id3692 . -8) (undo-tree-id3693 . -8) (undo-tree-id3694 . -8) (undo-tree-id3695 . -8) (undo-tree-id3696 . -8) (undo-tree-id3697 . -8) (undo-tree-id3698 . -8) (undo-tree-id3699 . -8) (undo-tree-id3700 . -8) (undo-tree-id3701 . -8) (undo-tree-id3702 . -8) (undo-tree-id3703 . -8) (undo-tree-id3704 . -8) (undo-tree-id3705 . -8) (undo-tree-id3706 . -8) (undo-tree-id3707 . -8) (undo-tree-id3708 . -8) (undo-tree-id3709 . -8) (undo-tree-id3710 . -8) (undo-tree-id3711 . -8) (undo-tree-id3712 . -8) (undo-tree-id3713 . -8) (undo-tree-id3714 . -8) (undo-tree-id3715 . -8) (undo-tree-id3716 . -8) (undo-tree-id3717 . -8) (undo-tree-id3718 . -9) (t 26052 62347 697044 71000)) nil (26052 62350 404422 408000) 0 nil])
([nil nil ((635 . 637) (t 26052 62350 420377 572000)) nil (26052 62364 372799 571000) 0 nil])
([nil nil ((#("lodevice" 0 2 (face font-lock-variable-name-face fontified t) 2 8 (face font-lock-variable-name-face fontified t)) . -635) (undo-tree-id3743 . -2) (undo-tree-id3744 . -8) (undo-tree-id3745 . -8) (undo-tree-id3746 . -8) (undo-tree-id3747 . -8) (undo-tree-id3748 . -8) (undo-tree-id3749 . -8) (undo-tree-id3750 . -1) (undo-tree-id3751 . -2) (undo-tree-id3752 . -2) (undo-tree-id3753 . -2) (undo-tree-id3754 . -2) (undo-tree-id3755 . -2) (undo-tree-id3756 . -2) (undo-tree-id3757 . -2) (undo-tree-id3758 . -2) (undo-tree-id3759 . -3) (undo-tree-id3760 . -4) (undo-tree-id3761 . -5) (undo-tree-id3762 . 3) (undo-tree-id3763 . -5) (undo-tree-id3764 . -5) (undo-tree-id3765 . -6) (undo-tree-id3766 . -7) (undo-tree-id3767 . -8) 643) nil (26052 62364 372797 451000) 0 nil])
([nil nil ((634 . 635)) nil (26052 62364 372778 308000) 0 nil])
([nil nil ((nil rear-nonsticky nil 648 . 649) (nil fontified nil 635 . 649) (635 . 649)) nil (26052 62364 372776 733000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 649) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1)) nil (26052 62364 372771 402000) 0 nil])
([nil nil ((2929 . 2930) (t 26052 62364 390378 430000)) nil (26052 62374 77697 8000) 0 nil])
([nil nil ((2929 . 2930) (2929 . 2943) (#("ldevice" 0 1 (fontified nil) 1 7 (fontified nil)) . 2929) (undo-tree-id3768 . 6) (2929 . 2930) (#("&logical_device" 0 15 (fontified nil)) . -2929) (2929 . 2944) (#("l" 0 1 (fontified t)) . -2929) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) 2930) nil (26052 62374 77691 942000) 0 nil])
([nil nil ((594 . 595) (t 26052 62374 83712 358000)) nil (26052 62391 31999 147000) 0 nil])
([nil nil ((653 . 654)) nil (26052 62391 31994 208000) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -2931) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) 2932 (t 26052 62391 47046 732000)) nil (26052 62396 155387 775000) 0 nil])
([nil nil ((543 . 544) (t 26052 62396 170380 380000)) nil (26052 62409 769894 428000) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -543) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) 544 (t 26052 62409 820381 218000)) nil (26052 62433 159055 852000) 0 nil])
([nil nil ((5374 . 5387) (t 26052 62433 207049 321000)) nil (26052 62502 160442 903000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5441 . 5442) (nil fontified nil 5440 . 5442) (nil fontified nil 5439 . 5440) (nil fontified nil 5410 . 5439) (nil fontified nil 5409 . 5410) (nil fontified nil 5404 . 5409) (nil fontified nil 5402 . 5404) (nil fontified nil 5395 . 5402) (nil fontified nil 5387 . 5395) (5387 . 5442)) nil (26052 62502 160441 925000) 0 nil])
([nil nil ((5442 . 5454)) nil (26052 62502 160440 263000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -5387)) nil (26052 62502 160439 627000) 0 nil])
([nil nil ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 5434) (undo-tree-id3810 . -12) (undo-tree-id3811 . -12) (undo-tree-id3812 . -12) (undo-tree-id3813 . -12) (undo-tree-id3814 . -12) (undo-tree-id3815 . -12) (undo-tree-id3816 . -12) (undo-tree-id3817 . -12) (undo-tree-id3818 . -12) (undo-tree-id3819 . -13)) nil (26052 62502 160438 695000) 0 nil])
([nil nil ((#("DebugMessager" 0 13 (face font-lock-string-face fontified t)) . -5417) (undo-tree-id3803 . -13) (undo-tree-id3804 . -13) (undo-tree-id3805 . -13) (undo-tree-id3806 . -13) (undo-tree-id3807 . -13) (undo-tree-id3808 . -13) (undo-tree-id3809 . -13) 5430) nil (26052 62502 160431 591000) 0 nil])
([nil nil ((5417 . 5418)) nil (26052 62502 160425 931000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-string-face fontified t)) . -5417) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) 5418) nil (26052 62502 160423 859000) 0 nil])
([nil nil ((5417 . 5426)) nil (26052 62502 160409 530000) 0 nil])
([nil nil ((251 . 256) (t 26052 62502 177053 556000)) nil (26052 63835 38957 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 301 . 302) (nil fontified nil 256 . 302) (256 . 302)) nil (26052 63835 38956 432000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -301) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) 302) nil (26052 63835 38954 126000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -256) 301) nil (26052 63835 38932 787000) 0 nil])
([nil nil ((3578 . 3582) (#("    " 0 4 (fontified nil)) . 3577) (undo-tree-id3830 . -4) (undo-tree-id3831 . -4) (undo-tree-id3832 . -4) (3576 . 3582) (t 26052 63835 53802 47000)) nil (26052 64008 381257 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5070 . 5071) (nil fontified nil 3582 . 5071) (3582 . 5071)) nil (26052 64008 381249 850000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3582) 3581) nil (26052 64008 381244 737000) 0 nil])
([nil nil ((3977 . 3978) (t 26052 64008 430479 356000)) nil (26052 64015 390009 928000) 0 nil])
([nil nil ((3978 . 3981)) nil (26052 64015 390008 471000) 0 nil])
([nil nil ((3981 . 3982)) nil (26052 64015 390004 495000) 0 nil])
([nil nil ((3370 . 3378) (#("        " 0 8 (fontified nil)) . 3369) (undo-tree-id3853 . -8) (undo-tree-id3854 . -8) (undo-tree-id3855 . -8) (3368 . 3378) (t 26052 64015 393813 116000)) nil (26052 64038 26903 660000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3567 . 3568) (nil fontified nil 3378 . 3568) (3378 . 3568)) nil (26052 64038 26900 518000) 0 nil])
([nil nil ((3369 . 3377)) nil (26052 64038 26899 610000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3386) 3413) nil (26052 64038 26898 843000) 0 nil])
([nil nil ((#("VulkanApp" 0 9 (face font-lock-type-face fontified t)) . -3413) (undo-tree-id3843 . -9) (undo-tree-id3844 . -9) (undo-tree-id3845 . -9) (undo-tree-id3846 . -9) (undo-tree-id3847 . -9) (undo-tree-id3848 . -9) (undo-tree-id3849 . -9) (undo-tree-id3850 . -9) (undo-tree-id3851 . -9) (undo-tree-id3852 . -9) 3422) nil (26052 64038 26897 443000) 0 nil])
([nil nil ((3413 . 3415)) nil (26052 64038 26889 473000) 0 nil])
([nil nil ((3413 . 3422) (#("Sw" 0 2 (fontified nil)) . 3413) (3413 . 3415) (#("SwapChain" 0 9 (fontified nil)) . -3413) (3413 . 3422) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -3413) (undo-tree-id3833 . -2) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -2) (undo-tree-id3839 . -2) (undo-tree-id3840 . -2) (undo-tree-id3841 . -2) (undo-tree-id3842 . -2) 3415) nil (26052 64038 26885 420000) 0 nil])
([nil nil ((#("device" 0 6 (fontified t)) . -3457) (undo-tree-id3863 . -6) (undo-tree-id3864 . -6) (undo-tree-id3865 . -6) (undo-tree-id3866 . -6) (undo-tree-id3867 . -6) (undo-tree-id3868 . -6) (undo-tree-id3869 . -6) (undo-tree-id3870 . -6) (undo-tree-id3871 . -6) 3463 (t 26052 64038 43814 506000)) nil (26052 64044 62863 21000) 0 nil])
([nil nil ((3457 . 3458)) nil (26052 64044 62853 922000) 0 nil])
([nil nil ((3457 . 3471) (#("l" 0 1 (fontified nil)) . 3457) (3457 . 3458) (#("logical_device" 0 14 (fontified nil)) . -3457) (3457 . 3471) (#("l" 0 1 (fontified t)) . -3457) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) 3458) nil (26052 64044 62849 656000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3494) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (#("s" 0 1 (fontified t)) . -3495) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (#("t" 0 1 (fontified t)) . -3496) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (#("u" 0 1 (fontified t)) . -3497) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (#("f" 0 1 (fontified t)) . -3498) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (#("f" 0 1 (fontified t)) . -3499) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) 3500 (t 26052 64044 80481 542000)) nil (26052 64047 271974 734000) 0 nil])
([nil nil ((#("stuff" 0 5 (fontified t)) . -3536) (undo-tree-id3927 . -5) (undo-tree-id3928 . -5) (undo-tree-id3929 . -5) 3541 (t 26052 64047 287148 406000)) nil (26052 64057 542559 662000) 0 nil])
([nil nil ((#("swapchain." 0 10 (fontified t)) . -3485) (undo-tree-id3958 . -10) (undo-tree-id3959 . -10) (undo-tree-id3960 . -10) (undo-tree-id3961 . -10) (undo-tree-id3962 . -10) (undo-tree-id3963 . -10) (undo-tree-id3964 . -10) (undo-tree-id3965 . -10) (undo-tree-id3966 . -10) (undo-tree-id3967 . -10) (undo-tree-id3968 . -10) (undo-tree-id3969 . -10) (undo-tree-id3970 . -10) (undo-tree-id3971 . -10) 3495) nil (26052 64063 786376 553000) 0 nil] [nil nil ((#("_" 0 1 (fontified t)) . -3535) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3924 . -1) (undo-tree-id3926 . -1) 3536) ((3535 . 3536) (t 26052 64050 770481 954000)) (26052 64057 275870 729000) 0 nil])
([nil nil ((#("swapchain_." 0 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . -3516) (undo-tree-id3951 . -10) (undo-tree-id3952 . -11) (undo-tree-id3953 . -10) (undo-tree-id3954 . -10) (undo-tree-id3955 . -10) (undo-tree-id3956 . -9) (undo-tree-id3957 . -11) 3527) nil (26052 64063 786287 653000) 0 nil])
([nil nil ((#("swapchain." 0 10 (fontified t)) . -3485) (undo-tree-id3930 . -10) (undo-tree-id3931 . -10) (undo-tree-id3932 . -10) (undo-tree-id3933 . -10) (undo-tree-id3934 . -10) (undo-tree-id3935 . -10) (undo-tree-id3936 . -10) (undo-tree-id3937 . -10) (undo-tree-id3938 . -10) (undo-tree-id3939 . -10) (undo-tree-id3940 . -10) 3495 (t 26052 64050 770481 954000)) ((3485 . 3495)) (26052 64057 275298 945000) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -3515) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) 3516) nil (26052 64063 786278 970000) 0 nil])
nil
([nil nil ((#("format" 0 6 (fontified t)) . -3495) (undo-tree-id3997 . -6) (undo-tree-id3998 . -6) (undo-tree-id3999 . -6) (undo-tree-id4000 . -6) (undo-tree-id4001 . -6) (undo-tree-id4002 . -6) 3501 (t 26052 64063 833816 90000)) nil (26052 64089 614298 980000) 0 nil])
([nil nil ((#("swapchain_" 0 10 (fontified t)) . -3485) (undo-tree-id3989 . -10) (undo-tree-id3990 . -9) (undo-tree-id3991 . -10) (undo-tree-id3992 . -10) (undo-tree-id3993 . -10) (undo-tree-id3994 . -10) (undo-tree-id3995 . -10) (undo-tree-id3996 . -10) 3495) nil (26052 64089 614293 809000) 0 nil])
([nil nil ((3485 . 3486)) nil (26052 64089 614288 503000) 0 nil])
([nil nil ((3485 . 3499) (#("s" 0 1 (fontified nil)) . 3485) (3485 . 3486) (#("surface_format" 0 14 (fontified nil)) . -3485) (3485 . 3499) (#("s" 0 1 (fontified t)) . -3485) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) 3486) nil (26052 64089 614287 163000) 0 nil])
([nil nil ((3499 . 3501)) nil (26052 64089 614282 699000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3499) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (#("f" 0 1 (fontified t)) . -3500) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) 3501) nil (26052 64089 614281 466000) 0 nil])
([nil nil ((3499 . 3501)) nil (26052 64089 614274 99000) 0 nil])
([nil nil ((3500 . 3506) (#("f" 0 1 (fontified nil)) . 3500) (3500 . 3501) (#("format" 0 6 (fontified nil)) . -3500) (3500 . 3506) (#("f" 0 1 (fontified t)) . -3500) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) 3501) nil (26052 64089 614269 805000) 0 nil])
([nil nil ((3520 . 3527) (t 26052 64089 663817 678000)) nil (26052 64096 411120 770000) 0 nil])
([nil nil ((#("&" 0 1 (face rust-ampersand-face fontified t)) . -3521) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (#("&" 0 1 (face rust-ampersand-face fontified t)) . -3522) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (#("&" 0 1 (face rust-ampersand-face fontified t)) . -3523) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (#("&" 0 1 (face rust-ampersand-face fontified t)) . -3524) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (#("&" 0 1 (face rust-ampersand-face fontified t)) . -3525) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (#("&" 0 1 (face rust-ampersand-face fontified t)) . -3526) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) 3527) nil (26052 64098 506404 414000) 0 nil] [nil nil ((#("format,
            &&&&&&&" 0 6 (fontified t) 6 8 (fontified t) 8 20 (fontified t) 20 27 (face rust-ampersand-face fontified t)) . -3500) (undo-tree-id4003 . -27) (undo-tree-id4004 . -27) (undo-tree-id4005 . -1) (undo-tree-id4006 . -20) (undo-tree-id4007 . -20) (undo-tree-id4008 . -20) (undo-tree-id4009 . -20) (undo-tree-id4010 . -20) (undo-tree-id4011 . -20) (undo-tree-id4012 . -20) (undo-tree-id4013 . -20) (undo-tree-id4014 . -20) (undo-tree-id4015 . -20) (undo-tree-id4016 . -20) (undo-tree-id4017 . -20) (undo-tree-id4018 . -8) (undo-tree-id4019 . -27) (undo-tree-id4020 . -27) (undo-tree-id4021 . -27) (undo-tree-id4022 . -27) (undo-tree-id4023 . -27) (undo-tree-id4024 . -27) (undo-tree-id4025 . -27) (undo-tree-id4026 . -27) (undo-tree-id4027 . -27) 3527) ((3500 . 3527)) (26052 64096 410695 221000) 0 nil])
([nil nil ((3741 . 3754) (t 26052 64098 523818 221000)) nil (26052 64107 49868 969000) 0 nil])
nil
([nil nil ((3754 . 3755)) nil (26052 64107 49868 18000) 0 nil])
([nil nil ((3754 . 3774) (#("s" 0 1 (fontified nil)) . 3754) (3754 . 3755) (#("swapchain_imageviews" 0 20 (fontified nil)) . -3754) (3754 . 3774) (#("s" 0 1 (fontified t)) . -3754) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) 3755) nil (26052 64107 49865 293000) 0 nil])
([nil nil ((3774 . 3775)) nil (26052 64107 49852 916000) 0 nil])
([nil nil ((7131 . 7144) (t 26052 64107 67152 80000)) nil (26052 64139 710189 176000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7287 . 7288) (nil fontified nil 7144 . 7288) (7144 . 7288)) nil (26052 64139 710187 261000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -7144) 7133) nil (26052 64139 710181 663000) 0 nil])
([nil nil ((#("            for &imageview in self.swapchain_imageviews.iter() {
                self.device.destroy_image_view(imageview, None);
            }" 0 12 (fontified t) 12 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 17 (face rust-ampersand-face fontified t) 17 27 (fontified t) 27 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 34 (face font-lock-keyword-face fontified t) 34 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-4-face) fontified t) 61 62 (face (rainbow-delimiters-depth-4-face) fontified t) 62 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-4-face) fontified t) 64 65 (fontified t) 65 81 (fontified t) 81 85 (face font-lock-keyword-face fontified t) 85 111 (fontified t) 111 112 (face (rainbow-delimiters-depth-5-face) fontified t) 112 123 (fontified t) 123 127 (face font-lock-type-face fontified t) 127 128 (face (rainbow-delimiters-depth-5-face) fontified t) 128 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-4-face) fontified t)) . 7132) (undo-tree-id4164 . -143) (undo-tree-id4165 . -12) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -143) (undo-tree-id4183 . -143) (undo-tree-id4184 . -143) (undo-tree-id4185 . -143) (undo-tree-id4186 . -143) (undo-tree-id4187 . -92) (undo-tree-id4188 . -92) (undo-tree-id4189 . -92) (undo-tree-id4190 . -92) (undo-tree-id4191 . -92) (undo-tree-id4192 . -92) (undo-tree-id4193 . -92) (undo-tree-id4194 . -92) (undo-tree-id4195 . -92) (undo-tree-id4196 . -92) (undo-tree-id4197 . -92) (undo-tree-id4198 . -92) (undo-tree-id4199 . -92) (undo-tree-id4200 . -92) (undo-tree-id4201 . -92) (undo-tree-id4202 . -92) (undo-tree-id4203 . -92) (undo-tree-id4204 . -92) (undo-tree-id4205 . -92) (undo-tree-id4206 . -92) (undo-tree-id4207 . -92) (undo-tree-id4208 . -92) (undo-tree-id4209 . -92) (undo-tree-id4210 . -92) (undo-tree-id4211 . -92) (undo-tree-id4212 . -92) (undo-tree-id4213 . -92) (undo-tree-id4214 . -92) (undo-tree-id4215 . -92) (undo-tree-id4216 . -92) (undo-tree-id4217 . -92) (undo-tree-id4218 . -92) (undo-tree-id4219 . -92) (undo-tree-id4220 . -92) (undo-tree-id4221 . -92) (undo-tree-id4222 . -92) (undo-tree-id4223 . -92) (undo-tree-id4224 . -143) (undo-tree-id4225 . -143) (undo-tree-id4226 . -143) (undo-tree-id4227 . -77) (undo-tree-id4228 . -76) (undo-tree-id4229 . -75) (undo-tree-id4230 . -74) (undo-tree-id4231 . -73) (undo-tree-id4232 . -72) (undo-tree-id4233 . -71) (undo-tree-id4234 . -70) (undo-tree-id4235 . -69) (undo-tree-id4236 . -68) (undo-tree-id4237 . -67) (undo-tree-id4238 . -1) (undo-tree-id4239 . -143) (t 26052 64139 727154 86000)) nil (26052 64168 176509 527000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -7132) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (#("
" 0 1 (fontified t)) . -7133) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) 7134) nil (26052 64168 176460 937000) 0 nil])
([nil nil ((256 . 257) (t 26052 64168 193822 497000)) nil (26052 64229 457588 492000) 0 nil])
([nil current ((257 . 260)) nil (26052 64229 457583 394000) 0 nil])
nil
