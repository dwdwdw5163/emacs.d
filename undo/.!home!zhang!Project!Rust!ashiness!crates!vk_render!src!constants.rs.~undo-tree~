(undo-tree-save-format-version . 1)
"bfbb455d4f50dbdbf7ea8505d95c9e6dc2e830be"
[nil nil nil nil (26052 57234 545389 749000) 0 nil]
([nil nil ((1 . 2) (t 26052 57037 456718 225000)) nil (26052 57234 545388 689000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 2) nil (26052 57234 545387 532000) 0 nil])
([nil nil ((1 . 2)) nil (26052 57234 545381 173000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 2) nil (26052 57234 545380 189000) 0 nil])
([nil nil ((1 . 3)) nil (26052 57234 545373 685000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 3) nil (26052 57234 545372 837000) 0 nil])
([nil nil ((2 . 6)) nil (26052 57234 545368 380000) 0 nil])
([nil nil ((6 . 12)) nil (26052 57234 545367 617000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-type-face fontified t)) . -11) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 12) nil (26052 57234 545366 707000) 0 nil])
([nil nil ((11 . 21)) nil (26052 57234 545364 681000) 0 nil])
([nil nil ((#("DEVICECONSTANT" 0 14 (face font-lock-type-face fontified t)) . -7) (undo-tree-id30 . -14) (undo-tree-id31 . -14) (undo-tree-id32 . -1) (undo-tree-id33 . -2) (undo-tree-id34 . -3) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -5) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -6) (undo-tree-id46 . -7) (undo-tree-id47 . -8) (undo-tree-id48 . -9) (undo-tree-id49 . -10) (undo-tree-id50 . -11) (undo-tree-id51 . -12) (undo-tree-id52 . -13) (undo-tree-id53 . -14) (undo-tree-id54 . -14) (undo-tree-id55 . -14) (undo-tree-id56 . -14) (undo-tree-id57 . -14) (undo-tree-id58 . -14) (undo-tree-id59 . -14) (undo-tree-id60 . -14) 21) nil (26052 57234 545362 965000) 0 nil])
([nil nil ((7 . 9)) nil (26052 57234 545342 438000) 0 nil])
([nil nil ((9 . 25)) nil (26052 57234 545341 702000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -24) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 25) nil (26052 57234 545340 563000) 0 nil])
([nil nil ((24 . 25)) nil (26052 57234 545333 881000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -24) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 25) nil (26052 57234 545332 821000) 0 nil])
([nil nil ((24 . 27)) nil (26052 57234 545326 509000) 0 nil])
([nil nil ((apply yas--snippet-revive 26 31 #s(yas--snippet nil nil #s(yas--exit 30 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 30 nil) 0 nil nil nil nil)) (26 . 31) (#("Vec<$0>" 0 7 (fontified nil)) . 26) (26 . 33) (#("V" 0 1 (fontified nil)) . 26) (26 . 27) (#("Vec<…>" 0 6 (fontified nil)) . -26) (26 . 32) (#("V" 0 1 (face font-lock-type-face fontified t)) . -26) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 27) nil (26052 57234 545325 138000) 0 nil])
([nil nil ((30 . 31)) nil (26052 57234 545320 491000) 0 nil])
([nil nil ((30 . 37) (#("'" 0 1 (fontified nil)) . 30) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("'static" 0 7 (fontified nil)) . -31) (31 . 38)) nil (26052 57234 545319 350000) 0 nil])
([nil nil ((30 . 31)) nil (26052 57234 545314 813000) 0 nil])
([nil nil ((38 . 42)) nil (26052 57234 545313 867000) 0 nil])
([nil nil ((43 . 47)) nil (26052 57234 545313 224000) 0 nil])
([nil nil ((apply yas--snippet-revive 46 52 #s(yas--snippet nil nil #s(yas--exit 51 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 51 nil) 1 nil nil nil nil)) (46 . 52) (#("vec![$0]" 0 8 (fontified nil)) . 46) (46 . 54) (#("v" 0 1 (fontified nil)) . 46) (46 . 47) (#("vec![…]" 0 7 (fontified nil)) . -46) (46 . 53) (#("v" 0 1 (fontified t)) . -46) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 47) nil (26052 57234 545311 663000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 52) (52 . 56) (51 . 53)) nil (26052 57234 545290 868000) 0 nil])
([nil nil ((52 . 54)) nil (26052 57234 545289 863000) 0 nil])
([nil nil ((52 . 56) 54) nil (26052 57234 545288 949000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72 . 73) (nil fontified nil 57 . 73) (57 . 73)) nil (26052 57234 545287 233000) 0 nil])
([nil nil ((76 . 77) 73) nil (26052 57234 545282 341000) 0 nil])
([nil nil ((76 . 77) (t 26052 57234 596730 315000)) nil (26052 57236 773013 227000) 0 nil])
([nil nil ((1 . 3) (t 26052 57236 783397 116000)) nil (26052 57269 412107 904000) 0 nil])
([nil nil ((1 . 2)) nil (26052 57269 412107 141000) 0 nil])
([nil nil ((1 . 12) (#("l" 0 1 (fontified nil)) . 1) (1 . 2) (#("lazy_static" 0 11 (fontified nil)) . -1) (1 . 12) (#("l" 0 1 (fontified t)) . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 2) nil (26052 57269 412106 161000) 0 nil])
([nil nil ((#("static" 0 6 (fontified t)) . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) 12) nil (26052 57269 412101 143000) 0 nil])
([nil nil ((#("lazy_" 0 5 (fontified t)) . -1) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) 6) nil (26052 57269 412094 555000) 0 nil])
([nil nil ((1 . 6)) nil (26052 57269 412087 231000) 0 nil])
([nil nil ((5 . 16) (#("l" 0 1 (fontified nil)) . 5) (5 . 6) (#("lazy_static" 0 11 (fontified nil)) . -5) (5 . 16) (#("l" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 6) nil (26052 57269 412086 47000) 0 nil])
([nil nil ((16 . 19)) nil (26052 57269 412081 58000) 0 nil])
([nil nil ((18 . 22) (#("l" 0 1 (fontified nil)) . 18) (18 . 19) (#("lazy" 0 4 (fontified nil)) . -18) (18 . 22) (#("l" 0 1 (fontified t)) . -18) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 19) nil (26052 57269 412080 4000) 0 nil])
([nil nil ((#("lazy" 0 4 (fontified t)) . -18) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) 22) nil (26052 57269 412075 504000) 0 nil])
([nil nil ((18 . 19)) nil (26052 57269 412069 881000) 0 nil])
([nil nil ((18 . 29) (#("l" 0 1 (fontified nil)) . 18) (18 . 19) (#("lazy_static" 0 11 (fontified nil)) . -18) (18 . 29) (#("l" 0 1 (fontified t)) . -18) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 19) nil (26052 57269 412068 281000) 0 nil])
([nil nil ((29 . 30)) nil (26052 57269 412063 208000) 0 nil])
([nil nil ((31 . 33)) nil (26052 57269 412062 615000) 0 nil])
([nil nil ((32 . 33)) nil (26052 57269 412061 990000) 0 nil])
([nil nil ((apply yas--snippet-revive 32 46 #s(yas--snippet nil nil #s(yas--exit 45 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 45 nil) 2 nil nil nil nil)) (32 . 46) (#("lazy_static!($0)" 0 16 (fontified nil)) . 32) (32 . 48) (#("l" 0 1 (fontified nil)) . 32) (32 . 33) (#("lazy_static!(…)" 0 15 (fontified nil)) . -32) (32 . 47) (#("l" 0 1 (fontified t)) . -32) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 33) nil (26052 57269 412060 340000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 46) (46 . 50) (45 . 47)) nil (26052 57269 412055 42000) 0 nil])
([nil nil ((#("const DEVICE_EXTENSIONS: Vec<&'static str> = vec![
    \"VK_KHR_swapchain\"
];
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 23 (face font-lock-variable-name-face fontified t) 23 25 (fontified t) 25 28 (face font-lock-type-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (face rust-ampersand-face fontified t) 30 31 (fontified t) 31 37 (face font-lock-keyword-face fontified t) 37 38 (fontified t) 38 41 (face font-lock-type-face fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 45 (fontified t) 45 49 (face font-lock-preprocessor-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (face font-lock-string-face fontified t) 56 71 (face font-lock-string-face fontified t) 71 72 (face font-lock-string-face fontified t rear-nonsticky t) 72 73 (face font-lock-string-face fontified t) 73 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 76 (fontified t) 76 77 (fontified t)) . 50) (undo-tree-id87 . -29) (undo-tree-id88 . -42) (undo-tree-id89 . -77) (undo-tree-id90 . -56) (undo-tree-id91 . -76) (undo-tree-id92 . -76) (undo-tree-id93 . -76) (undo-tree-id94 . -76) (undo-tree-id95 . -76) (undo-tree-id96 . -76) (undo-tree-id97 . -76) (undo-tree-id98 . -76) (undo-tree-id99 . -76) (undo-tree-id100 . -76) (undo-tree-id101 . -53) (undo-tree-id102 . -29) (undo-tree-id103 . -29) (undo-tree-id104 . -29) (undo-tree-id105 . -29) (undo-tree-id106 . -29) (undo-tree-id107 . -56) (undo-tree-id108 . -77) (undo-tree-id109 . -77) 127) nil (26052 57269 412053 66000) 0 nil])
([nil nil ((nil rear-nonsticky nil 122 . 123) (nil fontified nil 122 . 123) (nil fontified nil 121 . 122) (nil fontified nil 120 . 121) (nil fontified nil 119 . 120) (nil fontified nil 118 . 119) (nil fontified nil 117 . 118) (nil fontified nil 102 . 117) (nil fontified nil 101 . 102) (nil fontified nil 97 . 101) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 91 . 95) (nil fontified nil 88 . 91) (nil fontified nil 87 . 88) (nil fontified nil 84 . 87) (nil fontified nil 83 . 84) (nil fontified nil 77 . 83) (nil fontified nil 76 . 77) (nil fontified nil 75 . 76) (nil fontified nil 74 . 75) (nil fontified nil 71 . 74) (nil fontified nil 69 . 71) (nil fontified nil 52 . 69) (nil fontified nil 51 . 52) (nil fontified nil 46 . 51) (46 . 123)) nil (26052 57269 412034 788000) 0 nil])
([nil nil ((128 . 132) (101 . 109) (#("    " 0 4 (fontified t)) . 101) (undo-tree-id86 . -1) (46 . 50) 31) nil (26052 57269 412360 484000) 0 nil])
([nil nil ((#("const" 0 5 (face font-lock-keyword-face fontified t)) . -50) (undo-tree-id165 . -5) (undo-tree-id166 . -5) 55) nil (26052 57278 244165 469000) 0 nil] [nil nil ((#("V" 0 1 (face font-lock-string-face fontified t)) . -110) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 111) ((110 . 111)) (26052 57269 411859 705000) 0 nil])
([nil nil ((50 . 51)) nil (26052 57278 244163 112000) 0 nil])
nil
([nil nil ((#("r" 0 1 (fontified t)) . -50) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 51) nil (26052 57278 244161 463000) 0 nil])
([nil nil ((50 . 60)) nil (26052 57278 244151 451000) 0 nil])
([nil nil ((60 . 64)) nil (26052 57278 244147 589000) 0 nil])
([nil nil ((#("ref " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -54) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) 58 (t 26052 57278 256732 996000)) nil (26052 57293 667507 333000) 0 nil])
([nil nil ((60 . 64)) nil (26052 57293 667243 123000) 0 nil])
([nil nil ((146 . 147) (t 26052 57293 680067 272000)) nil (26052 57297 839295 557000) 0 nil])
([nil nil ((44 . 46) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -44) (undo-tree-id177 . -1) 45 (#("
        " 0 1 (fontified t) 1 9 (fontified t)) . -109) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . -136) (144 . 145) (#("
)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -144) (undo-tree-id178 . -2) 146 (#("
" 0 1 (fontified t)) . 148) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (t 26052 57297 850067 523000)) nil (26052 57302 441107 807000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -132) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 133 (t 26052 57302 483401 141000)) nil (26052 58218 237861 915000) 0 nil])
([nil nil ((#("swapchain\"" 0 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t rear-nonsticky t) 9 10 (face font-lock-string-face fontified t)) . -118) (undo-tree-id560 . -10) (undo-tree-id561 . -9) (undo-tree-id562 . -9) (undo-tree-id563 . -10) (undo-tree-id564 . -10) (undo-tree-id565 . -10) (undo-tree-id566 . -10) (undo-tree-id567 . -10) 128 (t 26052 58219 26790 720000)) nil (26052 58267 374733 769000) 0 nil] [nil nil ((apply -9 32 142 undo--wrap-and-run-primitive-undo 32 142 ((137 . 140) (50 . 53) (32 . 35)))) ((apply 9 32 133 undo--wrap-and-run-primitive-undo 32 133 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 32) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 50) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 137) 32))) (26052 58217 136660 759000) 0 nil])
([nil nil ((#("KHR_" 0 4 (face font-lock-string-face fontified t)) . -114) (undo-tree-id545 . -4) (undo-tree-id546 . -3) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) 118) nil (26052 58267 374728 362000) 0 nil])
([nil nil ((apply -9 32 151 undo--wrap-and-run-primitive-undo 32 151 ((143 . 146) (53 . 56) (32 . 35)))) ((apply 9 32 142 undo--wrap-and-run-primitive-undo 32 142 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 32) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 53) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 143) 32))) (26052 58217 135678 672000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -110) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("V" 0 1 (face font-lock-string-face fontified t)) . -111) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("K" 0 1 (face font-lock-string-face fontified t)) . -112) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("_" 0 1 (face font-lock-string-face fontified t)) . -113) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) 114) nil (26052 58267 374717 763000) 0 nil])
nil
([nil nil ((110 . 116)) nil (26052 58267 374662 726000) 0 nil])
([nil nil ((115 . 125) (#("e" 0 1 (fontified nil)) . 115) (115 . 116) (#("extensions" 0 10 (fontified nil)) . -115) (115 . 125) (#("e" 0 1 (fontified t)) . -115) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) 116) nil (26052 58267 374661 760000) 0 nil])
([nil nil ((125 . 128)) nil (26052 58267 374658 891000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -127) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 128) nil (26052 58267 374658 192000) 0 nil])
([nil nil ((127 . 128)) nil (26052 58267 374655 763000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -127) (undo-tree-id438 . -1) (undo-tree-id439 . -1) 128) nil (26052 58267 374655 147000) 0 nil])
([nil nil ((127 . 128)) nil (26052 58267 374653 624000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -127) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 128) nil (26052 58267 374652 920000) 0 nil])
([nil nil ((#("extensions::" 0 10 (face font-lock-constant-face fontified t) 10 12 (fontified t)) . -115) (undo-tree-id417 . -12) (undo-tree-id418 . -10) (undo-tree-id419 . -10) (undo-tree-id420 . -11) (undo-tree-id421 . -12) (undo-tree-id422 . -12) (undo-tree-id423 . -12) (undo-tree-id424 . -12) (undo-tree-id425 . -12) (undo-tree-id426 . -12) (undo-tree-id427 . -12) (undo-tree-id428 . -12) (undo-tree-id429 . -12) (undo-tree-id430 . -12) (undo-tree-id431 . -12) (undo-tree-id432 . -12) (undo-tree-id433 . -12) 127) nil (26052 58267 374649 683000) 0 nil])
([nil nil ((#("ash::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -110) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -1) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -5) (undo-tree-id396 . -5) (undo-tree-id397 . -5) (undo-tree-id398 . -5) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5) (undo-tree-id415 . -5) (undo-tree-id416 . -5) 115) nil (26052 58267 374639 755000) 0 nil])
([nil nil ((#("str" 0 3 (face font-lock-type-face fontified t)) . -98) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) 101) nil (26052 58267 374608 13000) 0 nil])
([nil nil ((#("static " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -91) (undo-tree-id343 . -7) (undo-tree-id344 . -6) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) 98) nil (26052 58267 374603 245000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -89) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("'" 0 1 (fontified t)) . -90) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) 91) nil (26052 58267 374593 109000) 0 nil])
([nil nil ((89 . 90)) nil (26052 58267 374435 559000) 0 nil])
([nil nil ((101 . 105) (#("        " 0 8 (fontified nil)) . 100) (100 . 108) (#("    " 0 4 (fontified nil)) . 100) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (99 . 105)) nil (26052 58267 374434 786000) 0 nil])
([nil nil ((100 . 108)) nil (26052 58267 374432 319000) 0 nil])
([nil nil ((108 . 111)) nil (26052 58267 374431 865000) 0 nil])
([nil nil ((111 . 115)) nil (26052 58267 374431 382000) 0 nil])
([nil nil ((113 . 123) (#("ex" 0 2 (fontified nil)) . 113) (113 . 115) (#("extensions" 0 10 (fontified nil)) . -113) (113 . 123) (#("ex" 0 2 (fontified t)) . -113) (undo-tree-id287 . -2) (undo-tree-id288 . -1) (undo-tree-id289 . -2) (undo-tree-id290 . -2) 115) nil (26052 58267 374430 513000) 0 nil])
([nil nil ((123 . 126)) nil (26052 58267 374427 534000) 0 nil])
([nil nil ((125 . 128) (#("e" 0 1 (fontified nil)) . 125) (125 . 126) (#("ext" 0 3 (fontified nil)) . -125) (125 . 128) (#("e" 0 1 (fontified t)) . -125) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 126) nil (26052 58267 374426 557000) 0 nil])
([nil nil ((128 . 135)) nil (26052 58267 374421 400000) 0 nil])
([nil nil ((108 . 109)) nil (26052 58267 374420 821000) 0 nil])
([nil nil ((#("ash::extensions::ext::SwapC" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 15 (face font-lock-constant-face fontified t) 15 17 (fontified t) 17 20 (face font-lock-constant-face fontified t) 20 22 (fontified t) 22 27 (face font-lock-type-face fontified t)) . 109) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -15) (undo-tree-id246 . -15) (undo-tree-id247 . -16) (undo-tree-id248 . -17) (undo-tree-id249 . -17) (undo-tree-id250 . -17) (undo-tree-id251 . -17) (undo-tree-id252 . -17) (undo-tree-id253 . -17) (undo-tree-id254 . -17) (undo-tree-id255 . -17) (undo-tree-id256 . -20) (undo-tree-id257 . -20) (undo-tree-id258 . -21) (undo-tree-id259 . -22) (undo-tree-id260 . -23) (undo-tree-id261 . -23) (undo-tree-id262 . -23) (undo-tree-id263 . -24) (undo-tree-id264 . -24) (undo-tree-id265 . -24) (undo-tree-id266 . -24) (undo-tree-id267 . -24) (undo-tree-id268 . -24) (undo-tree-id269 . -24) (undo-tree-id270 . -24) (undo-tree-id271 . -24) (undo-tree-id272 . -24) (undo-tree-id273 . -25) (undo-tree-id274 . -26) (undo-tree-id275 . -26) (undo-tree-id276 . -26) (undo-tree-id277 . -27) (undo-tree-id278 . -27) (undo-tree-id279 . -27) (undo-tree-id280 . -27)) nil (26052 58267 374418 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 145 . 146) (nil fontified nil 141 . 146) (nil fontified nil 139 . 141) (nil fontified nil 136 . 139) (nil fontified nil 134 . 136) (nil fontified nil 124 . 134) (nil fontified nil 122 . 124) (nil fontified nil 119 . 122) (119 . 146)) nil (26052 58267 373900 495000) 0 nil])
([nil nil ((#("SwapC" 0 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face rear-nonsticky t fontified t)) . -141) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) 146) nil (26052 58267 373898 831000) 0 nil])
([nil nil ((141 . 142)) nil (26052 58267 373894 400000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -141) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 142) nil (26052 58267 373893 423000) 0 nil])
([nil nil ((141 . 142)) nil (26052 58267 373890 251000) 0 nil])
([nil nil ((#("ash::extensions::ext::S" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 15 (face font-lock-constant-face fontified t) 15 17 (fontified t) 17 20 (face font-lock-constant-face fontified t) 20 22 (fontified t) 22 23 (face font-lock-type-face fontified t)) . 119) (undo-tree-id195 . -22) (undo-tree-id196 . -22) (undo-tree-id197 . -22) (undo-tree-id198 . -22) (undo-tree-id199 . -22) (undo-tree-id200 . -22) (undo-tree-id201 . -22) (undo-tree-id202 . -22) (undo-tree-id203 . -22) (undo-tree-id204 . -22) (undo-tree-id205 . -22) (undo-tree-id206 . -22) (undo-tree-id207 . -23) (undo-tree-id208 . -23) (undo-tree-id209 . -23) (undo-tree-id210 . -23)) nil (26052 58267 373886 834000) 0 nil])
([nil nil ((31 . 32) (t 26052 58267 373460 353000)) nil (26052 58330 546160 336000) 0 nil])
([nil nil ((31 . 37)) nil (26052 58330 546159 616000) 0 nil])
([nil nil ((35 . 38) (#("as" 0 2 (fontified nil)) . 35) (35 . 37) (#("ash" 0 3 (fontified nil)) . -35) (35 . 38) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -35) (undo-tree-id1213 . -2) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) 37) nil (26052 58330 546158 354000) 0 nil])
([nil nil ((38 . 41)) nil (26052 58330 546149 947000) 0 nil])
([nil nil ((40 . 50) (#("e" 0 1 (fontified nil)) . 40) (40 . 41) (#("extensions" 0 10 (fontified nil)) . -40) (40 . 50) (#("e" 0 1 (fontified t)) . -40) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) 41) nil (26052 58330 546148 785000) 0 nil])
([nil nil ((50 . 53)) nil (26052 58330 546143 264000) 0 nil])
([nil nil ((52 . 64) (#("e" 0 1 (fontified nil)) . 52) (52 . 53) (#("experimental" 0 12 (fontified nil)) . -52) (52 . 64) (#("e" 0 1 (fontified t)) . -52) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 53) nil (26052 58330 546142 117000) 0 nil])
([nil nil ((#("experimental" 0 12 (fontified t)) . -52) (undo-tree-id1197 . -12) (undo-tree-id1198 . -12) (undo-tree-id1199 . -12) (undo-tree-id1200 . -12) (undo-tree-id1201 . -12) 64) nil (26052 58330 546138 281000) 0 nil])
([nil nil ((52 . 53)) nil (26052 58330 546134 368000) 0 nil])
([nil nil ((52 . 55) (#("e" 0 1 (fontified nil)) . 52) (52 . 53) (#("ext" 0 3 (fontified nil)) . -52) (52 . 55) (#("e" 0 1 (fontified t)) . -52) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) 53) nil (26052 58330 546133 229000) 0 nil])
([nil nil ((55 . 59)) nil (26052 58330 546128 472000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-type-face fontified t)) . -58) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) 59) nil (26052 58330 546127 540000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -57) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 58) nil (26052 58330 546120 716000) 0 nil])
([nil nil ((#("ext::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -52) (undo-tree-id1147 . -5) (undo-tree-id1148 . -3) (undo-tree-id1149 . -3) (undo-tree-id1150 . -4) (undo-tree-id1151 . -5) (undo-tree-id1152 . -5) (undo-tree-id1153 . -5) (undo-tree-id1154 . -5) (undo-tree-id1155 . -5) (undo-tree-id1156 . -5) (undo-tree-id1157 . -5) (undo-tree-id1158 . -5) (undo-tree-id1159 . -5) (undo-tree-id1160 . -5) (undo-tree-id1161 . -5) (undo-tree-id1162 . -5) (undo-tree-id1163 . -5) (undo-tree-id1164 . -5) (undo-tree-id1165 . -5) (undo-tree-id1166 . -5) (undo-tree-id1167 . -5) 57) nil (26052 58330 546098 4000) 0 nil])
([nil nil ((52 . 53)) nil (26052 58330 546084 851000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -52) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) 53) nil (26052 58330 546084 33000) 0 nil])
([nil nil ((52 . 53)) nil (26052 58330 546081 96000) 0 nil])
([nil nil ((52 . 55) (#("e" 0 1 (fontified nil)) . 52) (52 . 53) (#("ext" 0 3 (fontified nil)) . -52) (52 . 55) (#("e" 0 1 (fontified t)) . -52) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) 53) nil (26052 58330 546080 23000) 0 nil])
([nil nil ((55 . 58)) nil (26052 58330 546075 997000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . -57) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) 58) nil (26052 58330 546074 829000) 0 nil])
([nil nil ((57 . 59)) nil (26052 58330 546070 676000) 0 nil])
([nil nil ((#("Sw" 0 2 (face font-lock-type-face fontified t)) . -57) (undo-tree-id1119 . -2) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2) (undo-tree-id1130 . -2) (undo-tree-id1131 . -2) 59) nil (26052 58330 546069 619000) 0 nil])
([nil nil ((#("ext::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -52) (undo-tree-id1080 . -5) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -4) (undo-tree-id1084 . -5) (undo-tree-id1085 . -5) (undo-tree-id1086 . -5) (undo-tree-id1087 . -5) (undo-tree-id1088 . -5) (undo-tree-id1089 . -5) (undo-tree-id1090 . -5) (undo-tree-id1091 . -5) (undo-tree-id1092 . -5) (undo-tree-id1093 . -5) (undo-tree-id1094 . -5) (undo-tree-id1095 . -5) (undo-tree-id1096 . -5) (undo-tree-id1097 . -5) (undo-tree-id1098 . -5) (undo-tree-id1099 . -5) (undo-tree-id1100 . -5) (undo-tree-id1101 . -5) (undo-tree-id1102 . -5) (undo-tree-id1103 . -5) (undo-tree-id1104 . -5) (undo-tree-id1105 . -5) (undo-tree-id1106 . -5) (undo-tree-id1107 . -5) (undo-tree-id1108 . -5) (undo-tree-id1109 . -5) (undo-tree-id1110 . -5) (undo-tree-id1111 . -5) (undo-tree-id1112 . -5) (undo-tree-id1113 . -5) (undo-tree-id1114 . -5) (undo-tree-id1115 . -5) (undo-tree-id1116 . -5) (undo-tree-id1117 . -5) (undo-tree-id1118 . -5) 57) nil (26052 58330 546059 702000) 0 nil])
([nil nil ((52 . 53)) nil (26052 58330 546035 651000) 0 nil])
([nil nil ((52 . 55) (#("h" 0 1 (fontified nil)) . 52) (52 . 53) (#("khr" 0 3 (fontified nil)) . -52) (52 . 55) (#("h" 0 1 (fontified t)) . -52) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) 53) nil (26052 58330 546034 530000) 0 nil])
([nil nil ((55 . 59)) nil (26052 58330 546030 968000) 0 nil])
([nil nil ((57 . 66) (#("Sw" 0 2 (fontified nil)) . 57) (57 . 59) (#("Swapchain" 0 9 (fontified nil)) . -57) (57 . 66) (#("Sw" 0 2 (face font-lock-type-face fontified t)) . -57) (undo-tree-id1069 . -2) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -2) (undo-tree-id1075 . -2) 59) nil (26052 58330 546029 669000) 0 nil])
([nil nil ((66 . 69)) nil (26052 58330 546024 474000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -68) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) 69) nil (26052 58330 546023 241000) 0 nil])
([nil nil ((68 . 70)) nil (26052 58330 546013 827000) 0 nil])
([nil nil ((#("use ash::extensions::khr::Swapchain::na" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 19 (face font-lock-constant-face fontified t) 19 21 (fontified t) 21 24 (face font-lock-constant-face fontified t) 24 26 (fontified t) 26 35 (face font-lock-type-face fontified t) 35 39 (fontified t)) . 31) (undo-tree-id866 . -1) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -3) (undo-tree-id870 . -3) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -7) (undo-tree-id886 . -7) (undo-tree-id887 . -8) (undo-tree-id888 . -9) (undo-tree-id889 . -9) (undo-tree-id890 . -9) (undo-tree-id891 . -9) (undo-tree-id892 . -9) (undo-tree-id893 . -9) (undo-tree-id894 . -9) (undo-tree-id895 . -9) (undo-tree-id896 . -9) (undo-tree-id897 . -9) (undo-tree-id898 . -9) (undo-tree-id899 . -9) (undo-tree-id900 . -9) (undo-tree-id901 . -19) (undo-tree-id902 . -19) (undo-tree-id903 . -20) (undo-tree-id904 . -21) (undo-tree-id905 . -21) (undo-tree-id906 . -21) (undo-tree-id907 . -21) (undo-tree-id908 . -21) (undo-tree-id909 . -21) (undo-tree-id910 . -21) (undo-tree-id911 . -21) (undo-tree-id912 . -21) (undo-tree-id913 . -21) (undo-tree-id914 . -21) (undo-tree-id915 . -21) (undo-tree-id916 . -21) (undo-tree-id917 . -21) (undo-tree-id918 . -21) (undo-tree-id919 . -21) (undo-tree-id920 . -21) (undo-tree-id921 . -21) (undo-tree-id922 . -21) (undo-tree-id923 . -21) (undo-tree-id924 . -21) (undo-tree-id925 . -21) (undo-tree-id926 . -21) (undo-tree-id927 . -21) (undo-tree-id928 . -21) (undo-tree-id929 . -21) (undo-tree-id930 . -21) (undo-tree-id931 . -21) (undo-tree-id932 . -21) (undo-tree-id933 . -21) (undo-tree-id934 . -21) (undo-tree-id935 . -21) (undo-tree-id936 . -21) (undo-tree-id937 . -21) (undo-tree-id938 . -21) (undo-tree-id939 . -21) (undo-tree-id940 . -21) (undo-tree-id941 . -21) (undo-tree-id942 . -21) (undo-tree-id943 . -21) (undo-tree-id944 . -21) (undo-tree-id945 . -21) (undo-tree-id946 . -21) (undo-tree-id947 . -21) (undo-tree-id948 . -21) (undo-tree-id949 . -21) (undo-tree-id950 . -21) (undo-tree-id951 . -21) (undo-tree-id952 . -21) (undo-tree-id953 . -21) (undo-tree-id954 . -21) (undo-tree-id955 . -21) (undo-tree-id956 . -21) (undo-tree-id957 . -21) (undo-tree-id958 . -21) (undo-tree-id959 . -21) (undo-tree-id960 . -21) (undo-tree-id961 . -21) (undo-tree-id962 . -21) (undo-tree-id963 . -21) (undo-tree-id964 . -21) (undo-tree-id965 . -21) (undo-tree-id966 . -21) (undo-tree-id967 . -21) (undo-tree-id968 . -21) (undo-tree-id969 . -21) (undo-tree-id970 . -21) (undo-tree-id971 . -21) (undo-tree-id972 . -21) (undo-tree-id973 . -21) (undo-tree-id974 . -21) (undo-tree-id975 . -21) (undo-tree-id976 . -21) (undo-tree-id977 . -21) (undo-tree-id978 . -21) (undo-tree-id979 . -21) (undo-tree-id980 . -21) (undo-tree-id981 . -21) (undo-tree-id982 . -21) (undo-tree-id983 . -21) (undo-tree-id984 . -21) (undo-tree-id985 . -21) (undo-tree-id986 . -21) (undo-tree-id987 . -21) (undo-tree-id988 . -21) (undo-tree-id989 . -21) (undo-tree-id990 . -21) (undo-tree-id991 . -21) (undo-tree-id992 . -21) (undo-tree-id993 . -21) (undo-tree-id994 . -21) (undo-tree-id995 . -21) (undo-tree-id996 . -21) (undo-tree-id997 . -24) (undo-tree-id998 . -24) (undo-tree-id999 . -24) (undo-tree-id1000 . -24) (undo-tree-id1001 . -24) (undo-tree-id1002 . -24) (undo-tree-id1003 . -24) (undo-tree-id1004 . -24) (undo-tree-id1005 . -25) (undo-tree-id1006 . -26) (undo-tree-id1007 . -26) (undo-tree-id1008 . -26) (undo-tree-id1009 . -26) (undo-tree-id1010 . -26) (undo-tree-id1011 . -26) (undo-tree-id1012 . -26) (undo-tree-id1013 . -26) (undo-tree-id1014 . -26) (undo-tree-id1015 . -26) (undo-tree-id1016 . -35) (undo-tree-id1017 . -35) (undo-tree-id1018 . -36) (undo-tree-id1019 . -37) (undo-tree-id1020 . -37) (undo-tree-id1021 . -37) (undo-tree-id1022 . -37) (undo-tree-id1023 . -37) (undo-tree-id1024 . -37) (undo-tree-id1025 . -37) (undo-tree-id1026 . -37) (undo-tree-id1027 . -37) (undo-tree-id1028 . -37) (undo-tree-id1029 . -37) (undo-tree-id1030 . -37) (undo-tree-id1031 . -37) (undo-tree-id1032 . -37) (undo-tree-id1033 . -37) (undo-tree-id1034 . -37) (undo-tree-id1035 . -37) (undo-tree-id1036 . -37) (undo-tree-id1037 . -37) (undo-tree-id1038 . -37) (undo-tree-id1039 . -37) (undo-tree-id1040 . -37) (undo-tree-id1041 . -37) (undo-tree-id1042 . -38) (undo-tree-id1043 . -39) (undo-tree-id1044 . -39) (undo-tree-id1045 . -39) (undo-tree-id1046 . -39) (undo-tree-id1047 . -39) (undo-tree-id1048 . -39) (undo-tree-id1049 . -39) (undo-tree-id1050 . -39) (undo-tree-id1051 . -39) (undo-tree-id1052 . -39) (undo-tree-id1053 . -39) (undo-tree-id1054 . -39)) nil (26052 58330 546007 245000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -30) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) 31) nil (26052 58330 545535 541000) 0 nil])
([nil nil ((nil rear-nonsticky nil 146 . 147) (nil fontified nil 108 . 147) (108 . 147)) nil (26052 58330 545350 828000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -147) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 148) nil (26052 58330 545343 722000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -89) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) 90 (t 26052 58330 556797 559000)) nil (26052 58356 501494 247000) 0 nil])
([nil nil ((89 . 91)) nil (26052 58356 501489 313000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -90) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) 91) nil (26052 58356 501487 548000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -89) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) 90) nil (26052 58356 501473 454000) 0 nil])
([nil nil ((89 . 99)) nil (26052 58356 501459 192000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -98) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) 99) nil (26052 58356 501457 860000) 0 nil])
([nil nil ((98 . 103)) nil (26052 58356 501453 562000) 0 nil])
([nil nil ((#("str" 0 3 (face font-lock-type-face fontified t)) . -100) (undo-tree-id1245 . -3) (undo-tree-id1246 . -1) (undo-tree-id1247 . -2) (undo-tree-id1248 . -3) (undo-tree-id1249 . -3) (undo-tree-id1250 . -3) 103) nil (26052 58356 501452 28000) 0 nil])
([nil nil ((#("C_" 0 2 (face font-lock-type-face fontified t)) . -98) (undo-tree-id1232 . -2) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) 100) nil (26052 58356 501443 471000) 0 nil])
([nil nil ((98 . 101)) nil (26052 58356 501429 461000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -99) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -100) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) 101) nil (26052 58356 501426 604000) 0 nil])
([nil nil ((99 . 102)) nil (26052 58356 501413 334000) 0 nil])
([nil nil ((31 . 33) (t 26052 58356 513465 820000)) nil (26052 58374 565248 819000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -31) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#("t" 0 1 (fontified t)) . -32) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) 33) nil (26052 58374 565246 687000) 0 nil])
([nil nil ((31 . 35)) nil (26052 58374 565234 979000) 0 nil])
([nil nil ((#("CStr" 0 4 (face font-lock-type-face fontified t)) . 31) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) (undo-tree-id1302 . -2) (undo-tree-id1303 . -2) (undo-tree-id1304 . -2) (undo-tree-id1305 . -2) (undo-tree-id1306 . -2) (undo-tree-id1307 . -3) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4)) nil (26052 58374 565233 677000) 0 nil])
([nil nil ((31 . 36)) nil (26052 58374 565222 706000) 0 nil])
([nil nil ((35 . 38) (#("s" 0 1 (fontified nil)) . 35) (35 . 36) (#("std" 0 3 (fontified nil)) . -35) (35 . 38) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -35) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) 36) nil (26052 58374 565221 261000) 0 nil])
([nil nil ((38 . 42)) nil (26052 59093 572016 91000) 0 nil])
([nil nil ((42 . 43)) nil (26052 59105 623161 226000) 0 nil] [nil nil ((40 . 43) (#("ff" 0 2 (fontified nil)) . 40) (40 . 42) (#("ffi" 0 3 (fontified nil)) . -40) (40 . 43) (#("ff" 0 2 (fontified t)) . -40) (undo-tree-id1281 . -2) (undo-tree-id1283 . -1) (undo-tree-id1285 . -1) (undo-tree-id1287 . -2) (undo-tree-id1289 . -2) (undo-tree-id1291 . -2) 42) ((40 . 42) (#("ffi" 0 3 (fontified nil)) . 40) (40 . 43) (#("ff" 0 2 (fontified nil)) . 40) (40 . 42) (#("ffi" 0 3 (fontified t)) . 40) (undo-tree-id1965 . -3) (undo-tree-id1966 . -3) (undo-tree-id1967 . -3) (undo-tree-id1968 . -3)) (26052 59093 531107 470000) 0 nil])
([nil nil ((43 . 45)) nil (26052 59105 623160 338000) 0 nil])
([nil nil ((43 . 45)) ((#("::" 0 2 (fontified t)) . 43) (undo-tree-id1962 . -2) (undo-tree-id1963 . -2) (undo-tree-id1964 . -2)) (26052 59093 495708 737000) 0 nil])
([nil nil ((45 . 49) (#("CStr" 0 4 (fontified nil)) . -45) (45 . 49)) nil (26052 59105 623158 441000) 0 nil])
([nil nil ((45 . 49) (#("CStr" 0 4 (fontified nil)) . -45) (45 . 49)) ((#("CStr" 0 4 (fontified nil)) . 45) (45 . 49) (#("CStr" 0 4 (face font-lock-type-face fontified t)) . 45) (undo-tree-id1960 . -4) (undo-tree-id1961 . -4)) (26052 59093 450257 188000) 0 nil])
([nil current ((49 . 50)) nil (26052 59105 623153 862000) 0 nil])
([nil nil ((49 . 50)) ((#(";" 0 1 (fontified t)) . 49)) (26052 59093 409723 524000) 0 nil])
nil
([nil nil ((#("v" 0 1 (fontified t)) . -125) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1423 . -1) (undo-tree-id1425 . -1) (undo-tree-id1427 . -1) (#("e" 0 1 (fontified t)) . -126) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1432 . -1) (undo-tree-id1434 . -1) (#("c" 0 1 (fontified t)) . -127) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1439 . -1) (#("!" 0 1 (face font-lock-preprocessor-face fontified t)) . -128) (undo-tree-id1441 . -1) 129 (t 26052 58374 610133 598000)) ((125 . 129)) (26052 59093 369912 499000) 0 nil])
([nil nil ((#("CStr>" 0 4 (face font-lock-type-face fontified t) 4 5 (syntax-table (1) fontified t)) . -117) (undo-tree-id1399 . -5) (undo-tree-id1401 . -5) (undo-tree-id1403 . -5) (undo-tree-id1405 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1411 . -5) (undo-tree-id1413 . -5) (undo-tree-id1415 . -5) (undo-tree-id1417 . -5) (undo-tree-id1419 . -5) 122) ((117 . 122)) (26052 59093 329632 909000) 0 nil])
([nil nil ((#("static " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . -110) (undo-tree-id1365 . -7) (undo-tree-id1366 . -7) (undo-tree-id1368 . -7) (undo-tree-id1370 . -7) (undo-tree-id1372 . -7) (undo-tree-id1374 . -7) (undo-tree-id1376 . -7) (undo-tree-id1377 . -7) (undo-tree-id1378 . -7) (undo-tree-id1380 . -7) (undo-tree-id1382 . -7) (undo-tree-id1384 . -7) (undo-tree-id1386 . -7) (undo-tree-id1388 . -7) (undo-tree-id1390 . -7) (undo-tree-id1392 . -7) (undo-tree-id1394 . -7) (undo-tree-id1396 . -7) (undo-tree-id1398 . -7) 117) ((110 . 117)) (26052 59093 289650 443000) 0 nil])
([nil nil ((#("Vec<&'" 0 3 (face font-lock-type-face fontified t) 3 4 (syntax-table (1) fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -104) (undo-tree-id1328 . -4) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1332 . -6) (undo-tree-id1334 . -6) (undo-tree-id1336 . -6) (undo-tree-id1338 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1345 . -6) (undo-tree-id1347 . -6) (undo-tree-id1349 . -6) (undo-tree-id1351 . -6) (undo-tree-id1353 . -6) (undo-tree-id1355 . -6) (undo-tree-id1357 . -6) (undo-tree-id1359 . -6) (undo-tree-id1361 . -6) (undo-tree-id1363 . -6) 110) ((104 . 110)) (26052 59093 250064 873000) 0 nil])
([nil nil ((104 . 106)) ((#("[]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . 104) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . 1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1)) (26052 59093 210271 597000) 0 nil])
([nil nil ((158 . 167)) ((#(".as_ptr()" 0 1 (fontified t) 1 4 (fontified t) 4 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t)) . 158) (undo-tree-id1875 . -9) (undo-tree-id1876 . -9) (undo-tree-id1877 . -1) (undo-tree-id1878 . -4) (undo-tree-id1879 . -9) (undo-tree-id1880 . -9)) (26052 59093 169391 460000) 0 nil])
([nil nil ((105 . 110) (t 26052 58994 930171 647000)) ((#("const" 0 5 (face font-lock-keyword-face fontified t)) . 105) (undo-tree-id1860 . -5) (undo-tree-id1861 . -5) (undo-tree-id1862 . -5) (undo-tree-id1863 . -5) (undo-tree-id1864 . -5) (undo-tree-id1865 . -5) (undo-tree-id1866 . -5) (undo-tree-id1867 . -5) (undo-tree-id1868 . -5) (undo-tree-id1869 . -5) (undo-tree-id1870 . -5) (undo-tree-id1871 . -5) (undo-tree-id1872 . -5) (undo-tree-id1873 . -5) (undo-tree-id1874 . -5)) (26052 59093 129927 190000) 0 nil])
([nil nil ((105 . 106)) ((#("*" 0 1 (fontified t)) . 105) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1)) (26052 59093 89771 293000) 0 nil])
([nil nil ((111 . 114)) ((#(" c_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 111) (undo-tree-id1843 . -3) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -3)) (26052 59093 54239 153000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -112) (undo-tree-id1483 . -1) (undo-tree-id1485 . -1) (undo-tree-id1487 . -1) (undo-tree-id1489 . -1) (undo-tree-id1491 . -1) (undo-tree-id1493 . -1) (undo-tree-id1495 . -1) (undo-tree-id1497 . -1) (#("_" 0 1 (fontified t)) . -113) (undo-tree-id1498 . -1) (undo-tree-id1500 . -1) (undo-tree-id1502 . -1) 114) ((112 . 114)) (26052 59093 13116 766000) 0 nil])
([nil nil ((112 . 117)) ((#("c_cha" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 112) (undo-tree-id1837 . -5) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -5) (undo-tree-id1841 . -5) (undo-tree-id1842 . -5)) (26052 59092 353262 8000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -115) (undo-tree-id1472 . -1) (undo-tree-id1474 . -1) (undo-tree-id1476 . -1) (undo-tree-id1478 . -1) (#("a" 0 1 (fontified t)) . -116) (undo-tree-id1480 . -1) (undo-tree-id1482 . -1) 117) ((115 . 117)) (26052 59092 116986 835000) 0 nil])
([nil nil ((115 . 116)) ((#("h" 0 1 (fontified t)) . 115) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1)) (26052 59091 964360 920000) 0 nil])
([nil nil ((#("::ffi" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t)) . -38) 43 (45 . 51) (49 . 58) (112 . 112) (112 . 118) (#("c_ch" 0 4 (fontified nil)) . 112) (112 . 116) (#("c_char (use std::ffi::c_char)" 0 29 (fontified nil)) . -112) (112 . 141) (#("c_ch" 0 4 (fontified t)) . -112) (undo-tree-id1444 . -4) (undo-tree-id1446 . -1) (undo-tree-id1448 . -1) (undo-tree-id1450 . -2) (undo-tree-id1452 . -3) (undo-tree-id1454 . -3) (undo-tree-id1456 . -3) (undo-tree-id1458 . -3) (undo-tree-id1460 . -3) (undo-tree-id1462 . -3) (undo-tree-id1464 . -3) (undo-tree-id1466 . -3) (undo-tree-id1468 . -4) (undo-tree-id1470 . -4) 116) ((112 . 116) (#("c_char (use std::ffi::c_char)" 0 29 (fontified nil)) . 112) (112 . 141) (#("c_ch" 0 4 (fontified nil)) . 112) (112 . 116) (#("c_char" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t)) . 112) (undo-tree-id1832 . -6) (undo-tree-id1833 . -2) (undo-tree-id1834 . -6) (#(", c_char}" 0 8 (fontified nil) 8 9 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 49) (#("ffi::{" 0 3 (face font-lock-constant-face fontified nil) 3 5 (fontified nil) 5 6 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 45) (38 . 43)) (26052 59091 779620 178000) 0 nil])
([nil nil ((128 . 131) (t 26052 59019 623506 496000)) ((#("; 1" 0 3 (fontified t)) . 128) (undo-tree-id1831 . 3)) (26052 59091 604467 4000) 0 nil])
([nil nil ((#("char" 0 4 (fontified t)) . -124) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1563 . -4) (undo-tree-id1565 . -4) (undo-tree-id1567 . -4) (undo-tree-id1569 . -4) (undo-tree-id1571 . -4) (undo-tree-id1573 . -4) (undo-tree-id1575 . -4) 128 (t 26052 59029 676840 446000)) ((124 . 128)) (26052 59091 425677 974000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -122) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1520 . -1) (undo-tree-id1522 . -1) (undo-tree-id1524 . -1) (undo-tree-id1526 . -1) (undo-tree-id1528 . -1) (undo-tree-id1530 . -1) (undo-tree-id1532 . -1) (undo-tree-id1534 . -1) (undo-tree-id1536 . -1) (undo-tree-id1538 . -1) (#("_" 0 1 (fontified t)) . -123) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1542 . -1) (undo-tree-id1544 . -1) (undo-tree-id1546 . -1) (undo-tree-id1548 . -1) (undo-tree-id1550 . -1) (undo-tree-id1552 . -1) (undo-tree-id1554 . -1) (undo-tree-id1556 . -1) (undo-tree-id1558 . -1) 124) ((122 . 124)) (26052 59091 253135 400000) 0 nil])
([nil nil ((122 . 124)) ((#("CS" 0 2 (face font-lock-type-face fontified t)) . 122) (undo-tree-id1829 . -2) (undo-tree-id1830 . -2)) (26052 59091 80436 369000) 0 nil])
([nil nil ((122 . 126) (#("CS" 0 2 (fontified nil)) . 122) (122 . 124) (#("CStr" 0 4 (fontified nil)) . -122) (122 . 126) (#("CS" 0 2 (face font-lock-type-face fontified t)) . -122) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1507 . -1) (undo-tree-id1509 . -2) (undo-tree-id1511 . -2) (undo-tree-id1513 . -2) (undo-tree-id1515 . -2) 124) ((122 . 124) (#("CStr" 0 4 (fontified nil)) . 122) (122 . 126) (#("CS" 0 2 (fontified nil)) . 122) (122 . 124) (#("CStr" 0 4 (face font-lock-type-face fontified t)) . 122) (undo-tree-id1828 . 4)) (26052 59090 927702 561000) 0 nil])
([nil nil ((191 . 192) (t 26052 59040 790174 461000)) ((#("," 0 1 (fontified t)) . 191) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1)) (26052 59090 760287 612000) 0 nil])
([nil nil ((#("ptr()," 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 6 (fontified t)) . -186) (undo-tree-id1621 . -5) (undo-tree-id1622 . -6) (undo-tree-id1623 . -5) (undo-tree-id1625 . -5) (undo-tree-id1626 . -5) (undo-tree-id1628 . -5) (undo-tree-id1630 . -5) (undo-tree-id1632 . -5) (undo-tree-id1634 . -5) (undo-tree-id1636 . -6) (undo-tree-id1638 . -6) (undo-tree-id1640 . -6) 192) ((186 . 192)) (26052 59090 592705 195000) 0 nil])
([nil nil ((#("as_" 0 3 (fontified t)) . -183) (undo-tree-id1600 . -3) (undo-tree-id1601 . -3) (undo-tree-id1602 . -3) (undo-tree-id1604 . -3) (undo-tree-id1605 . -3) (undo-tree-id1607 . -3) (undo-tree-id1609 . -3) (undo-tree-id1611 . -3) (undo-tree-id1613 . -3) (undo-tree-id1615 . -3) (undo-tree-id1617 . -3) (undo-tree-id1619 . -3) 186) ((183 . 186)) (26052 59090 404182 641000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -182) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1583 . -1) (undo-tree-id1585 . -1) (undo-tree-id1587 . -1) (undo-tree-id1589 . -1) (undo-tree-id1591 . -1) (undo-tree-id1593 . -1) (undo-tree-id1595 . -1) (undo-tree-id1597 . -1) (undo-tree-id1599 . -1) 183) ((182 . 183)) (26052 59089 984677 843000) 0 nil])
([nil nil ((182 . 183) (t 26052 59052 110175 155000)) ((#("." 0 1 (fontified t)) . 182) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1)) (26052 59089 728783 209000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -182) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) 183) ((182 . 183)) (26052 59089 520963 775000) 0 nil])
([nil nil ((#("const " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -116) (undo-tree-id1701 . -6) (undo-tree-id1702 . -6) 122) ((116 . 122)) (26052 59089 340673 756000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -115) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) 116) ((115 . 116)) (26052 59089 169371 54000) 0 nil])
([nil nil ((115 . 116)) ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 115) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1)) (26052 59089 6081 999000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -115) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) 116) ((115 . 116)) (26052 59088 859521 726000) 0 nil])
([nil nil ((115 . 117)) ((#("'c" 0 1 (fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . 115) (undo-tree-id1783 . -2) (undo-tree-id1784 . -2) (undo-tree-id1785 . -1) (undo-tree-id1786 . -2) (undo-tree-id1787 . -2) (undo-tree-id1788 . -2) (undo-tree-id1789 . -2) (undo-tree-id1790 . -2) (undo-tree-id1791 . -2) (undo-tree-id1792 . -2) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -2)) (26052 59088 698817 901000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -116) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) 117) ((116 . 117)) (26052 59088 545613 661000) 0 nil])
([nil nil ((116 . 117)) ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . 116) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1)) (26052 59088 389300 87000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -116) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) 117) ((116 . 117)) (26052 59088 220782 248000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -115) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) 116) ((115 . 116)) (26052 59088 59172 49000) 0 nil])
([nil nil ((115 . 117)) ((#("& " 0 1 (fontified t) 1 2 (fontified t)) . 115) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . 1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1)) (26052 59087 906094 72000) 0 nil])
([nil nil ((116 . 119)) ((#("''s" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face font-lock-variable-name-face fontified t)) . 116) (undo-tree-id1725 . -2) (undo-tree-id1726 . -3) (undo-tree-id1727 . -2) (undo-tree-id1728 . -3) (undo-tree-id1729 . -2) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -3)) (26052 59087 723937 457000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -117) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -118) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) 119) ((117 . 119)) (26052 59087 500432 322000) 0 nil])
([nil nil ((117 . 123)) ((#("static" 0 6 (face font-lock-keyword-face fontified t)) . 117) (undo-tree-id1708 . -6) (undo-tree-id1709 . -6) (undo-tree-id1710 . -6) (undo-tree-id1711 . -6) (undo-tree-id1712 . -6) (undo-tree-id1713 . -6) (undo-tree-id1714 . -6) (undo-tree-id1715 . -6) (undo-tree-id1716 . -6) (undo-tree-id1717 . -6) (undo-tree-id1718 . -6) (undo-tree-id1719 . -6) (undo-tree-id1720 . -6) (undo-tree-id1721 . -6) (undo-tree-id1722 . -6) (undo-tree-id1723 . -6) (undo-tree-id1724 . -6) (t 26052 59082 580177 25000)) (26052 59082 566766 473000) 0 nil])
nil
