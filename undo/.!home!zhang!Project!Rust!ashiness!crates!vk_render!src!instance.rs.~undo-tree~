(undo-tree-save-format-version . 1)
"7a82ac82b1ae3a21cb3d31ae4dfadef854552158"
[nil nil nil nil (26051 34735 910522 531000) 0 nil]
([nil nil ((1 . 3) (t 26051 34685 318519 909000)) nil (26051 34735 910521 622000) 0 nil])
([nil nil ((apply yas--snippet-revive 1 8 #s(yas--snippet nil nil #s(yas--exit 8 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 8 nil) 0 nil nil nil nil)) (1 . 8) (#("struct $0" 0 9 (fontified nil)) . 1) (1 . 10) (#("st" 0 2 (fontified nil)) . 1) (1 . 3) (#("struct" 0 6 (fontified nil)) . -1) (1 . 7) (#("st" 0 2 (fontified t)) . -1) (undo-tree-id25 . -2) (undo-tree-id26 . -1) (undo-tree-id27 . -2) (undo-tree-id28 . -2) 3) nil (26051 34735 910520 134000) 0 nil])
([nil nil ((8 . 17)) nil (26051 34735 910515 751000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("c" 0 1 (fontified t)) . -15) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("e" 0 1 (fontified t)) . -16) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 17) nil (26051 34735 910514 218000) 0 nil])
([nil nil ((14 . 19)) nil (26051 34735 910504 181000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 19) (19 . 23) (18 . 20)) nil (26051 34735 910503 333000) 0 nil])
([nil nil ((1 . 5)) nil (26051 34735 910502 182000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -3) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("b" 0 1 (fontified t)) . -4) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 5) nil (26051 34735 910499 851000) 0 nil])
([nil nil ((3 . 5)) nil (26051 34735 910477 820000) 0 nil])
([nil nil ((25 . 26) 23) nil (26051 34735 910473 772000) 0 nil])
([nil nil ((23 . 27) (t 26051 34735 955189 686000)) nil (26051 34781 898536 685000) 0 nil])
([nil nil ((1 . 3)) nil (26051 34781 898535 891000) 0 nil])
([nil nil ((1 . 9)) nil (26051 34781 898534 991000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("u" 0 1 (face font-lock-constant-face fontified t)) . -6) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -7) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -8) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 9) nil (26051 34781 898532 169000) 0 nil])
([nil nil ((5 . 7)) nil (26051 34781 898496 791000) 0 nil])
([nil nil ((5 . 8) (#("as" 0 2 (fontified nil)) . 5) (5 . 7) (#("ash" 0 3 (fontified nil)) . -5) (5 . 8) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -5) (undo-tree-id45 . -2) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) 7) nil (26051 34781 898495 393000) 0 nil])
([nil nil ((8 . 11)) nil (26051 34781 898487 236000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 11) nil (26051 34781 898486 383000) 0 nil])
([nil nil ((10 . 12)) nil (26051 34781 898483 206000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -10) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("k" 0 1 (fontified t)) . -11) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 12) nil (26051 34781 898481 894000) 0 nil])
([nil nil ((10 . 12)) nil (26051 34781 898475 489000) 0 nil])
([nil nil ((10 . 17) (#("pr" 0 2 (fontified nil)) . 10) (10 . 12) (#("prelude" 0 7 (fontified nil)) . -10) (10 . 17) (#("pr" 0 2 (fontified t)) . -10) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) 12) nil (26051 34781 898473 59000) 0 nil])
([nil nil ((17 . 21)) nil (26051 34781 898459 333000) 0 nil])
([nil nil ((49 . 50) (t 26051 34781 911859 170000)) nil (26051 34820 999922 512000) 0 nil])
([nil nil ((50 . 51)) nil (26051 34820 999921 804000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -50) (undo-tree-id143 . -1) 51) nil (26051 34820 999921 56000) 0 nil])
([nil nil ((50 . 52)) nil (26051 34820 999919 582000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -49) (undo-tree-id140 . -1) (#("l" 0 1 (fontified t)) . -50) (undo-tree-id141 . -1) (#(";" 0 1 (fontified t)) . -51) (undo-tree-id142 . -1) 52) nil (26051 34820 999918 554000) 0 nil])
([nil nil ((49 . 51)) nil (26051 34820 999915 817000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -49) (undo-tree-id138 . -1) (#("k" 0 1 (fontified t)) . -50) (undo-tree-id139 . -1) 51) nil (26051 34820 999914 938000) 0 nil])
([nil nil ((49 . 53)) nil (26051 34820 999912 602000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -52) (undo-tree-id137 . -1) 53) nil (26051 34820 999911 859000) 0 nil])
([nil nil ((52 . 57)) nil (26051 34820 999910 440000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -56) (undo-tree-id136 . -1) 57) nil (26051 34820 999909 737000) 0 nil])
([nil nil ((56 . 62)) nil (26051 34820 999908 474000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -56) (undo-tree-id130 . -1) (#("k" 0 1 (fontified t)) . -57) (undo-tree-id131 . -1) (#(":" 0 1 (fontified t)) . -58) (undo-tree-id132 . -1) (#(":" 0 1 (fontified t)) . -59) (undo-tree-id133 . -1) (#("i" 0 1 (fontified t)) . -60) (undo-tree-id134 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -61) (undo-tree-id135 . -1) 62) nil (26051 34820 999907 64000) 0 nil])
([nil nil ((56 . 58)) nil (26051 34820 999902 236000) 0 nil])
([nil nil ((#("::prelude" 0 2 (fontified t) 2 9 (face font-lock-constant-face fontified t)) . -8) 17 (19 . 29) (20 . 25) (56 . 56) (56 . 58) (#("vk" 0 2 (fontified nil)) . 56) (56 . 58) (#("vk (use ash::vk)" 0 16 (fontified nil)) . -56) (56 . 72) (#("vk" 0 2 (fontified t)) . -56) (undo-tree-id129 . -2) 58) nil (26051 34820 999900 810000) 0 nil])
([nil nil ((#("use ash::{prelude::*, vk};" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-1-face) fontified t) 10 17 (face font-lock-constant-face fontified t) 17 19 (fontified t) 19 20 (fontified t) 20 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 26 (fontified t)) . 1)) nil (26051 34820 999898 64000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1)) nil (26051 34820 999897 167000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id125 . -1) 2) nil (26051 34820 999894 545000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -34) (undo-tree-id123 . -1) (#("k" 0 1 (fontified t)) . -35) (undo-tree-id124 . -1) 36) nil (26051 34820 999892 976000) 0 nil])
([nil nil ((34 . 36)) nil (26051 34820 999890 859000) 0 nil])
([nil nil ((34 . 37) (#("as" 0 2 (fontified nil)) . 34) (34 . 36) (#("ash" 0 3 (fontified nil)) . -34) (34 . 37) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -34) (undo-tree-id122 . -2) 36) nil (26051 34820 999889 800000) 0 nil])
([nil nil ((37 . 40)) nil (26051 34820 999887 997000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -39) (undo-tree-id121 . -1) 40) nil (26051 34820 999887 289000) 0 nil])
([nil nil ((39 . 40)) nil (26051 34820 999885 869000) 0 nil])
([nil nil ((39 . 41) (#("v" 0 1 (fontified nil)) . 39) (39 . 40) (#("vk" 0 2 (fontified nil)) . -39) (39 . 41) (#("v" 0 1 (fontified t)) . -39) (undo-tree-id120 . -1) 40) nil (26051 34820 999884 643000) 0 nil])
([nil nil ((41 . 46)) nil (26051 34820 999882 666000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -45) (undo-tree-id119 . -1) 46) nil (26051 34820 999881 930000) 0 nil])
([nil nil ((45 . 48)) nil (26051 34820 999880 316000) 0 nil])
([nil nil ((#("Entry" 0 5 (face font-lock-type-face fontified t)) . -43) (undo-tree-id118 . -5) 48) nil (26051 34820 999879 627000) 0 nil])
([nil nil ((#("vk::" 0 2 (face font-lock-constant-face fontified t) 2 4 (fontified t)) . -39) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) 43) nil (26051 34820 999877 890000) 0 nil])
([nil nil ((39 . 40)) nil (26051 34820 999874 768000) 0 nil])
([nil nil ((39 . 44) (#("E" 0 1 (fontified nil)) . 39) (39 . 40) (#("Entry" 0 5 (fontified nil)) . -39) (39 . 44) (#("E" 0 1 (face font-lock-type-face fontified t)) . -39) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 40) nil (26051 34820 999872 262000) 0 nil])
([nil nil ((44 . 45)) nil (26051 34820 999856 881000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -44) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 45 (t 26051 34820 998528 238000)) nil (26051 34832 640185 201000) 0 nil])
([nil nil ((44 . 45)) nil (26051 34832 640176 859000) 0 nil])
([nil nil ((45 . 50)) nil (26051 34832 640176 241000) 0 nil])
([nil nil ((50 . 51)) nil (26051 34832 640175 575000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -50) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 51) nil (26051 34832 640174 602000) 0 nil])
([nil nil ((50 . 60)) nil (26051 34832 640168 888000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -59) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 60) nil (26051 34832 640167 937000) 0 nil])
([nil nil ((59 . 60)) nil (26051 34832 640164 278000) 0 nil])
([nil nil ((60 . 61)) nil (26051 34832 640163 753000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -60) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 61) nil (26051 34832 640162 853000) 0 nil])
([nil nil ((60 . 62)) nil (26051 34832 640159 492000) 0 nil])
([nil nil ((60 . 63) (#("as" 0 2 (fontified nil)) . 60) (60 . 62) (#("ash" 0 3 (fontified nil)) . -60) (60 . 63) (#("as" 0 2 (face font-lock-keyword-face fontified t)) . -60) (undo-tree-id148 . -2) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) 62) nil (26051 34832 640158 179000) 0 nil])
([nil nil ((63 . 67)) nil (26051 34832 640151 508000) 0 nil])
([nil nil ((65 . 73) (#("In" 0 2 (fontified nil)) . 65) (65 . 67) (#("Instance" 0 8 (fontified nil)) . -65) (65 . 73) (#("In" 0 2 (face font-lock-type-face fontified t)) . -65) (undo-tree-id144 . -2) (undo-tree-id145 . -1) (undo-tree-id146 . -2) (undo-tree-id147 . -2) 67) nil (26051 34832 640149 43000) 0 nil])
([nil nil ((73 . 74)) nil (26051 34832 640135 789000) 0 nil])
([nil nil ((76 . 78) (t 26051 34832 651862 288000)) nil (26051 34881 477521 284000) 0 nil])
([nil nil ((78 . 79)) nil (26051 34881 477520 497000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -78) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 79) nil (26051 34881 477519 535000) 0 nil])
([nil nil ((78 . 80)) nil (26051 34881 477515 521000) 0 nil])
([nil nil ((78 . 83) (#("im" 0 2 (fontified nil)) . 78) (78 . 80) (#("image" 0 5 (fontified nil)) . -78) (78 . 83) (#("im" 0 2 (fontified t)) . -78) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) 80) nil (26051 34881 477514 35000) 0 nil])
([nil nil ((#("image" 0 5 (fontified t)) . -78) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) 83) nil (26051 34881 477132 59000) 0 nil])
([nil nil ((78 . 82)) nil (26051 34881 477123 300000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -81) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 82) nil (26051 34881 477122 366000) 0 nil])
([nil nil ((81 . 85)) nil (26051 34881 477117 94000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -83) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -84) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 85) nil (26051 34881 477115 782000) 0 nil])
([nil nil ((83 . 84)) nil (26051 34881 477107 931000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -83) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 84) nil (26051 34881 477107 81000) 0 nil])
([nil nil ((83 . 84)) nil (26051 34881 477103 428000) 0 nil])
([nil nil ((83 . 91) (#("I" 0 1 (fontified nil)) . 83) (83 . 84) (#("Instance" 0 8 (fontified nil)) . -83) (83 . 91) (#("I" 0 1 (face font-lock-type-face fontified t)) . -83) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 84) nil (26051 34881 477102 173000) 0 nil])
([nil nil ((91 . 94)) nil (26051 34881 477096 800000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 94) (94 . 98) (93 . 95)) nil (26051 34881 477096 80000) 0 nil])
([nil nil ((94 . 98)) nil (26051 34881 477095 154000) 0 nil])
([nil nil ((98 . 110)) nil (26051 34881 477094 496000) 0 nil])
([nil nil ((110 . 116)) nil (26051 34881 477093 899000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -114) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -115) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 116) nil (26051 34881 477092 120000) 0 nil])
([nil nil ((114 . 115)) nil (26051 34881 476764 453000) 0 nil])
([nil nil ((114 . 122) (#("I" 0 1 (fontified nil)) . 114) (114 . 115) (#("Instance" 0 8 (fontified nil)) . -114) (114 . 122) (#("I" 0 1 (face font-lock-type-face fontified t)) . -114) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 115) nil (26051 34881 476763 122000) 0 nil])
([nil nil ((122 . 125)) nil (26051 34881 476757 896000) 0 nil])
([nil nil ((126 . 130) (#("        " 0 8 (fontified nil)) . 125) (125 . 133) (#("    " 0 4 (fontified nil)) . 125) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (124 . 130)) nil (26051 34881 476756 717000) 0 nil])
([nil nil ((125 . 133)) nil (26051 34881 476753 86000) 0 nil])
([nil nil ((1 . 3)) nil (26051 34881 476752 492000) 0 nil])
([nil nil ((1 . 8)) nil (26051 34881 476751 874000) 0 nil])
([nil nil ((5 . 11) (#("any" 0 3 (fontified nil)) . 5) (5 . 8) (#("anyhow" 0 6 (fontified nil)) . -5) (5 . 11) (#("any" 0 3 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id206 . -3) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -3) (undo-tree-id213 . -3) 8) nil (26051 34881 476750 381000) 0 nil])
([nil nil ((11 . 14)) nil (26051 34881 476743 529000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-constant-face fontified t)) . -11) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("L" 0 1 (face font-lock-constant-face fontified t)) . -12) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#(":" 0 1 (fontified t)) . -13) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 14) nil (26051 34881 476741 639000) 0 nil])
([nil nil ((11 . 14)) nil (26051 34881 476727 436000) 0 nil])
([nil nil ((13 . 18) (#("E" 0 1 (fontified nil)) . 13) (13 . 14) (#("Error" 0 5 (fontified nil)) . -13) (13 . 18) (#("E" 0 1 (face font-lock-type-face fontified t)) . -13) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 14) nil (26051 34881 476724 935000) 0 nil])
([nil nil ((18 . 19)) nil (26051 34881 476713 818000) 0 nil])
([nil nil ((#("Instance" 0 8 (face font-lock-type-face fontified t)) . -134) (undo-tree-id394 . -8) (undo-tree-id395 . -8) 142 (t 26051 34881 488531 952000)) nil (26051 34930 410400 702000) 0 nil])
([nil nil ((134 . 135)) nil (26051 34930 410398 592000) 0 nil])
([nil nil ((apply yas--snippet-revive 134 142 #s(yas--snippet nil nil #s(yas--exit 141 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 141 nil) 1 nil nil nil nil)) (134 . 142) (#("Result<$0>" 0 10 (fontified nil)) . 134) (134 . 144) (#("R" 0 1 (fontified nil)) . 134) (134 . 135) (#("Result<…>" 0 9 (fontified nil)) . -134) (134 . 143) (#("R" 0 1 (face font-lock-type-face fontified t)) . -134) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 135) nil (26051 34930 410397 183000) 0 nil])
([nil nil ((141 . 142)) nil (26051 34930 410391 367000) 0 nil])
([nil nil ((142 . 143)) nil (26051 34930 410390 815000) 0 nil])
([nil nil ((141 . 149) (#("In" 0 2 (fontified nil)) . 141) (141 . 143) (#("Instance" 0 8 (fontified nil)) . -141) (141 . 149) (#("In" 0 2 (face font-lock-type-face fontified t)) . -141) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) 143) nil (26051 34930 410389 528000) 0 nil])
([nil nil ((149 . 150)) nil (26051 34930 410382 157000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -149) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) 150) nil (26051 34930 410381 238000) 0 nil])
([nil nil ((149 . 152)) nil (26051 34930 410375 952000) 0 nil])
([nil nil ((151 . 156) (#("E" 0 1 (fontified nil)) . 151) (151 . 152) (#("Error" 0 5 (fontified nil)) . -151) (151 . 156) (#("E" 0 1 (face font-lock-type-face fontified t)) . -151) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 152) nil (26051 34930 410374 522000) 0 nil])
([nil nil ((168 . 173)) nil (26051 34930 410367 23000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -169) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#("e" 0 1 (fontified t)) . -170) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("t" 0 1 (fontified t)) . -171) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("e" 0 1 (fontified t)) . -172) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 173) nil (26051 34930 410364 563000) 0 nil])
([nil nil ((169 . 175)) nil (26051 34930 410061 512000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -174) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 175) nil (26051 34930 410060 491000) 0 nil])
([nil nil ((174 . 180)) nil (26051 34930 410054 985000) 0 nil])
([nil nil ((180 . 183)) nil (26051 34930 410054 363000) 0 nil])
([nil nil ((apply yas--snippet-revive 180 212 #s(yas--snippet nil nil #s(yas--exit 201 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 201 nil) 2 nil nil nil nil)) (180 . 212) (#("unsafe {
            $0
        };" 0 34 (fontified nil)) . 180) (204 . 212) (189 . 201) (#("    " 0 4 (fontified nil)) . 189) (180 . 198) (#("uns" 0 3 (fontified nil)) . 180) (180 . 183) (#("unsafe" 0 6 (fontified nil)) . -180) (180 . 186) (#("uns" 0 3 (fontified t)) . -180) (undo-tree-id309 . -3) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) 183) nil (26051 34930 410052 422000) 0 nil])
([nil nil ((201 . 207)) nil (26051 34930 410042 992000) 0 nil])
([nil nil ((206 . 211) (#("E" 0 1 (fontified nil)) . 206) (206 . 207) (#("Entry" 0 5 (fontified nil)) . -206) (206 . 211) (#("E" 0 1 (face font-lock-type-face fontified t)) . -206) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 207) nil (26051 34930 410041 590000) 0 nil])
([nil nil ((211 . 214)) nil (26051 34930 410037 162000) 0 nil])
([nil nil ((apply yas--snippet-revive 213 219 #s(yas--snippet nil nil #s(yas--exit 219 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 219 nil) 3 nil nil nil nil)) (213 . 219) (#("load()$0" 0 8 (fontified nil)) . 213) (213 . 221) (#("l" 0 1 (fontified nil)) . 213) (213 . 214) (#("load()" 0 6 (fontified nil)) . -213) (213 . 219) (#("l" 0 1 (fontified t)) . -213) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 214) nil (26051 34930 410035 481000) 0 nil])
([nil nil ((219 . 222)) nil (26051 34930 410029 470000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -221) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) 222) nil (26051 34930 410025 462000) 0 nil])
([nil nil ((232 . 241) (t 26051 34930 485201 626000)) nil (26051 34984 222742 260000) 0 nil])
([nil nil ((241 . 244)) nil (26051 34984 222741 257000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -241) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("e" 0 1 (fontified t)) . -242) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("t" 0 1 (fontified t)) . -243) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) 244) nil (26051 34984 222739 113000) 0 nil])
([nil nil ((241 . 256)) nil (26051 34984 221934 554000) 0 nil])
([nil nil ((264 . 268) (#("    " 0 4 (fontified nil)) . 263) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (262 . 268)) nil (26051 34984 221933 665000) 0 nil])
([nil nil ((268 . 273)) nil (26051 34984 221930 301000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -272) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 273) nil (26051 34984 221929 287000) 0 nil])
([nil nil ((272 . 288)) nil (26051 34984 221925 963000) 0 nil])
([nil nil ((#("fn create_instance()" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 18 (face font-lock-function-name-face fontified t) 18 19 (face (rainbow-delimiters-depth-2-face) fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t)) . 268) (undo-tree-id396 . -20) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -7) (undo-tree-id415 . -7) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -9) (undo-tree-id419 . -9) (undo-tree-id420 . -10) (undo-tree-id421 . -10) (undo-tree-id422 . -11) (undo-tree-id423 . -11) (undo-tree-id424 . -12) (undo-tree-id425 . -12) (undo-tree-id426 . -13) (undo-tree-id427 . -13) (undo-tree-id428 . -14) (undo-tree-id429 . -14) (undo-tree-id430 . -15) (undo-tree-id431 . -15) (undo-tree-id432 . -16) (undo-tree-id433 . -16) (undo-tree-id434 . -17) (undo-tree-id435 . -17) (undo-tree-id436 . -18) (undo-tree-id437 . -18) (undo-tree-id438 . -18) (undo-tree-id439 . -18) (undo-tree-id440 . -18) (undo-tree-id441 . -19) (undo-tree-id442 . -19) (undo-tree-id443 . -19) (undo-tree-id444 . -19) (undo-tree-id445 . -19) (undo-tree-id446 . -20) (undo-tree-id447 . -20) (undo-tree-id448 . -20) (undo-tree-id449 . -20) (undo-tree-id450 . -20) (undo-tree-id451 . -19) (undo-tree-id452 . -19) (undo-tree-id453 . -19) (undo-tree-id454 . -19) (undo-tree-id455 . -19) (undo-tree-id456 . -19) (undo-tree-id457 . -19) (undo-tree-id458 . -19) (undo-tree-id459 . -19) (undo-tree-id460 . -19) (undo-tree-id461 . -19) (undo-tree-id462 . -19) (undo-tree-id463 . -19) (undo-tree-id464 . -19) (undo-tree-id465 . -19) (undo-tree-id466 . -19) (undo-tree-id467 . -19) (undo-tree-id468 . -19) (undo-tree-id469 . -19) (undo-tree-id470 . -19) (undo-tree-id471 . -19) (undo-tree-id472 . -19) (undo-tree-id473 . -19) (undo-tree-id474 . -19) (undo-tree-id475 . -19) (undo-tree-id476 . -19) (undo-tree-id477 . -19) (undo-tree-id478 . -20) (undo-tree-id479 . -20) (undo-tree-id480 . -20) (undo-tree-id481 . -20) (undo-tree-id482 . -20) (undo-tree-id483 . -19) (undo-tree-id484 . -17) (undo-tree-id485 . -15) (undo-tree-id486 . -13) (undo-tree-id487 . -11) (undo-tree-id488 . -10) (undo-tree-id489 . -8) (undo-tree-id490 . -6) (undo-tree-id491 . -5) (undo-tree-id492 . -4) (undo-tree-id493 . -3) (undo-tree-id494 . -2) (undo-tree-id495 . -1) (undo-tree-id496 . -20) (undo-tree-id497 . -20)) nil (26051 34984 221921 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2979 . 2980) (nil fontified nil 2979 . 2980) (nil fontified nil 2955 . 2979) (nil fontified nil 2954 . 2955) (nil fontified nil 2945 . 2954) (nil fontified nil 2944 . 2945) (nil fontified nil 2916 . 2944) (nil fontified nil 2915 . 2916) (nil fontified nil 2891 . 2915) (nil fontified nil 2890 . 2891) (nil fontified nil 2886 . 2890) (nil fontified nil 2873 . 2886) (nil fontified nil 2872 . 2873) (nil fontified nil 2871 . 2872) (nil fontified nil 2821 . 2871) (nil fontified nil 2820 . 2821) (nil fontified nil 2819 . 2820) (nil fontified nil 2818 . 2819) (nil fontified nil 2812 . 2818) (nil fontified nil 2809 . 2812) (nil fontified nil 2801 . 2809) (nil fontified nil 2799 . 2801) (nil fontified nil 2796 . 2799) (nil fontified nil 2794 . 2796) (nil fontified nil 2786 . 2794) (nil fontified nil 2785 . 2786) (nil fontified nil 2782 . 2785) (nil fontified nil 2781 . 2782) (nil fontified nil 2771 . 2781) (nil fontified nil 2770 . 2771) (nil fontified nil 2760 . 2770) (nil fontified nil 2757 . 2760) (nil fontified nil 2756 . 2757) (nil fontified nil 2754 . 2756) (nil fontified nil 2753 . 2754) (nil fontified nil 2752 . 2753) (nil fontified nil 2751 . 2752) (nil fontified nil 2730 . 2751) (nil fontified nil 2707 . 2730) (nil fontified nil 2693 . 2707) (nil fontified nil 2692 . 2693) (nil fontified nil 2691 . 2692) (nil fontified nil 2667 . 2691) (nil fontified nil 2641 . 2667) (nil fontified nil 2627 . 2641) (nil fontified nil 2624 . 2627) (nil fontified nil 2623 . 2624) (nil fontified nil 2621 . 2623) (nil fontified nil 2620 . 2621) (nil fontified nil 2619 . 2620) (nil fontified nil 2588 . 2619) (nil fontified nil 2587 . 2588) (nil fontified nil 2586 . 2587) (nil fontified nil 2582 . 2586) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2567 . 2580) (nil fontified nil 2566 . 2567) (nil fontified nil 2565 . 2566) (nil fontified nil 2526 . 2565) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2502 . 2524) (nil fontified nil 2500 . 2502) (nil fontified nil 2490 . 2500) (nil fontified nil 2488 . 2490) (nil fontified nil 2481 . 2488) (nil fontified nil 2480 . 2481) (nil fontified nil 2478 . 2480) (nil fontified nil 2476 . 2478) (nil fontified nil 2457 . 2476) (nil fontified nil 2443 . 2457) (nil fontified nil 2442 . 2443) (nil fontified nil 2429 . 2442) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2421 . 2427) (nil fontified nil 2418 . 2421) (nil fontified nil 2416 . 2418) (nil fontified nil 2413 . 2416) (nil fontified nil 2396 . 2413) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2390 . 2394) (nil fontified nil 2389 . 2390) (nil fontified nil 2388 . 2389) (nil fontified nil 2375 . 2388) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2331 . 2373) (nil fontified nil 2330 . 2331) (nil fontified nil 2329 . 2330) (nil fontified nil 2307 . 2329) (nil fontified nil 2305 . 2307) (nil fontified nil 2295 . 2305) (nil fontified nil 2293 . 2295) (nil fontified nil 2286 . 2293) (nil fontified nil 2285 . 2286) (nil fontified nil 2283 . 2285) (nil fontified nil 2281 . 2283) (nil fontified nil 2259 . 2281) (nil fontified nil 2237 . 2259) (nil fontified nil 2236 . 2237) (nil fontified nil 2234 . 2236) (nil fontified nil 2216 . 2234) (nil fontified nil 2202 . 2216) (nil fontified nil 2201 . 2202) (nil fontified nil 2200 . 2201) (nil fontified nil 2193 . 2200) (nil fontified nil 2174 . 2193) (nil fontified nil 2172 . 2174) (nil fontified nil 2170 . 2172) (nil fontified nil 2168 . 2170) (nil fontified nil 2163 . 2168) (nil fontified nil 2149 . 2163) (nil fontified nil 2148 . 2149) (nil fontified nil 2135 . 2148) (nil fontified nil 2134 . 2135) (nil fontified nil 2133 . 2134) (nil fontified nil 2127 . 2133) (nil fontified nil 2124 . 2127) (nil fontified nil 2122 . 2124) (nil fontified nil 2119 . 2122) (nil fontified nil 2102 . 2119) (nil fontified nil 2101 . 2102) (nil fontified nil 2100 . 2101) (nil fontified nil 2096 . 2100) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2074 . 2094) (nil fontified nil 2069 . 2074) (nil fontified nil 2067 . 2069) (nil fontified nil 2065 . 2067) (nil fontified nil 2044 . 2065) (nil fontified nil 2012 . 2044) (nil fontified nil 2010 . 2012) (nil fontified nil 2008 . 2010) (nil fontified nil 2007 . 2008) (nil fontified nil 2002 . 2007) (nil fontified nil 2000 . 2002) (nil fontified nil 1998 . 2000) (nil fontified nil 1974 . 1998) (nil fontified nil 1973 . 1974) (nil fontified nil 1956 . 1973) (nil fontified nil 1955 . 1956) (nil fontified nil 1954 . 1955) (nil fontified nil 1932 . 1954) (nil fontified nil 1930 . 1932) (nil fontified nil 1920 . 1930) (nil fontified nil 1918 . 1920) (nil fontified nil 1911 . 1918) (nil fontified nil 1910 . 1911) (nil fontified nil 1908 . 1910) (nil fontified nil 1906 . 1908) (nil fontified nil 1900 . 1906) (nil fontified nil 1886 . 1900) (nil fontified nil 1866 . 1886) (nil fontified nil 1864 . 1866) (nil fontified nil 1851 . 1864) (nil fontified nil 1849 . 1851) (nil fontified nil 1847 . 1849) (nil fontified nil 1845 . 1847) (nil fontified nil 1839 . 1845) (nil fontified nil 1826 . 1839) (nil fontified nil 1825 . 1826) (nil fontified nil 1824 . 1825) (nil fontified nil 1806 . 1824) (nil fontified nil 1804 . 1806) (nil fontified nil 1802 . 1804) (nil fontified nil 1799 . 1802) (nil fontified nil 1788 . 1799) (nil fontified nil 1787 . 1788) (nil fontified nil 1784 . 1787) (nil fontified nil 1773 . 1784) (nil fontified nil 1772 . 1773) (nil fontified nil 1771 . 1772) (nil fontified nil 1750 . 1771) (nil fontified nil 1749 . 1750) (nil fontified nil 1748 . 1749) (nil fontified nil 1747 . 1748) (nil fontified nil 1717 . 1747) (nil fontified nil 1716 . 1717) (nil fontified nil 1699 . 1716) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1642 . 1697) (nil fontified nil 1641 . 1642) (nil fontified nil 1639 . 1641) (nil fontified nil 1638 . 1639) (nil fontified nil 1633 . 1638) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1628 . 1631) (nil fontified nil 1626 . 1628) (nil fontified nil 1608 . 1626) (nil fontified nil 1607 . 1608) (nil fontified nil 1604 . 1607) (nil fontified nil 1594 . 1604) (nil fontified nil 1593 . 1594) (nil fontified nil 1592 . 1593) (nil fontified nil 1567 . 1592) (nil fontified nil 1566 . 1567) (nil fontified nil 1565 . 1566) (nil fontified nil 1564 . 1565) (nil fontified nil 1557 . 1564) (nil fontified nil 1556 . 1557) (nil fontified nil 1545 . 1556) (nil fontified nil 1544 . 1545) (nil fontified nil 1539 . 1544) (nil fontified nil 1532 . 1539) (nil fontified nil 1519 . 1532) (nil fontified nil 1518 . 1519) (nil fontified nil 1497 . 1518) (nil fontified nil 1496 . 1497) (nil fontified nil 1495 . 1496) (nil fontified nil 1473 . 1495) (nil fontified nil 1457 . 1473) (nil fontified nil 1455 . 1457) (nil fontified nil 1445 . 1455) (nil fontified nil 1443 . 1445) (nil fontified nil 1436 . 1443) (nil fontified nil 1421 . 1436) (nil fontified nil 1420 . 1421) (nil fontified nil 1413 . 1420) (nil fontified nil 1412 . 1413) (nil fontified nil 1409 . 1412) (nil fontified nil 1407 . 1409) (nil fontified nil 1373 . 1407) (nil fontified nil 1372 . 1373) (nil fontified nil 1369 . 1372) (nil fontified nil 1358 . 1369) (nil fontified nil 1357 . 1358) (nil fontified nil 1356 . 1357) (nil fontified nil 1330 . 1356) (nil fontified nil 1321 . 1330) (nil fontified nil 1319 . 1321) (nil fontified nil 1312 . 1319) (nil fontified nil 1309 . 1312) (nil fontified nil 1294 . 1309) (nil fontified nil 1293 . 1294) (nil fontified nil 1290 . 1293) (nil fontified nil 1281 . 1290) (nil fontified nil 1279 . 1281) (nil fontified nil 1278 . 1279) (nil fontified nil 1277 . 1278) (nil fontified nil 1239 . 1277) (nil fontified nil 1229 . 1239) (nil fontified nil 1227 . 1229) (nil fontified nil 1220 . 1227) (nil fontified nil 1217 . 1220) (nil fontified nil 1213 . 1217) (nil fontified nil 1194 . 1213) (nil fontified nil 1193 . 1194) (nil fontified nil 1190 . 1193) (nil fontified nil 1182 . 1190) (nil fontified nil 1097 . 1182) (nil fontified nil 1094 . 1097) (nil fontified nil 1083 . 1094) (nil fontified nil 1082 . 1083) (nil fontified nil 1072 . 1082) (nil fontified nil 1057 . 1072) (nil fontified nil 1055 . 1057) (nil fontified nil 1053 . 1055) (nil fontified nil 1051 . 1053) (nil fontified nil 1040 . 1051) (nil fontified nil 1026 . 1040) (nil fontified nil 1011 . 1026) (nil fontified nil 1009 . 1011) (nil fontified nil 1007 . 1009) (nil fontified nil 1005 . 1007) (nil fontified nil 991 . 1005) (nil fontified nil 977 . 991) (nil fontified nil 976 . 977) (nil fontified nil 975 . 976) (nil fontified nil 955 . 975) (nil fontified nil 942 . 955) (nil fontified nil 928 . 942) (nil fontified nil 913 . 928) (nil fontified nil 911 . 913) (nil fontified nil 909 . 911) (nil fontified nil 907 . 909) (nil fontified nil 888 . 907) (nil fontified nil 874 . 888) (nil fontified nil 873 . 874) (nil fontified nil 872 . 873) (nil fontified nil 855 . 872) (nil fontified nil 837 . 855) (nil fontified nil 823 . 837) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 815 . 821) (nil fontified nil 812 . 815) (nil fontified nil 810 . 812) (nil fontified nil 807 . 810) (nil fontified nil 805 . 807) (nil fontified nil 799 . 805) (nil fontified nil 785 . 799) (nil fontified nil 769 . 785) (nil fontified nil 767 . 769) (nil fontified nil 754 . 767) (nil fontified nil 752 . 754) (nil fontified nil 750 . 752) (nil fontified nil 748 . 750) (nil fontified nil 742 . 748) (nil fontified nil 729 . 742) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (nil fontified nil 712 . 727) (nil fontified nil 710 . 712) (nil fontified nil 708 . 710) (nil fontified nil 705 . 708) (nil fontified nil 697 . 705) (nil fontified nil 696 . 697) (nil fontified nil 693 . 696) (nil fontified nil 683 . 693) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 674 . 681) (nil fontified nil 673 . 674) (nil fontified nil 658 . 673) (nil fontified nil 657 . 658) (nil fontified nil 652 . 657) (nil fontified nil 645 . 652) (nil fontified nil 642 . 645) (nil fontified nil 631 . 642) (nil fontified nil 630 . 631) (nil fontified nil 627 . 630) (nil fontified nil 617 . 627) (nil fontified nil 616 . 617) (nil fontified nil 615 . 616) (nil fontified nil 608 . 615) (nil fontified nil 607 . 608) (nil fontified nil 596 . 607) (nil fontified nil 595 . 596) (nil fontified nil 590 . 595) (nil fontified nil 583 . 590) (nil fontified nil 580 . 583) (nil fontified nil 572 . 580) (nil fontified nil 571 . 572) (nil fontified nil 568 . 571) (nil fontified nil 558 . 568) (nil fontified nil 557 . 558) (nil fontified nil 547 . 557) (nil fontified nil 546 . 547) (nil fontified nil 497 . 546) (nil fontified nil 496 . 497) (nil fontified nil 490 . 496) (nil fontified nil 477 . 490) (nil fontified nil 476 . 477) (nil fontified nil 467 . 476) (nil fontified nil 462 . 467) (nil fontified nil 458 . 462) (nil fontified nil 457 . 458) (nil fontified nil 452 . 457) (nil fontified nil 451 . 452) (nil fontified nil 419 . 451) (nil fontified nil 409 . 419) (nil fontified nil 407 . 409) (nil fontified nil 400 . 407) (nil fontified nil 384 . 400) (nil fontified nil 362 . 384) (nil fontified nil 360 . 362) (nil fontified nil 350 . 360) (nil fontified nil 348 . 350) (nil fontified nil 341 . 348) (nil fontified nil 340 . 341) (nil fontified nil 338 . 340) (nil fontified nil 329 . 338) (nil fontified nil 328 . 329) (nil fontified nil 327 . 328) (nil fontified nil 319 . 327) (nil fontified nil 317 . 319) (nil fontified nil 314 . 317) (nil fontified nil 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 310 . 312) (nil fontified nil 309 . 310) (nil fontified nil 304 . 309) (nil fontified nil 302 . 304) (nil fontified nil 299 . 302) (nil fontified nil 298 . 299) (nil fontified nil 296 . 298) (nil fontified nil 291 . 296) (nil fontified nil 290 . 291) (nil fontified nil 275 . 290) (nil fontified nil 274 . 275) (nil fontified nil 272 . 274) (nil fontified nil 268 . 272) (268 . 2980)) nil (26051 34984 221835 840000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1568) (#("    " 0 4 (fontified t)) . -1502) (#("    " 0 4 (fontified t)) . -1482) (#("    " 0 4 (fontified t)) . -268) 192) nil (26051 34984 221785 534000) 0 nil])
([nil nil ((#("utility" 0 7 (face font-lock-constant-face fontified t)) . -337) (undo-tree-id585 . -6) (undo-tree-id586 . -7) (undo-tree-id587 . -7) (undo-tree-id588 . -6) (undo-tree-id589 . -6) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) (undo-tree-id595 . -6) (undo-tree-id596 . -6) (undo-tree-id597 . -6) (undo-tree-id598 . -6) (undo-tree-id599 . -6) (undo-tree-id600 . -6) (undo-tree-id601 . -6) (undo-tree-id602 . -6) (undo-tree-id603 . -6) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -6) (undo-tree-id608 . -6) (undo-tree-id609 . -7) (undo-tree-id610 . -7) (undo-tree-id611 . -7) (undo-tree-id612 . -7) (undo-tree-id613 . -7) (undo-tree-id614 . -7) (undo-tree-id615 . -7) (undo-tree-id616 . -7) 344 (t 26051 34984 235204 924000)) nil (26051 35298 532434 491000) 0 nil])
([nil nil ((337 . 342)) nil (26051 35298 532412 462000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-constant-face fontified t)) . -340) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -341) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 342) nil (26051 35298 532411 174000) 0 nil])
([nil nil ((340 . 341)) nil (26051 35298 532402 211000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-constant-face fontified t)) . -340) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) 341) nil (26051 35298 532400 522000) 0 nil])
([nil nil ((337 . 344) (#("cre" 0 3 (fontified nil)) . 337) (337 . 340) (#("crate::" 0 7 (fontified nil)) . -337) (337 . 344) (#("cre" 0 3 (face font-lock-constant-face fontified t)) . -337) (undo-tree-id531 . -3) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) 340) nil (26051 35298 532391 397000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -342) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#(":" 0 1 (fontified t)) . -343) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) 344 (t 26051 35298 578557 549000)) nil (26051 35299 894100 916000) 0 nil])
([nil nil ((#("utility" 0 7 (face font-lock-constant-face fontified t)) . -394) (undo-tree-id657 . -7) (undo-tree-id658 . -7) (undo-tree-id659 . -7) (undo-tree-id660 . -7) (undo-tree-id661 . -7) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -7) (undo-tree-id666 . -7) 401 (t 26051 35299 908557 630000)) nil (26051 35320 577797 569000) 0 nil])
([nil nil ((394 . 396)) nil (26051 35320 577789 683000) 0 nil])
([nil nil ((394 . 401) (#("cr" 0 2 (fontified nil)) . 394) (394 . 396) (#("crate::" 0 7 (fontified nil)) . -394) (394 . 401) (#("cr" 0 2 (face font-lock-constant-face fontified t)) . -394) (undo-tree-id646 . -2) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) 396) nil (26051 35320 577785 891000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -399) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#(":" 0 1 (fontified t)) . -400) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) 401 (t 26051 35320 591892 233000)) nil (26051 35321 488657 849000) 0 nil])
([nil nil ((20 . 27) (t 26051 35321 501892 289000)) nil (26051 35373 254993 851000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -24) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("s" 0 1 (fontified t)) . -25) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (#("h" 0 1 (fontified t)) . -26) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 27) nil (26051 35373 254991 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -20) 24) nil (26051 35373 254975 432000) 0 nil])
([nil nil ((23 . 28)) nil (26051 35373 254974 638000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -27) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) 28) nil (26051 35373 254973 332000) 0 nil])
([nil nil ((27 . 30)) nil (26051 35373 254412 526000) 0 nil])
([nil nil ((#("V" 0 1 (face font-lock-type-face fontified t)) . -29) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) 30) nil (26051 35373 254411 530000) 0 nil])
([nil nil ((29 . 30)) nil (26051 35373 254407 32000) 0 nil])
([nil nil ((29 . 31) (#("v" 0 1 (fontified nil)) . 29) (29 . 30) (#("vk" 0 2 (fontified nil)) . -29) (29 . 31) (#("v" 0 1 (fontified t)) . -29) (undo-tree-id689 . -1) (undo-tree-id690 . -1) 30) nil (26051 35373 254405 229000) 0 nil])
([nil nil ((31 . 33)) nil (26051 35373 254401 236000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -32) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) 33) nil (26051 35373 254397 477000) 0 nil])
([nil nil ((#("CString" 0 7 (face font-lock-type-face fontified t)) . -587) (undo-tree-id749 . -7) (undo-tree-id750 . -7) (undo-tree-id751 . -7) (undo-tree-id752 . -7) (undo-tree-id753 . -7) (undo-tree-id754 . -7) (undo-tree-id755 . -7) (undo-tree-id756 . -7) (undo-tree-id757 . -7) (undo-tree-id758 . -7) (undo-tree-id759 . -7) (undo-tree-id760 . -7) (undo-tree-id761 . -7) (undo-tree-id762 . -7) (undo-tree-id763 . -7) 594 (t 26051 35373 268562 135000)) nil (26051 35381 79658 973000) 0 nil])
([nil nil ((587 . 588)) nil (26051 35381 79648 547000) 0 nil])
([nil nil ((588 . 594)) nil (26051 35381 79647 395000) 0 nil])
([nil nil ((1 . 25) (587 . 587) (587 . 594) (#("CString" 0 7 (fontified nil)) . 587) (587 . 594) (#("CString (use std::ffi::CString)" 0 31 (fontified nil)) . -587) (587 . 618) (#("CString" 0 7 (face font-lock-type-face fontified t)) . -587) (undo-tree-id723 . -7) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -6) (undo-tree-id743 . -6) (undo-tree-id744 . -6) (undo-tree-id745 . -7) (undo-tree-id746 . -7) (undo-tree-id747 . -7) (undo-tree-id748 . -7) 594) nil (26051 35381 79643 42000) 0 nil])
([nil nil ((nil fontified t 2492 . 2494) (nil fontified t 2487 . 2492) (nil face font-lock-constant-face 2487 . 2492) (#("utility::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -2487) (2496 . 2503) (nil fontified t 2299 . 2301) (nil fontified t 2294 . 2299) (nil face font-lock-constant-face 2294 . 2299) (#("utility::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -2294) (2303 . 2310) (nil fontified t 1926 . 1928) (nil fontified t 1921 . 1926) (nil face font-lock-constant-face 1921 . 1926) (#("utility::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -1921) (1930 . 1937) (nil fontified t 1465 . 1467) (nil fontified t 1460 . 1465) (nil face font-lock-constant-face 1460 . 1465) (#("utility::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -1460) (1469 . 1476) (nil fontified t 1343 . 1345) (nil fontified t 1338 . 1343) (nil face font-lock-constant-face 1338 . 1343) (#("utility::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -1338) (1347 . 1354) (nil fontified t 1253 . 1255) (t 26051 35381 91895 948000) (nil fontified t 1248 . 1253) (t 26051 35381 91895 948000) (nil face font-lock-constant-face 1248 . 1253) (t 26051 35381 91895 948000) (#("utility::" 0 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . -1248) (t 26051 35381 91895 948000) (1257 . 1264) 1113 (t 26051 35381 91895 948000)) nil (26051 35430 187579 598000) 0 nil])
([nil nil ((#("void" 0 2 (fontified t) 2 4 (fontified t)) . -2085) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) 2089 (t 26051 35430 201898 960000)) nil (26051 35439 638319 826000) 0 nil])
([nil nil ((#("c_" 0 2 (fontified t)) . -2083) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) 2085) nil (26051 35439 638311 126000) 0 nil])
([nil nil ((2083 . 2089)) nil (26051 35439 638302 342000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2085) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#("o" 0 1 (fontified t)) . -2086) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#("i" 0 1 (fontified t)) . -2087) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("d" 0 1 (fontified t)) . -2088) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) 2089) nil (26051 35439 638300 154000) 0 nil])
([nil nil ((2085 . 2089)) nil (26051 35439 638279 701000) 0 nil])
([nil nil ((#("::ffi" 0 2 (fontified t) 2 5 (face font-lock-constant-face fontified t)) . -8) (undo-tree-id764 . -5) 13 (15 . 21) (22 . 31) (2083 . 2083) (2083 . 2089) (#("c_void" 0 6 (fontified nil)) . 2083) (2083 . 2089) (#("c_void (use std::ffi::c_void)" 0 29 (fontified nil)) . -2083) (2083 . 2112) (#("c_void" 0 6 (fontified t)) . -2083) (undo-tree-id765 . -6) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -5) (undo-tree-id790 . -5) (undo-tree-id791 . -6) (undo-tree-id792 . -6) (undo-tree-id793 . -6) (undo-tree-id794 . -6) 2089) nil (26051 35439 638275 1000) 0 nil])
([nil nil ((#("platforms" 0 9 (face font-lock-constant-face fontified t)) . -1355) (undo-tree-id858 . -6) (undo-tree-id859 . -6) (undo-tree-id860 . -9) (undo-tree-id861 . -9) (undo-tree-id862 . -6) (undo-tree-id863 . -6) (undo-tree-id864 . -6) (undo-tree-id865 . -6) (undo-tree-id866 . -6) (undo-tree-id867 . -6) (undo-tree-id868 . -6) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -6) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) (undo-tree-id883 . -6) (undo-tree-id884 . -6) (undo-tree-id885 . -9) (undo-tree-id886 . -9) (undo-tree-id887 . -9) 1364 (t 26051 35439 651899 540000)) nil (26051 35515 563103 215000) 0 nil])
([nil nil ((1355 . 1356)) nil (26051 35515 563083 352000) 0 nil])
([nil nil ((1355 . 1364) (#("p" 0 1 (fontified nil)) . 1355) (1355 . 1356) (#("platforms" 0 9 (fontified nil)) . -1355) (1355 . 1364) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -1355) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) 1356) nil (26051 35515 563079 320000) 0 nil])
([nil nil ((302 . 308) (t 26051 35515 578570 867000)) nil (26051 35543 195192 514000) 0 nil])
([nil nil ((#("create" 0 6 (fontified t)) . -302) (undo-tree-id967 . -6) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -2) (undo-tree-id974 . -2) (undo-tree-id975 . -2) (undo-tree-id976 . -3) (undo-tree-id977 . -3) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -5) (undo-tree-id984 . -5) (undo-tree-id985 . -5) (undo-tree-id986 . -6) (undo-tree-id987 . -6) (undo-tree-id988 . -6) (undo-tree-id989 . -6) (undo-tree-id990 . -6) 308) nil (26051 35543 195190 844000) 0 nil])
([nil nil ((302 . 303)) nil (26051 35543 195175 346000) 0 nil])
([nil nil ((302 . 308) (#("s" 0 1 (fontified nil)) . 302) (302 . 303) (#("self::" 0 6 (fontified nil)) . -302) (302 . 308) (#("s" 0 1 (fontified t)) . -302) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) 303) nil (26051 35543 195173 584000) 0 nil])
([nil nil ((308 . 314)) nil (26051 35543 194869 427000) 0 nil])
([nil nil ((#("create" 0 6 (fontified t)) . -308) (undo-tree-id937 . -6) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -3) (undo-tree-id949 . -3) (undo-tree-id950 . -3) (undo-tree-id951 . -3) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -5) (undo-tree-id955 . -5) (undo-tree-id956 . -6) (undo-tree-id957 . -6) (undo-tree-id958 . -6) (undo-tree-id959 . -6) (undo-tree-id960 . -6) 314) nil (26051 35543 194867 790000) 0 nil])
([nil nil ((#("self::" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . -302) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) 308) nil (26051 35543 194851 317000) 0 nil])
([nil nil ((302 . 303)) nil (26051 35543 194832 346000) 0 nil])
([nil nil ((302 . 310) (#("I" 0 1 (fontified nil)) . 302) (302 . 303) (#("Instance" 0 8 (fontified nil)) . -302) (302 . 310) (#("I" 0 1 (face font-lock-type-face fontified t)) . -302) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) 303) nil (26051 35543 194830 908000) 0 nil])
([nil nil ((310 . 312)) nil (26051 35543 194825 83000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 328 334 nil nil nil t #s(yas--exit 335 nil))) #s(yas--exit 335 nil) 4 nil #s(yas--field 1 328 334 nil nil nil t #s(yas--exit 335 nil)) nil nil)) (312 . 334) (#("create_instance(${1:entry})$0" 0 29 (fontified nil)) . 312) (312 . 341) (#("create_instance(…)" 0 18 (fontified nil)) . -312) (312 . 330)) nil (26051 35543 194823 919000) 0 nil])
([nil nil ((329 . 330) (#("entry" 0 5 (fontified nil)) . 329) (undo-tree-id901 . -5) (328 . 329)) nil (26051 35543 194822 325000) 0 nil])
([nil nil ((329 . 334) (#("e" 0 1 (fontified nil)) . 329) (undo-tree-id888 . -1) (329 . 330) (#("entry" 0 5 (fontified nil)) . -329) (undo-tree-id889 . -5) (329 . 334) (#("e" 0 1 (fontified t)) . -329) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) 330) nil (26051 35543 194818 931000) 0 nil])
([nil nil ((apply yas--snippet-revive 312 335 #s(yas--snippet nil (#s(yas--field 1 328 334 nil nil nil t #s(yas--exit 335 nil))) #s(yas--exit 335 nil) 4 nil #s(yas--field 1 328 334 nil nil nil t #s(yas--exit 335 nil)) nil nil))) nil (26051 35543 194801 514000) 0 nil])
([nil nil ((335 . 336)) nil (26051 35543 194797 806000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -266) (undo-tree-id991 . -1) (undo-tree-id992 . -1) 267 (t 26051 35543 208572 562000)) nil (26051 35607 964887 430000) 0 nil])
([nil nil ((337 . 345) (#("        " 0 8 (fontified nil)) . 336) (undo-tree-id1029 . -8) (undo-tree-id1030 . -8) (undo-tree-id1031 . -8) (undo-tree-id1032 . -8) (335 . 345) (t 26051 35608 11909 879000)) nil (26051 35626 393173 881000) 0 nil])
([nil nil ((345 . 346)) nil (26051 35626 393170 138000) 0 nil])
([nil nil ((345 . 353) (#("I" 0 1 (fontified nil)) . 345) (345 . 346) (#("Instance" 0 8 (fontified nil)) . -345) (345 . 353) (#("I" 0 1 (face font-lock-type-face fontified t)) . -345) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) 346) nil (26051 35626 393168 813000) 0 nil])
([nil nil ((353 . 356)) nil (26051 35626 393163 936000) 0 nil])
([nil nil ((357 . 365) (#("            " 0 12 (fontified nil)) . 356) (undo-tree-id1020 . -8) (undo-tree-id1021 . -8) (undo-tree-id1022 . -8) (undo-tree-id1023 . -8) (364 . 368) (355 . 365)) nil (26051 35626 393162 724000) 0 nil])
([nil nil ((356 . 368)) nil (26051 35626 393159 65000) 0 nil])
([nil nil ((368 . 369)) nil (26051 35626 393158 340000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -368) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) 369) nil (26051 35626 393157 399000) 0 nil])
([nil nil ((368 . 369)) nil (26051 35626 393154 119000) 0 nil])
([nil nil ((368 . 373) (#("e" 0 1 (fontified nil)) . 368) (368 . 369) (#("entry" 0 5 (fontified nil)) . -368) (368 . 373) (#("e" 0 1 (fontified t)) . -368) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) 369) nil (26051 35626 393153 73000) 0 nil])
([nil nil ((373 . 375)) nil (26051 35626 393148 822000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -374) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 375) nil (26051 35626 393147 703000) 0 nil])
([nil nil ((374 . 387)) nil (26051 35626 393140 634000) 0 nil])
([nil nil ((387 . 388)) nil (26051 35626 393140 45000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -387) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 388) nil (26051 35626 393139 180000) 0 nil])
([nil nil ((387 . 388)) nil (26051 35626 393135 127000) 0 nil])
([nil nil ((387 . 395) (#("i" 0 1 (fontified nil)) . 387) (387 . 388) (#("instance" 0 8 (fontified nil)) . -387) (387 . 395) (#("i" 0 1 (fontified t)) . -387) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) 388) nil (26051 35626 393132 706000) 0 nil])
([nil nil ((395 . 396)) nil (26051 35626 393118 315000) 0 nil])
([nil nil ((345 . 349) (t 26051 35626 408577 677000)) nil (26051 35654 857347 577000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-type-face fontified t)) . -347) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -348) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 349) nil (26051 35654 857345 418000) 0 nil])
([nil nil ((347 . 350)) nil (26051 35654 857325 482000) 0 nil])
([nil nil ((411 . 412)) nil (26051 35654 857324 598000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -411) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) 412) nil (26051 35654 857322 103000) 0 nil])
([nil nil ((411 . 412)) nil (26051 35654 857306 7000) 0 nil])
([nil nil ((#("Some" 0 4 (face font-lock-type-face fontified t)) . -345) (undo-tree-id1078 . -2) (undo-tree-id1079 . -4) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -3) (undo-tree-id1104 . -4) 349 (t 26051 35654 871912 754000)) nil (26051 35660 5426 825000) 0 nil])
([nil nil ((345 . 347)) nil (26051 35660 5407 40000) 0 nil])
([nil nil ((apply yas--snippet-revive 345 347 #s(yas--snippet nil nil #s(yas--exit 347 nil) 5 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 347 nil) 5 nil nil nil nil)) (345 . 347) (#("Ok$0" 0 4 (fontified nil)) . 345) (345 . 349) (#("Ok" 0 2 (fontified nil)) . 345) (345 . 347) (#("Ok" 0 2 (face font-lock-type-face fontified t)) . -345) (undo-tree-id1071 . -2) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) 347) nil (26051 35660 5402 261000) 0 nil])
([nil nil ((3105 . 3106) (t 26051 35660 18579 738000)) nil (26051 37550 524126 564000) 0 nil])
([nil nil ((3106 . 3109)) nil (26051 37550 524125 840000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3111 3128 nil nil nil t #s(yas--exit 3135 nil))) #s(yas--exit 3135 nil) 26 nil #s(yas--field 1 3111 3128 nil nil nil t #s(yas--exit 3135 nil)) nil nil)) (3106 . 3120) (#("impl $1 {
    $0
}" 0 18 (fontified nil)) . 3106) (3106 . 3124) (#("imp" 0 3 (fontified nil)) . 3106) (3106 . 3109) (#("impl" 0 4 (fontified nil)) . -3106) (3106 . 3110) (#("imp" 0 3 (fontified t)) . -3106) (undo-tree-id1180 . -3) (undo-tree-id1181 . -1) (undo-tree-id1182 . -3) (undo-tree-id1183 . -3) 3109) nil (26051 37550 524124 633000) 0 nil])
([nil nil ((3111 . 3112)) nil (26051 37550 524120 364000) 0 nil])
([nil nil ((3111 . 3115) (#("D" 0 1 (fontified nil)) . 3111) (undo-tree-id1172 . -1) (3111 . 3112) (#("Drop" 0 4 (fontified nil)) . -3111) (undo-tree-id1173 . -4) (3111 . 3115) (#("D" 0 1 (face font-lock-type-face fontified t)) . -3111) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) 3112) nil (26051 37550 524119 131000) 0 nil])
([nil nil ((3115 . 3121)) nil (26051 37550 524112 372000) 0 nil])
([nil nil ((3120 . 3128) (#("I" 0 1 (fontified nil)) . 3120) (undo-tree-id1164 . -1) (3120 . 3121) (#("Instance" 0 8 (fontified nil)) . -3120) (undo-tree-id1165 . -8) (3120 . 3128) (#("I" 0 1 (face font-lock-type-face fontified t)) . -3120) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) 3121) nil (26051 37550 524111 82000) 0 nil])
([nil nil ((apply yas--snippet-revive 3106 3137 #s(yas--snippet nil (#s(yas--field 1 3111 3128 nil nil nil t #s(yas--exit 3135 nil))) #s(yas--exit 3135 nil) 26 nil #s(yas--field 1 3111 3128 nil nil nil t #s(yas--exit 3135 nil)) nil nil))) nil (26051 37550 524104 744000) 0 nil])
([nil nil ((3135 . 3137)) nil (26051 37550 524104 118000) 0 nil])
([nil nil ((apply yas--snippet-revive 3135 3170 #s(yas--snippet nil nil #s(yas--exit 3164 nil) 27 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3164 nil) 27 nil nil nil nil)) (3135 . 3170) (#("fn drop(&mut self) {
        $0
    }" 0 37 (fontified nil)) . 3135) (3167 . 3171) (3156 . 3164) (#("    " 0 4 (fontified nil)) . 3156) (3135 . 3164) (#("fn" 0 2 (fontified nil)) . 3135) (3135 . 3137) (#("fn drop(..)" 0 11 (fontified nil)) . -3135) (3135 . 3146) (#("fn" 0 2 (face font-lock-keyword-face fontified t)) . -3135) (undo-tree-id1160 . -2) (undo-tree-id1161 . -1) (undo-tree-id1162 . -2) (undo-tree-id1163 . -2) 3137) nil (26051 37550 524102 681000) 0 nil])
([nil nil ((3164 . 3165)) nil (26051 37550 524097 697000) 0 nil])
([nil nil ((3164 . 3168) (#("s" 0 1 (fontified nil)) . 3164) (3164 . 3165) (#("self" 0 4 (fontified nil)) . -3164) (3164 . 3168) (#("s" 0 1 (fontified t)) . -3164) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) 3165) nil (26051 37550 524096 611000) 0 nil])
([nil nil ((3168 . 3170)) nil (26051 37550 524092 670000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -3169) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) 3170) nil (26051 37550 524091 853000) 0 nil])
([nil nil ((3169 . 3170)) nil (26051 37550 524089 896000) 0 nil])
([nil nil ((3169 . 3177) (#("i" 0 1 (fontified nil)) . 3169) (3169 . 3170) (#("instance" 0 8 (fontified nil)) . -3169) (3169 . 3177) (#("i" 0 1 (fontified t)) . -3169) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) 3170) nil (26051 37550 524088 473000) 0 nil])
([nil nil ((3177 . 3179)) nil (26051 37550 524078 15000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3195 3199 nil nil nil t #s(yas--exit 3200 nil))) #s(yas--exit 3200 nil) 28 nil #s(yas--field 1 3195 3199 nil nil nil t #s(yas--exit 3200 nil)) nil nil)) (3178 . 3216) (#("destroy_instance(${1:allocation_callbacks})$0" 0 45 (fontified nil)) . 3178) (3178 . 3223) (#("d" 0 1 (fontified nil)) . 3178) (3178 . 3179) (#("destroy_instance(…)" 0 19 (fontified nil)) . -3178) (3178 . 3197) (#("d" 0 1 (fontified t)) . -3178) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) 3179) nil (26051 37550 524076 604000) 0 nil])
([nil nil ((#("allocation_callbacks" 0 20 (fontified nil)) . 3196) (undo-tree-id1135 . -20) (3195 . 3196)) nil (26051 37550 524071 448000) 0 nil])
([nil nil ((apply yas--snippet-revive 3195 3199 #s(yas--snippet nil nil #s(yas--exit 3199 nil) 29 nil nil #s(yas--field 1 3195 3199 nil nil nil t #s(yas--exit 3200 nil)) nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3199 nil) 29 nil nil #s(yas--field 1 3195 3199 nil nil nil t #s(yas--exit 3200 nil)) nil)) (3195 . 3199) (#("None$0" 0 6 (fontified nil)) . 3195) (undo-tree-id1123 . -6) (3195 . 3201) (#("N" 0 1 (fontified nil)) . 3195) (undo-tree-id1124 . -1) (3195 . 3196) (#("None" 0 4 (fontified nil)) . -3195) (undo-tree-id1125 . -4) (3195 . 3199) (#("N" 0 1 (face font-lock-type-face fontified t)) . -3195) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) 3196) nil (26051 37550 524068 507000) 0 nil])
([nil nil ((apply yas--snippet-revive 3178 3200 #s(yas--snippet nil (#s(yas--field 1 3195 3199 nil nil nil t #s(yas--exit 3200 nil))) #s(yas--exit 3200 nil) 28 nil #s(yas--field 1 3195 3199 nil nil nil t #s(yas--exit 3200 nil)) nil nil))) nil (26051 37550 523787 687000) 0 nil])
([nil nil ((3200 . 3201)) nil (26051 37550 523787 75000) 0 nil])
([nil nil ((3164 . 3169)) nil (26051 37550 523786 390000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3167) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (#("a" 0 1 (fontified t)) . -3168) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) 3169) nil (26051 37550 523784 141000) 0 nil])
([nil nil ((3167 . 3172)) nil (26051 37550 523764 219000) 0 nil])
([nil nil ((3172 . 3185)) nil (26051 37550 523763 656000) 0 nil])
([nil nil ((3222 . 3223)) nil (26051 37550 523762 958000) 0 nil])
([nil nil ((3222 . 3231)) nil (26051 37550 523761 269000) 0 nil])
([nil nil ((3240 . 3241) 3231) nil (26051 37550 523757 137000) 0 nil])
([nil nil ((93 . 95) (t 26051 37550 538695 798000)) nil (26051 39746 780173 542000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -94) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) 95) nil (26051 39746 780172 146000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -93) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) 94) nil (26051 39746 780163 363000) 0 nil])
([nil nil ((93 . 95)) nil (26051 39746 780149 311000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -94) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 95) nil (26051 39746 780147 786000) 0 nil])
([nil nil ((94 . 97)) nil (26051 39746 780136 998000) 0 nil])
([nil nil ((120 . 124)) nil (26051 39746 780132 488000) 0 nil])
([nil nil ((3112 . 3116) (#("    " 0 4 (fontified nil)) . 3111) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (3110 . 3116) (t 26051 39746 825496 312000)) nil (26051 40642 341478 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3222 . 3223) (nil fontified nil 3222 . 3223) (nil fontified nil 3218 . 3222) (nil fontified nil 3217 . 3218) (nil fontified nil 3216 . 3217) (nil fontified nil 3208 . 3216) (nil fontified nil 3206 . 3208) (nil fontified nil 3205 . 3206) (nil fontified nil 3201 . 3205) (nil fontified nil 3200 . 3201) (nil fontified nil 3185 . 3200) (nil fontified nil 3184 . 3185) (nil fontified nil 3175 . 3184) (nil fontified nil 3174 . 3175) (nil fontified nil 3170 . 3174) (nil fontified nil 3158 . 3170) (nil fontified nil 3157 . 3158) (nil fontified nil 3156 . 3157) (nil fontified nil 3155 . 3156) (nil fontified nil 3149 . 3155) (nil fontified nil 3141 . 3149) (nil fontified nil 3140 . 3141) (nil fontified nil 3139 . 3140) (nil fontified nil 3138 . 3139) (nil fontified nil 3137 . 3138) (nil fontified nil 3133 . 3137) (nil fontified nil 3132 . 3133) (nil fontified nil 3129 . 3132) (nil fontified nil 3128 . 3129) (nil fontified nil 3127 . 3128) (nil fontified nil 3123 . 3127) (nil fontified nil 3122 . 3123) (nil fontified nil 3120 . 3122) (nil fontified nil 3116 . 3120) (3116 . 3223)) nil (26051 40642 341473 616000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3116) (undo-tree-id1220 . -1) 3117) nil (26051 40642 341467 31000) 0 nil])
([nil nil ((3116 . 3120)) nil (26051 40642 341455 708000) 0 nil])
([nil nil ((apply -21 3227 3383 undo--wrap-and-run-primitive-undo 3227 3383 ((3378 . 3381) (3369 . 3372) (3356 . 3359) (3303 . 3306) (3283 . 3286) (3255 . 3258) (3227 . 3230)))) nil (26051 40888 71512 184000) 0 nil])
([nil nil ((3140 . 3149) (t 26051 40888 85565 688000)) nil (26051 42483 87118 409000) 0 nil])
([nil nil ((3149 . 3153)) nil (26051 42483 87117 668000) 0 nil])
([nil nil ((3149 . 3156) (#("trac" 0 4 (fontified nil)) . 3149) (3149 . 3153) (#("tracing" 0 7 (fontified nil)) . -3149) (3149 . 3156) (#("trac" 0 4 (fontified t)) . -3149) (undo-tree-id1268 . -4) (undo-tree-id1269 . -1) (undo-tree-id1270 . -2) (undo-tree-id1271 . -2) (undo-tree-id1272 . -3) (undo-tree-id1273 . -3) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) 3153) nil (26051 42483 87116 132000) 0 nil])
([nil nil ((3156 . 3159)) nil (26051 42483 87108 803000) 0 nil])
([nil nil ((apply yas--snippet-revive 3158 3165 #s(yas--snippet nil nil #s(yas--exit 3164 nil) 66 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 3164 nil) 66 nil nil nil nil)) (3158 . 3165) (#("info!($0)" 0 9 (fontified nil)) . 3158) (3158 . 3167) (#("i" 0 1 (fontified nil)) . 3158) (3158 . 3159) (#("info!(…)" 0 8 (fontified nil)) . -3158) (3158 . 3166) (#("i" 0 1 (fontified t)) . -3158) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) 3159) nil (26051 42483 87107 564000) 0 nil])
([nil nil ((3164 . 3167)) nil (26051 42483 87103 512000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -3165) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3166) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) 3167) nil (26051 42483 87102 573000) 0 nil])
([nil nil ((3165 . 3166)) nil (26051 42483 87098 270000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -3165) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) 3166) nil (26051 42483 87097 446000) 0 nil])
([nil nil ((3165 . 3166)) nil (26051 42483 87095 288000) 0 nil])
([nil nil ((3165 . 3172)) nil (26051 42483 87094 720000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -3170) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -3171) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) 3172) nil (26051 42483 87093 570000) 0 nil])
([nil nil ((#("distr" 0 5 (face font-lock-string-face fontified t)) . -3165) (undo-tree-id1232 . -5) (undo-tree-id1233 . -1) (undo-tree-id1234 . -2) (undo-tree-id1235 . -3) (undo-tree-id1236 . -3) (undo-tree-id1237 . -3) (undo-tree-id1238 . -4) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) (undo-tree-id1243 . -5) (undo-tree-id1244 . -5) (undo-tree-id1245 . -5) 3170) nil (26051 42483 87086 343000) 0 nil])
([nil nil ((3165 . 3168)) nil (26051 42483 87077 156000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -3166) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -3167) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) 3168) nil (26051 42483 87076 201000) 0 nil])
([nil nil ((3166 . 3171)) nil (26051 42483 87070 970000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-string-face fontified t)) . -3170) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) 3171) nil (26051 42483 87069 594000) 0 nil])
([nil nil ((3170 . 3180)) nil (26051 42483 87059 277000) 0 nil])
([nil nil ((3180 . 3188)) nil (26051 42483 87058 73000) 0 nil])
([nil nil ((3190 . 3191)) nil (26051 42483 87054 271000) 0 nil])
([nil nil ((apply 21 3278 3412 undo--wrap-and-run-primitive-undo 3278 3412 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3411) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3405) (#<marker at 3472 in instance.rs> . -3) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3395) (#<marker at 3459 in instance.rs> . -2) (#<marker at 3459 in instance.rs> . -1) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3345) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3328) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3303) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3278)))) nil (26051 43048 927119 100000) 0 nil])
([nil nil ((3327 . 3336)) nil (26051 43048 927118 468000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3385 . 3386) (nil fontified nil 3385 . 3386) (nil fontified nil 3384 . 3385) (nil fontified nil 3359 . 3384) (nil fontified nil 3358 . 3359) (nil fontified nil 3353 . 3358) (nil fontified nil 3351 . 3353) (nil fontified nil 3344 . 3351) (nil fontified nil 3336 . 3344) (3336 . 3386)) nil (26051 43048 927117 564000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3336) 3386) nil (26051 43048 927115 412000) 0 nil])
([nil nil ((#("Destroying" 0 10 (face font-lock-string-face fontified t)) . -3352) (undo-tree-id1278 . -10) (undo-tree-id1279 . -10) 3362) nil (26051 43048 927113 364000) 0 nil])
([nil nil ((3352 . 3360)) nil (26051 43048 927100 648000) 0 nil])
([nil nil ((apply -24 3278 3486 undo--wrap-and-run-primitive-undo 3278 3486 ((3481 . 3484) (3472 . 3475) (3459 . 3462) (3406 . 3409) (3386 . 3389) (3334 . 3337) (3306 . 3309) (3278 . 3281)))) nil (26051 43211 448364 250000) 0 nil])
([nil nil ((3278 . 3280) (t 26051 43211 449040 473000)) nil (26051 44459 740809 408000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3279) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) 3280) nil (26051 44459 740807 534000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . -3278) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) 3279) nil (26051 44459 740800 825000) 0 nil])
nil
